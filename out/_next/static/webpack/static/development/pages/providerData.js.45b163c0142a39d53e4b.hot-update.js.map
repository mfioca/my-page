{"version":3,"file":"static/webpack/static\\development\\pages\\providerData.js.45b163c0142a39d53e4b.hot-update.js","sources":["webpack:///./pages/providerData.js","webpack:///./pages/provider_data/prividerCompliance.js"],"sourcesContent":["import React from 'react'\r\nimport Layout from '../components/layout.js'\r\nimport { Row, Col, Table, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap'\r\nimport { CustomJumbo, DataFilter } from './customComponents'\r\nimport ProviderList from './provider_data/providerImport.js'\r\nimport Example from './provider_data/prividerCompliance.js'\r\nimport classnames from 'classnames';\r\n\r\n\r\nvar data = require('./provider_data/provider.json');\r\n\r\nfunction Providerinfo() {\r\n    return (\r\n        <div >\r\n            <Row>\r\n                <Col className=\"px-5\">\r\n                    <h4 className=\"text-center p-2\"><b><u>Provider Totals</u></b></h4> \r\n                    <Table striped bordered size=\"sm\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Total Transportation Providers:</th>\r\n                                <th>{data.length}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Transportation Companies:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1= 'Type'\r\n                                        Value1= 'Provider'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Volunteer Drivers:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Type'\r\n                                        Value1 = 'Volunteer Driver'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Central Region Providers:</th>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Transportation Companies:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Type'\r\n                                        Value1 = 'Provider'\r\n                                        Filter2 = 'Region'\r\n                                        Value2 = 'Central'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Volunteer Drivers:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Type'\r\n                                        Value1 = 'Volunteer Driver'\r\n                                        Filter2 = 'Region'\r\n                                        Value2 = 'Central'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>SouthWest Region:</th>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Transportation Companies:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Type'\r\n                                        Value1 = 'Provider'\r\n                                        Filter2 = 'Region'\r\n                                        Value2 = 'SouthWest'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Volunteer Drivers:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Type'\r\n                                        Value1 = 'Volunteer Driver'\r\n                                        Filter2 = 'Region'\r\n                                        Value2 = 'SouthWest'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>East Region:</th>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Transportation Companies:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Type'\r\n                                        Value1 = 'Provider'\r\n                                        Filter2 = 'Region'\r\n                                        Value2 = 'East'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Volunteer Drivers:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Type'\r\n                                        Value1 = 'Volunteer Driver'\r\n                                        Filter2 = 'Region'\r\n                                        Value2 = 'East'/>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <style jsx>{`\r\n                            td:nth-child(odd) {\r\n                                text-align: right;\r\n                            },\r\n                            td:nth-child(even) {\r\n                                text-align: center;\r\n                                widtH: 70px;\r\n                            }\r\n                            th {\r\n                                aligh: center,\r\n                            }\r\n                        `}\r\n                        </style> \r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"px-5\">\r\n                    <h4 className=\"text-center p-2\"><b><u>Level of Service Totals</u></b></h4>\r\n                    <Table striped bordered size=\"sm\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th colSpan=\"2\">All Regions</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Amb'\r\n                                        Value1 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'WCHR'\r\n                                        Value1 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Stretcher'\r\n                                        Value1 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colSpan=\"2\">Central</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'\r\n                                        Filter2 = 'Amb'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'\r\n                                        Filter2 = 'WCHR'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'\r\n                                        Filter2 = 'Stretcher'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colSpan=\"2\">SouthWest</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'\r\n                                        Filter2 = 'Amb'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'\r\n                                        Filter2 = 'WCHR'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'\r\n                                        Filter2 = 'Stretcher'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colSpan=\"2\">East</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'\r\n                                        Filter2 = 'Amb'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'\r\n                                        Filter2 = 'WCHR'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><DataFilter\r\n                                        Info = {data}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'\r\n                                        Filter2 = 'Stretcher'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <style jsx>{`\r\n                            {\r\n                                text-align: center;\r\n                                width: 70px;\r\n                            }\r\n                            th {\r\n                                aligh: center,\r\n                            }\r\n                        `}\r\n                        </style>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </div>  \r\n    );\r\n}\r\n\r\n\r\nclass ProviderData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            activeTab: '2'\r\n        };\r\n    }\r\n    \r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n            activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <CustomJumbo\r\n                    Title=\"Provider List\"\r\n                    ImgUrl=\"noimage\"\r\n                    Caption1Style='lead text-center'\r\n                    Caption1=\"this is data imported from local json files. It will recreate tracking\r\n                        spreadsheets I created at one of my previous jobs. Information displayed has\r\n                        been randomly generated.\"\r\n                    Caption2Style='text-center'\r\n                    Caption2=\"I used react-table dependency to build the data table. Altering formatting\r\n                        to match my spreadsheet.\"\r\n                />\r\n                <Nav tabs>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '1' })}\r\n                            onClick={() => { this.toggle('1'); }} style={{cursor: \"pointer\"}}\r\n                            >\r\n                                Network\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '2' })}\r\n                            onClick={() => { this.toggle('2'); }} style={{cursor: \"pointer\"}}\r\n                            >\r\n                            Compliance\r\n                        </NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                        <Providerinfo />\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col xs=\"10\" className=\"mb-3\" >\r\n                                <ProviderList />\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                        <h5 className=\"text-center m-3\">\r\n                            This page under construction.  \r\n                        </h5>\r\n                        <p className=\"text-center m-3\">\r\n                            All information has been randomly generated from a JSON \r\n                            Generator tool found online. This includes Names, emails, \r\n                            phone numbers, addresses and dates.\r\n                        </p>\r\n                        <Example />\r\n                    </TabPane>\r\n                </TabContent>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProviderData;","import React from 'react'\r\nimport { Row, Col, Table } from 'reactstrap'\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nvar data2 = require('./Compliance.json');\r\n\r\nclass DateCheck extends React.Component {\r\n    render() {\r\n        var date = this.props.Date;\r\n        if (date < \"2019-09-22\") {\r\n            return (\r\n                <span className=\"bg-danger text-white\">{date}</span>\r\n            )\r\n        } else if (date < \"2019-10-22\" && date > \"2019-09-22\") {\r\n            return (\r\n                <span className=\"bg-warning text-white\">{date}</span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span>{date}</span>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Example extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            dropdownOpen: false,\r\n            value: 'ACCEL'\r\n        };\r\n    }\r\n  \r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            dropdownOpen: !prevState.dropdownOpen\r\n        }));\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const test = data2.filter(data2 => data2.company === this.state.value);\r\n        const test2 = test[0];\r\n        \r\n\r\n        return (\r\n            <div className=\"ml-5 mt-5\">\r\n                <h1 className=\"mt-5 text-center\">Provider Compliance Report</h1>\r\n                <h3 className=\"mt-2 mb-5 text-center\">Report Date: 9/22/2019</h3>\r\n                <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                    <DropdownToggle caret>\r\n                        Provider List\r\n                    </DropdownToggle>\r\n                    <DropdownMenu\r\n                        modifiers={{\r\n                            setMaxHeight: {\r\n                                enabled: true,\r\n                                order: 890,\r\n                                fn: (data) => {\r\n                                return {\r\n                                    ...data,\r\n                                    styles: {\r\n                                    ...data.styles,\r\n                                    overflow: 'auto',\r\n                                    maxHeight: 200  ,\r\n                                    },\r\n                                };\r\n                                },\r\n                            },\r\n                        }}\r\n                    >\r\n                        {data2.sort((a, b) => {\r\n                                const One = a.company.toUpperCase();\r\n                                const Two = b.company.toUpperCase();\r\n                            \r\n                                return (One < Two) ? -1 : (One > Two) ? 1 : 0;\r\n                            })\r\n                            .map(TP => (\r\n                                <DropdownItem className=\"Btn\" key={TP.company} onClick={this.handleChange}\r\n                                value={TP.company}>\r\n                                    {TP.company}\r\n                                </DropdownItem>\r\n                            ))\r\n                        }\r\n                    </DropdownMenu>\r\n                </Dropdown>\r\n                <div className=\"mt-5\">\r\n                    <p>Provider: {this.state.value}</p>\r\n                    <p>\r\n                        <span className=\"ml-5\">email: {test2.email}, </span>\r\n                        <span className=\"ml-5\">phone: {test2.phone}, </span>\r\n                        <span className=\"ml-5\">address: {test2.address}, </span>\r\n                    </p>\r\n                    <p>Insurance:</p>\r\n                        {\r\n                            test2.insurance.map(insurance => (\r\n                                <span className=\"ml-5\" key={insurance.type}>\r\n                                    <span className=\"ml-5\">{insurance.type}</span>\r\n                                    <span className=\"ml-5\">{insurance.company}</span>\r\n                                    <span className=\"ml-5\">{insurance.end}</span>\r\n                                </span>\r\n                            ))\r\n                        }\r\n                    <h2 className=\"mt-5\">Drivers:</h2>\r\n                    {test2.drivers.map(driver => (\r\n                        <div>\r\n                            <Row xs=\"auto\" className=\"p-0\" key={driver.id}>\r\n                                <div className=\"d-inline-block h-25 text-center mx-5\">\r\n                                    <h3>{driver.name}</h3>\r\n                                </div>\r\n                                <div className=\"d-inline-block h-25 text-center mx-5 pt-2\">\r\n                                    <p>License State: {driver.license.state}</p>\r\n                                </div>\r\n                                <div className=\"d-inline-block h-25 text-center mx-5 pt-2\">\r\n                                    <p>License Exp: &nbsp;\r\n                                        <DateCheck Date={driver.license.exp} />\r\n                                    </p>\r\n                                </div>\r\n                            </Row>\r\n                            <Row className=\"ml-5\">\r\n                                <Col className=\"justify-content-center\">\r\n                                    <p>Training:</p>\r\n                                    <Table bordered className=\"w-75\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Type:</th>\r\n                                                <th>Company:</th>\r\n                                                <th>Exp date</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {driver.training.map(tr => (\r\n                                                <tr key={tr.type}>\r\n                                                    <td>Type: {tr.type}: </td>\r\n                                                    <td>{tr.company}</td>\r\n                                                    <td>\r\n                                                        <DateCheck Date = {tr.end} />  \r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                                <Col >\r\n                                    <p>Screening:</p>\r\n                                    <Table bordered className=\"w-75\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Type:</th>\r\n                                                <th>Exp date</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {driver.screenings.map(scr => (\r\n                                                <tr key={scr.type}>\r\n                                                    <td>{scr.type}</td>\r\n                                                    <td>\r\n                                                        <DateCheck Date = {scr.end} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Example;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA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","sourceRoot":""}