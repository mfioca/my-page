{"version":3,"file":"static/webpack/static\\development\\pages\\providerData.js.c43fd88cdf1540b105cd.hot-update.js","sources":["webpack:///./pages/provider_data/prividerCompliance.js"],"sourcesContent":["import React from 'react'\r\nimport { Row, Col, Table } from 'reactstrap'\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport classnames from 'classnames'\r\n\r\nvar data2 = require('./Compliance.json');\r\n\r\nclass DateCheck extends React.Component {\r\n    render() {\r\n        var date = this.props.Date;\r\n        if (date < \"2019-09-22\") {\r\n            return (\r\n                <span className=\"bg-danger text-white\">{date}</span>\r\n            )\r\n        } else if (date < \"2019-10-22\" && date > \"2019-09-22\") {\r\n            return (\r\n                <span className=\"bg-warning text-white\">{date}</span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span>{date}</span>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction ProviderDropdown() {\r\n    return (\r\n        <DropdownMenu\r\n            modifiers={{\r\n                setMaxHeight: {\r\n                    enabled: true,\r\n                    order: 890,\r\n                    fn: (data) => {\r\n                        return {\r\n                            ...data,\r\n                            styles: {\r\n                            ...data.styles,\r\n                            overflow: 'auto',\r\n                            maxHeight: 200  ,\r\n                            },\r\n                        };\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            {data2.sort((a, b) => {\r\n                    const One = a.company.toUpperCase();\r\n                    const Two = b.company.toUpperCase();\r\n                \r\n                    return (One < Two) ? -1 : (One > Two) ? 1 : 0;\r\n                })\r\n                .map(TP => (\r\n                    <DropdownItem \r\n                        className=\"Btn\" \r\n                        key={TP.company} \r\n                        onClick={this.selectProvider}\r\n                        value={TP.company}\r\n                    >\r\n                        {TP.company}\r\n                    </DropdownItem>\r\n                ))\r\n            }\r\n        </DropdownMenu>\r\n    );\r\n}\r\n\r\n\r\nclass Example extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false,\r\n            value: 'ACCEL',\r\n            activeTab: '1'\r\n        };\r\n        this.selectTab = this.selectTab.bind(this);\r\n        this.selectProvider = this.selectProvider.bind(this);\r\n        this.clickDropdown = this.clickDropdown.bind(this);\r\n        this.ProviderDropdown = ProviderDropdown.bind(this);\r\n        \r\n    }\r\n  \r\n    clickDropdown() {\r\n        this.setState(prevState => ({\r\n            dropdownOpen: !prevState.dropdownOpen\r\n        }));\r\n    }\r\n\r\n    selectProvider(e) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    selectTab(tab) {\r\n        if (this.state.actiTab !== tab) {\r\n            this.setState({activeTab: tab});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const test = data2.filter(data2 => data2.company === this.state.value);\r\n        const test2 = test[0];\r\n\r\n        return (\r\n            <div >\r\n                <h1 className=\"mt-5 text-center\">Provider Compliance Report</h1>\r\n                <h3 className=\"mt-2 mb-5 text-center\">Report Date: 9/22/2019</h3>\r\n                <h5>Dates in <span className=\"bg-warning text-white\">Yellow</span>&nbsp;\r\n                    are about to expire.</h5>\r\n                <h5 className=\"mb-5\">Dates in  <span className=\"bg-danger text-white\">Red</span>\r\n                    &nbsp;need immediate attention.\r\n                </h5>\r\n                <Dropdown isOpen={this.state.dropdownOpen} toggle={this.clickDropdown}>\r\n                    <DropdownToggle caret>\r\n                        Provider List\r\n                    </DropdownToggle>\r\n                    {this.ProviderDropdown()}\r\n                </Dropdown>\r\n                <div className=\"mt-5 mx-5\">\r\n                    <div className=\"bg-light\">\r\n                    <p className=\"pt-4 pl-4\">Provider: {this.state.value}</p>\r\n                    <Row className=\"ml-3\">\r\n                        <Col>\r\n                            <p className=\"ml-2\">Address:</p>\r\n                            <p className=\"ml-3 my-0\">{test2.address1}</p>\r\n                            <p className=\"ml-3 my-0\">{test2.address2}</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>Contact info:</p>\r\n                            <p className=\"ml-2 my-0\"><b>Phone:</b> {test2.phone}</p>\r\n                            <p className=\"ml-2 my-0\"><b>Email:</b> {test2.email}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    <p className=\"pt-4 pl-4\">Insurance:</p>\r\n                    <Row xs=\"auto\" className=\"p-0\">\r\n                        {\r\n                            test2.insurance.map(insurance => (\r\n                                <Col className=\"ml-5\" key={insurance.type}>\r\n                                    <p className=\"ml-5\">Type: {insurance.type}</p>\r\n                                    <p className=\"ml-5\">Company: {insurance.company}</p>\r\n                                    <p className=\"ml-5\">Exp Date: <DateCheck Date={insurance.end} /></p>\r\n                                </Col>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                    </div>\r\n                    <div>\r\n                        <Nav tabs className=\"mr-5 mt-3\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                                    onClick={() => { this.selectTab('1'); }} style={{cursor: \"pointer\"}}\r\n                                >\r\n                                    Drivers\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                                    onClick={() => { this.selectTab('2'); }} style={{cursor: \"pointer\"}}\r\n                                >\r\n                                Vehicles\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <h2 className=\"my-5\">Drivers:</h2>\r\n                                {test2.drivers.map(driver => (\r\n                                    <div>\r\n                                        <Row xs=\"auto\" className=\"p-0\" key={driver.id}>\r\n                                            <div className=\"d-inline-block h-25 text-center mx-5\">\r\n                                                <h3>{driver.name}</h3>\r\n                                            </div>\r\n                                            <div className=\"d-inline-block h-25 text-center mx-5 pt-2\">\r\n                                                <p>License State: {driver.license.state}</p>\r\n                                            </div>\r\n                                            <div className=\"d-inline-block h-25 text-center mx-5 pt-2\">\r\n                                                <p>License Exp: &nbsp;\r\n                                                    <DateCheck Date={driver.license.exp} />\r\n                                                </p>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"ml-5\">\r\n                                            <Col className=\"justify-content-center\">\r\n                                                <p>Training:</p>\r\n                                                <Table bordered className=\"w-75\">\r\n                                                    <thead>\r\n                                                        <tr className=\"bg-light\">\r\n                                                            <th>Type:</th>\r\n                                                            <th>Company:</th>\r\n                                                            <th>Exp date</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {driver.training.map(tr => (\r\n                                                            <tr key={tr.type}>\r\n                                                                <td>Type: {tr.type}: </td>\r\n                                                                <td>{tr.company}</td>\r\n                                                                <td>\r\n                                                                    <DateCheck Date = {tr.end} />  \r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                            </Col>\r\n                                            <Col >\r\n                                                <p>Screening:</p>\r\n                                                <Table bordered className=\"w-75\">\r\n                                                    <thead>\r\n                                                        <tr className=\"bg-light\">\r\n                                                            <th>Type:</th>\r\n                                                            <th>Exp date</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {driver.screenings.map(scr => (\r\n                                                            <tr key={scr.type}>\r\n                                                                <td>{scr.type}</td>\r\n                                                                <td>\r\n                                                                    <DateCheck Date = {scr.end} />\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                ))}\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                                <h2 className=\"my-5\">Vehicles</h2>\r\n                                {test2.vehicles.map(vehicle => (\r\n                                    <div>\r\n\r\n                                        <Row xs=\"auto\" className=\"p-0\" key={vehicle.id}>\r\n                                            <div className=\"d-inline-block h-25 text-center mx-5\">\r\n                                                <h3>Number: {vehicle.number}</h3>\r\n                                            </div>\r\n                                            <div className=\"d-inline-block h-25 text-center mx-5 pt-2\">\r\n                                                <p>Vehicle brand: {vehicle.brand}</p>\r\n                                            </div>\r\n                                            <div className=\"d-inline-block h-25 text-center mx-5 pt-2\">\r\n                                                <p>Vehicle type: {vehicle.type}</p>\r\n                                            </div>\r\n                                            <div className=\"d-inline-block h-25 text-center mx-5 pt-2\">\r\n                                                <p>Year: {vehicle.year}</p>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Col>\r\n                                            <div className=\"d-inline-block h-25 m-3 \">\r\n                                                <h4>Registration: <small>{vehicle.reg}</small></h4>\r\n                                                <p>Exp date: <DateCheck Date={vehicle.regexp} /></p>\r\n                                            </div>\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <div className=\"d-inline-block h-25 m-3 \">\r\n                                                <h4>Inspection:</h4>\r\n                                                <p>Exp date: <DateCheck Date={vehicle.inspection.end} /></p>\r\n                                            </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                ))}\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Example;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;AAhBA;AACA;AAmBA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAFA;AAQA;AAZA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAajDA;AAgEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAuCA;;;;AA9MA;AACA;AAgNA;;;;A","sourceRoot":""}