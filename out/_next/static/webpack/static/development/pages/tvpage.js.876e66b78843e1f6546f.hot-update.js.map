{"version":3,"file":"static/webpack/static\\development\\pages\\tvpage.js.876e66b78843e1f6546f.hot-update.js","sources":["webpack:///./pages/tvpage.js"],"sourcesContent":["import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport Layout2 from './tv_info/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\n\r\n\r\nconst noimage = '/static/images/no-img.png';\r\n//var Search = '';\r\n\r\n\r\n\r\nclass Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.enterSearch = this.enterSearch.bind(this);\r\n  }\r\n  //handles setting state of search value to render tvmaze json api\r\n  //sets variable search value to state\r\n  enterSearch(event) {\r\n    this.setState({value: event.target.value});\r\n    var Search = (event.target.value);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tvpagesearch-bar Fsize-1\">\r\n        {/* currentl does not have on submit or entery key function to push link to \r\n          page for api call to render*/}\r\n        <form>\r\n          <label>\r\n            TV Show search by Name:\r\n            <input type=\"text\" \r\n            value={this.state.value} \r\n            onChange={this.enterSearch} \r\n            onKeyPress={event => {\r\n              if (event.which === 13 /* Enter */) {\r\n                fetch('https://api.tvmaze.com/search/shows?q=' + \"text\")\r\n              };\r\n            }}\r\n            />\r\n          </label>\r\n          {/*due to get initial props async function is only called on page load\r\n            disguised a page link as a search button to call value of search for \r\n            the await fetch api call.*/}\r\n          <button>\r\n            <Link href=\"/tvpage\">\r\n              <a>Submit</a>\r\n            </Link>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst TvPage = props => (\r\n  <Layout>\r\n    <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n     <Searchbar />\r\n     <Layout2>\r\n        <h1>Results for: {Search}</h1>\r\n        {/* was original code from next.js tutorial.\r\n          <ul>\r\n            {props.shows.map(show => (\r\n              <li key={show.id}>\r\n                <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}</a>\r\n                </Link>\r\n              </li>\r\n              ))}\r\n            </ul>\r\n            */}\r\n          <div className=\"tvbox Fsize-2\">\r\n            {/*Search results display inlucing show name and image.\r\n              uses map key to render all results. */}\r\n            {props.shows.map(show => (\r\n              <div key={show.id}>\r\n                <p>\r\n                 <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}<br /><br /><img className=\"tvbox-img\" src={show.image ? show.image.medium : noimage} alt=\"no image\"/></a>\r\n                </Link>\r\n                </p>\r\n              </div>\r\n              ))}\r\n          </div>\r\n      </Layout2>\r\n  </Layout>\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  //tvmaze search api link.  pulls the json info based on the search variable\r\n  //entered by user in the search field.\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + Search);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AAEA;AACA;AACA;;;AADA;AACA;AAAA;AAAA;AACA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA3CA;AACA;AA8CA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AApBA;AACA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAEA;AANA;AASA;AAAA;AAAA;AADA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;A","sourceRoot":""}