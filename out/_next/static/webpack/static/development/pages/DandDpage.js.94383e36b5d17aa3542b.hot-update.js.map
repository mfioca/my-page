{"version":3,"file":"static/webpack/static\\development\\pages\\DandDpage.js.94383e36b5d17aa3542b.hot-update.js","sources":["webpack:///./pages/DandD/attacksim.js"],"sourcesContent":["import React from 'react'\r\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj } from './herofunctions'\r\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj } from './monsterfunctions'\r\n\r\n\r\n\r\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\r\n\r\nfunction heroattackroll() {\r\n    this.setState ({heroroll: Math.floor((Math.random() * 20) + 1)});\r\n    if (this.state.heroroll >= (this.state.monsterAc + this.state.heroHitAdj )) {\r\n        this.setState({\r\n            herodidhit: 'Hit'})\r\n        if ((this.state.monsterHp - this.state.heroDmg) <= 0) {\r\n            this.setState ({monsterHp: 'Dead'})\r\n        } else {\r\n            this.setState ({monsterHp: this.state.monsterHp - this.state.heroDmg})\r\n        }\r\n    \r\n    } else {\r\n        this.setState ({herodidhit: 'Miss'});\r\n    };\r\n};\r\n\r\n\r\n\r\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\r\n\r\nfunction monsterattackroll() {\r\n    this.setState ({monsterroll: Math.floor((Math.random() * 20) + 1)});\r\n    if (this.state.monsterroll >= (this.state.heroAc + this.state.monsterHitAdj )) {\r\n        this.setState({\r\n            monsterdidhit: 'Hit',\r\n            heroHp: (this.state.heroHp - this.state.monsterDmg)\r\n        })\r\n        if (this.state.heroHp <= 0) {\r\n            this.setState ({heroHp: 'Dead'})\r\n        }\r\n    \r\n    } else {\r\n        this.setState ({monsterdidhit: 'Miss'});\r\n    };\r\n};\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.heroinitiative = 0;\r\n        this.monsterinitiative = 0;\r\n        this.state = { \r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Name: '',\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroName: '',\r\n            heroinitiative: 0,\r\n            heroroll: 0,\r\n            herodidhit: '',\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterName: '',\r\n            monsterinitiative: 0,\r\n            monsterroll: 0,\r\n            monsterdidhit: '',\r\n\r\n        };\r\n\r\n        this.setherostats = this.setherostats.bind(this);\r\n        this.SetheroConstAdj = SetheroConstAdj.bind(this);\r\n        this.SetheroacAdj = SetheroacAdj.bind(this);\r\n        this.SetheroDmgAdj = SetheroDmgAdj.bind(this);\r\n        this.SetheroHitAdj = SetheroHitAdj.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n\r\n        this.setMonsterstats = this.setMonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n\r\n\r\n        this.heroattackroll = heroattackroll.bind(this);\r\n        this.monsterattackroll = monsterattackroll.bind(this);\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n        \r\n    }\r\n\r\n    setherostats() {\r\n        for (let key in this.state.herostats) {\r\n            this.state.herostats[key] = Math.floor((Math.random() * 20) + 1);\r\n        };\r\n        this.setState ({\r\n            heroHp: this.state.herobase.Hp + this.SetheroConstAdj(),\r\n            heroAc: this.state.herobase.ArmorClass + this.SetheroacAdj(),\r\n            heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\r\n            heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj(),\r\n        });\r\n    }\r\n\r\n    setMonsterstats() {\r\n        for (let key in this.state.monsterstats) {\r\n            this.state.monsterstats[key] = Math.floor((Math.random() * 20) + 1);\r\n        };\r\n        this.setState ({\r\n            monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\r\n            monsterAc: this.state.monsterbase.ArmorClass + this.SetmonsteracAdj(),\r\n            monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\r\n            monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj(),\r\n        });\r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroName : event.target.value});\r\n    };\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterName : event.target.value});\r\n    };\r\n\r\n    rollforiniative() {\r\n        this.Heroinitiative = Math.floor((Math.random() * 10) + 1);\r\n        this.Monsterinitiative = Math.floor((Math.random() * 10) + 1);\r\n        if (this.Heroinitiative < this.Monsterinitiative) {\r\n            this.setState ({\r\n                heroinitiative: 'First',\r\n                monsterinitiative: 'Second'\r\n            });\r\n        } else if (this.Heroinitiative > this.Monsterinitiative) {\r\n            this.setState ({\r\n                monsterinitiative: 'First',\r\n                heroinitiative: 'Second'\r\n            });\r\n        } else {\r\n            this.setState ({\r\n                heroinitiative: 'ReRoll',\r\n                monsterinitiative: 'ReRoll'\r\n            })   \r\n        };\r\n        this.setState ({\r\n            herodidhit: '',\r\n            monsterdidhit: ''\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"DandD_character Fsize-2\">\r\n                    \r\n                        <div className=\"Hero\">\r\n                            <div className=\"HeroBox\">\r\n                                <div>\r\n                                    <p><b>Name: </b>{ this.state.heroName }</p>\r\n                                        <table className=\"DandDstat_table\">\r\n                                        <tr>\r\n                                            <td>Strength:</td>\r\n                                            <td> { this.state.herostats.Str }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Constitution:</td>\r\n                                            <td> { this.state.herostats.Const }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Dexterity:</td>\r\n                                            <td> { this.state.herostats.Dext }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Hitpoints:</td>\r\n                                            <td> { this.state.heroHp }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Damage per hit:</td>\r\n                                            <td> { this.state.heroDmg }</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                                <div>\r\n                                    <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"Stats-roll align-center\">\r\n                                <button onClick={ this.setherostats }>Set Attrubutes</button>\r\n                            </div>\r\n                            <div>\r\n                                <form>\r\n                                    <label>\r\n                                        Name:\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            maxLength=\"20\"\r\n                                            value={this.state.value}\r\n                                            onChange={this.heroNameChange}\r\n                                        />\r\n                                    </label>\r\n                                </form> \r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"Monster\">\r\n                            <div className=\"MonsterBox\">\r\n                                <div>\r\n                                    <p><b>Name: </b>{ this.state.monsterName }</p>\r\n                                    <table className=\"DandDstat_table\">\r\n                                        <tr>\r\n                                            <td>Strength:</td>\r\n                                            <td> { this.state.monsterstats.Str }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Constitution:</td>\r\n                                            <td> { this.state.monsterstats.Const }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Dexterity:</td>\r\n                                            <td> { this.state.monsterstats.Dext }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Hitpoints:</td>\r\n                                            <td> { this.state.monsterHp }</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Base Damage:</td>\r\n                                            <td> { this.state.monsterDmg }</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                                <div>\r\n                                    <img className=\"DnD_Monster Float-right\" src=\"../static/images/monster.png\" alt=\"monster\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"Stats-roll align-center\">\r\n                                <button onClick={this.setMonsterstats}>Set Attrubutes</button>\r\n                            </div>\r\n                            <div>\r\n                                <form>\r\n                                    <label>\r\n                                        Name:\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            maxLength=\"20\"\r\n                                            value={this.state.value}\r\n                                            onChange={this.monsterNameChange}\r\n                                        />\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n\r\n                {/*displays hero stats and attack information */}\r\n                <div className=\"Attack-section\">\r\n                    <div className=\"AC-Icon\">\r\n                        <img src=\"../static/images/acicon.png\" alt=\"shield\"/>\r\n                        <p className=\"AC-Icon-text Fsize-3\">\r\n                            { this.state.heroAc }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"HitAdj-Icon\">\r\n                        <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                        <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                            { this.state.heroHitAdj }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"Attack-roll\">\r\n                        <button  onClick={this.heroattackroll}>\r\n                            Hero Roll for Attack\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"Attack-result Fsize-3 center\">\r\n                        { this.state.herodidhit }\r\n                    </div>\r\n                </div>\r\n                  {/*main field to control attack simulation placed between\r\n                     hero info and monster info */}  \r\n                <div className=\"Attack-section\">    \r\n                    \r\n                    <div className=\"Initiative DandD_button\">\r\n                        <button onClick={this.rollforiniative}>Roll for iniative</button>\r\n                    </div>\r\n                    <div className=\"Heroinitiative center Fsize-2\">\r\n                        <p>Hero <br/>iniative:</p>\r\n                        <p className=\"Fsize-3\">{this.state.heroinitiative}</p>\r\n                    </div>\r\n                    <div className=\"Monsterinitiative center Fsize-2\">\r\n                        <p>Monster initiative:</p>\r\n                        <p className=\"Fsize-3\">{this.state.monsterinitiative}</p>\r\n                    </div>  \r\n                    <div className=\"HeroHP-icon\">\r\n                        <img src=\"../static/images/herohp.png\" alt=\"icon\"/>\r\n                        <p className=\"HeroHP-text Fsize-3 center\">\r\n                            { this.state.heroHp }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"MonsterHP-icon\">\r\n                        <img src=\"../static/images/monsterhp.png\" alt=\"icon\"/>\r\n                        \r\n                        <p className=\"MonsterHP-text Fsize-3 center\">\r\n                            \r\n                            { this.state.monsterHp }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {/*displays Monster stats and attack information */}\r\n                <div className=\"Attack-section\">\r\n                    <div className=\"AC-Icon\">\r\n                        <img src=\"../static/images/acicon.png\" alt=\"shield\" />\r\n                        <p className=\"AC-Icon-text Fsize-3\">\r\n                            { this.state.monsterAc }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"HitAdj-Icon\">\r\n                        <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                        <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                            { this.state.monsterHitAdj }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"Attack-roll\">\r\n                        <button onClick={this.monsterattackroll}>\r\n                            Monster Roll for Attack\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"Attack-result Fsize-3 center\">\r\n                        { this.state.monsterdidhit }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AttackSim"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;;;;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AADA;AACA;AACA;AADA;AAIA;;;;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AADA;AACA;AACA;AADA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AA2CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAhEA;AAkEA;AACA;;;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1TA;AACA;AA4TA;;;;A","sourceRoot":""}