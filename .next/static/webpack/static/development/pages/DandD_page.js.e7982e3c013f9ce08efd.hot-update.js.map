{"version":3,"file":"static/webpack/static\\development\\pages\\DandD_page.js.e7982e3c013f9ce08efd.hot-update.js","sources":["webpack:///./pages/DandD/hero_attacksim.js"],"sourcesContent":["import React from 'react'\r\nimport { Monster } from './monster'\r\nexport { MonsteradjStats}\r\nexport { HeroadjStats }\r\n\r\n//import { HeroHitAdj } from './hero'\r\n\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n}\r\n\r\n\r\n\r\nvar Heroroll = 0;\r\nvar Monsterroll = 0;\r\n\r\nvar Herodidhit = \" \";\r\nvar Monsterdidhit = \" \";\r\n\r\n\r\nfunction heroattackroll() {\r\n    //Heroroll = Math.floor((Math.random() * 20) + 1);\r\n    if (Heroroll >= (MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj)) {\r\n        Herodidhit = \"yes\";\r\n        MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n        if (MonsteradjStats.MonsterHp <= 0 ) {\r\n            MonsteradjStats.MonsterHp = \"Monster is dead\";\r\n        }\r\n    } else {\r\n        Herodidhit = \"no\";\r\n    };\r\n}\r\n\r\nfunction Monsterattackroll() {\r\n    if (Monsterroll >= (HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj)) {\r\n        Monsterdidhit = \"yes\";\r\n        HeroadjStats.HeroHp = (HeroadjStats.HeroHp - 10);\r\n        if (HeroadjStats.HeroHp <= 0 ) {\r\n            HeroadjStats.HeroHp = \"Hero is dead\";\r\n        }\r\n    } else {\r\n        Monsterdidhit = \"no\";\r\n    };\r\n}\r\n\r\n\r\nclass HeroAttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.heroattack = this.heroattack.bind(this);\r\n        this.Monsterattack = this.Monsterattack.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    heroattack() {\r\n        Heroroll = Math.floor((Math.random() * 20) + 1);\r\n        heroattackroll();\r\n        this.forceUpdate();\r\n    }\r\n    Monsterattack() {\r\n        Monsterroll = Math.floor((Math.random() * 20) + 1);\r\n        Monsterattackroll();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    refresh() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            \r\n            <button className=\"Reset_stat-button\" onClick={this.refresh}>Refresh stats</button>\r\n            \r\n            <div className=\"DandD_attack\">\r\n                \r\n                \r\n                \r\n                \r\n            <div className=\"Attack-container\">\r\n                <p>MonsterAC = { MonsteradjStats.MonsterAc }</p>\r\n                <p>Hero Hit Adjustment = { HeroadjStats.HeroHitAdj }</p>\r\n                <button onClick={this.heroattack}>\r\n                    Roll to hit\r\n                </button>\r\n                <p>Result of attack = { Herodidhit }</p>\r\n                <p> Monster hit points = { MonsteradjStats.MonsterHp }</p>\r\n            </div>\r\n            <div className=\"Attack-container\">\r\n            <p>HeroAC = { HeroadjStats.HeroAc }</p>\r\n            <p>Monster Hit Adjustment = { MonsteradjStats.MonsterHitAdj }</p>\r\n            <button onClick={this.Monsterattack}>\r\n                Roll to hit\r\n            </button>\r\n            <p>Result of attack = { Monsterdidhit }</p>\r\n            <p> Hero hit points = { HeroadjStats.HeroHp }</p>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default HeroAttackSim"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AASA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAxDA;AACA;AA0DA;;;;A","sourceRoot":""}