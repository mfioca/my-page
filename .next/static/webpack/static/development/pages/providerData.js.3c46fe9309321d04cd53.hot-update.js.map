{"version":3,"file":"static/webpack/static\\development\\pages\\providerData.js.3c46fe9309321d04cd53.hot-update.js","sources":["webpack:///./pages/customComponents.js","webpack:///./pages/providerData.js"],"sourcesContent":["/* **************** \r\n*   Imports       * \r\n******************/\r\nimport React from 'react'\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Row, Col, Button, Jumbotron } from 'reactstrap'\r\nimport {AboutImg, CardImageStyle } from './jsxstyles'\r\n\r\n\r\n/* *********************** \r\n*   Export Classes       * \r\n**************************/\r\n\r\nexport { AboutMedia, SingleListCard, ThreeColumnCard, HomeCard, JumbonoImage }\r\n\r\n//used in Resumeview and providerdata\r\nclass JumbonoImage extends React.Component {\r\n    render() {\r\n        return (\r\n            <Jumbotron>\r\n            <h1 className=\"display-3 text-center\">{this.props.Title}</h1>\r\n            <p className=\"lead\">{this.props.Caption1}</p>\r\n            <hr className=\"my-2\" />{this.props.Caption2}\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n//used in about page\r\nclass AboutMedia extends React.Component{\r\n    render() {\r\n        if (this.props.Align === \"Right\") {\r\n            return (\r\n                <div className=\"p-3\">\r\n                    <Card className={this.props.Class}>\r\n                        <Row>\r\n                            <Col >\r\n                            <CardImg style={AboutImg} src={this.props.ImgUrl} alt=\"Card image cap\" />\r\n                            </Col>\r\n                        <Col >\r\n                        <CardTitle><h1>{this.props.Title}</h1></CardTitle>\r\n                        <CardBody>\r\n                            <CardText>\r\n                                {this.props.Description}\r\n                            </CardText>\r\n                        </CardBody>\r\n                        </Col>\r\n                        </Row>\r\n                    </Card> \r\n                </div>\r\n            );\r\n        }\r\n        if (this.props.Align === \"Left\") {\r\n            return (\r\n                <div className=\"p-3\">\r\n                <Card className={this.props.Class}>\r\n                    <Row>\r\n                        <Col >\r\n                        <CardTitle><h1>{this.props.Title}</h1></CardTitle>\r\n                        <CardBody>\r\n                            <CardText>\r\n                                {this.props.Description}\r\n                            </CardText>\r\n                        </CardBody>\r\n                        </Col>\r\n                        <Col >\r\n                            <CardImg style={AboutImg} src={this.props.ImgUrl} alt=\"Card image cap\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Card> \r\n            </div>\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\n//used in about page for resume\r\nclass SingleListCard extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card className=\"Text-Left\">\r\n                    <CardBody>\r\n                        <CardSubtitle>{this.props.Subtitle}</CardSubtitle>\r\n                        <CardText>\r\n                            <ul>\r\n                                <li>{this.props.Item1}</li>\r\n                                <li>{this.props.Item2}</li>\r\n                                <li>{this.props.Item3}</li>\r\n                                <li>{this.props.Item4}</li>\r\n                            </ul>\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card> \r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n//used in resume for experience section\r\nclass ThreeColumnCard extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className=\"p-3\">\r\n                <Card className={this.props.Class}>\r\n                <CardTitle><h1>{this.props.Title}</h1></CardTitle>\r\n                    <Row className=\"text-left\">\r\n                        <Col >\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <li>\r\n                                        {this.props.Description1}\r\n                                    </li>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col >\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <li>\r\n                                        {this.props.Description2}\r\n                                    </li>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col >\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <li>\r\n                                        {this.props.Description3}\r\n                                    </li>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Col>\r\n                    </Row>\r\n                </Card> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//used in home page\r\nclass HomeCard extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card className=\"text-center\">\r\n                    <CardTitle>{this.props.Title}</CardTitle>\r\n                    <CardImg top style={CardImageStyle} src={this.props.Image} alt=\"Card image cap\" />\r\n                    <CardBody>\r\n                        <CardSubtitle>{this.props.Subtitle}</CardSubtitle>\r\n                        <CardText>{this.props.Description}\r\n                        </CardText>\r\n                        <Button>\r\n                            <a href={this.props.Link}\r\n                                className=\"Header\"\r\n                                target=\"_blank\" \r\n                                rel=\"noopener noreferrer\">\r\n                                {this.props.ButtonTitle}\r\n                            </a>\r\n                        </Button>\r\n                    </CardBody>\r\n                </Card> \r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport Layout from '../components/layout.js';\r\nimport { Container, Row, Col, Table } from 'reactstrap';\r\nimport { JumbonoImage } from './customComponents';\r\nimport ProviderList from './provider_data/providerImport.js';\r\n\r\n\r\nvar data = require('./provider_data/provider.json');\r\n\r\n\r\n\r\n// {data.filter(data => data.Type === 'Provider').length}: \r\n// filters the json based on items with values and totals up \r\n//the number of listed items with that data value.  example above:\r\n//count the number of entries with the data \"Type\" of 'Provider'  \r\n\r\n//function Providerinfo() {\r\nclass Providerinfo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Row>\r\n                    <Col className=\"px-5\">\r\n                    <h4 className=\"text-center p-2\"><b><u>Provider Totals</u></b></h4> \r\n                        <Table striped bordered size=\"sm\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th className=\"text-center\">Total Transportation Providers:</th>\r\n                                    <td>{data.length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Volunteer Driver').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"text-center\">Central Region Providers:</th>\r\n                                    <td>{data.filter(data => data.Region === 'Central').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider' && data.Region === 'Central' ).length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Volunteer Driver' && data.Region === 'Central').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"text-center\">SouthWest Region:</th>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider' && data.Region === 'SouthWest' ).length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td> {data.filter(data => data.Type === 'Volunteer Driver' && data.Region === 'SouthWest').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"text-center\">East Region:</th>\r\n                                    <td>{data.filter(data => data.Region === 'East').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider' && data.Region === 'East' ).length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Volunteer Driver' && data.Region === 'East').length}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                    <Col className=\"px-5\">\r\n                        <h4 className=\"text-center p-2\"><b><u>Level of Service Totals</u></b></h4>\r\n                        <Table striped bordered size=\"sm\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th colspan=\"2\">All Regions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td colspan=\"2\">{data.filter(data => data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th colspan=\"2\">Central</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td>{data.filter(data => data.Region === 'Central' && data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.Region === 'Central' && data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Region === 'Central' && data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th colspan=\"2\">SouthWest</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest' && data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest' && data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest' && data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th colspan=\"2\">East</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td>{data.filter(data => data.Region === 'East' && data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.Region === 'East' && data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Region === 'East' && data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction ProviderData() {\r\n    return (\r\n        <Layout>\r\n            <div className=\"text-center\">\r\n            <JumbonoImage \r\n                Title=\"Provider List\"\r\n                Caption1=\"this is data imported from a local json file. It will recreate a tracking\r\n                spreadsheet I created at one of my jobs.\"\r\n                Caption2=\"I used react-table dependency to build the data table. Altering formatting\r\n                to match my spreadsheet.\"\r\n                />\r\n            </div>\r\n            {/*Providerinfo listed above*/}\r\n            <Providerinfo />\r\n            {/*pulled in from providerimport.js*/}\r\n            <Row className=\"justify-content-center\">\r\n                <Col xs=\"11\" >\r\n                <ProviderList />\r\n                </Col>\r\n            </Row>\r\n        </Layout>\r\n    ); \r\n}\r\n\r\nexport default ProviderData;"],"mappings":"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","sourceRoot":""}