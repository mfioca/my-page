{"version":3,"file":"static/webpack/static\\development\\pages\\providerData.js.5d5de2bfefc355b83b6a.hot-update.js","sources":["webpack:///./components/customComponents.js","webpack:///./pages/providerData.js","webpack:///./pages/provider_data/Networkinfo.js"],"sourcesContent":["/* **************** \r\n*   Imports       * \r\n******************/\r\n\r\nimport React, { useState } from 'react';\r\nimport { \r\n    Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, \r\n    Row, Col, Form, Label, Input, Button, Collapse, \r\n    Table, Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink\r\n} from 'reactstrap'\r\nimport classnames from 'classnames';\r\n\r\nimport { HomeCardStyle, DandDStyle, ImageStyles, TvpageStyle, Pointer, TabStyle,\r\n    Tplist } from './jsxstyles'\r\nimport Link from 'next/link'\r\n\r\n\r\n/* *********************************\r\n*   Export styled components       * \r\n***********************************/\r\n\r\nexport function BackgroundDanger(props) {\r\n    return (\r\n        <span className=\"bg-danger text-white\">\r\n            {props.children}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport function BackgroundWarning(props) {\r\n    return (\r\n        <span className=\"bg-warning text-white\">\r\n            {props.children}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport function NewTabLink(props){\r\n    return (\r\n        <a className={props.Style}\r\n            href={props.Link}\r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            title={props.Title}>\r\n                {props.children}\r\n        </a>\r\n    );\r\n}\r\n\r\n//used in home page, attacksim\r\nexport function CenterFlexWrapDiv(props) {\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-center\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n//used in tvpost, tvpage\r\nexport function LeftFlexWrapDiv(props) {\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-left\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function TvMazeHeader() {\r\n    return (\r\n        <div>\r\n            <Link href=\"/tvpage\">\r\n                <a style={TvpageStyle.Link}>Search Page</a>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TvMazePage(props) {\r\n    return (\r\n        <div style={TvpageStyle.Layout}>\r\n            <TvMazeHeader />\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TvPostInfoLabel(props) {\r\n    return (\r\n    <td className=\"h2 text-left w-25 m-0 p-2\">\r\n        {props.children}\r\n    </td>\r\n    );\r\n}\r\n\r\nexport function TvPostInfoValue(props){\r\n    return (\r\n        <td className=\"text-left m-0 p-2\">\r\n            <small>{props.children}</small>\r\n        </td>\r\n    );\r\n}\r\n\r\n//used in provider compliance\r\nexport function TplistHeaderRow (props) {\r\n    return (\r\n        <Row className=\"p-0 bg-secondary text-white rounded-lg\">\r\n            {props.children}\r\n        </Row>\r\n    )\r\n}\r\n\r\n//used in providercompliance\r\nexport function InfoField(props) {\r\n    return (\r\n        <p style={Tplist.Info}>{props.children}</p>\r\n    );\r\n}\r\n\r\n/* *********************** \r\n*   Export functions     * \r\n**************************/\r\n\r\n//used in providerCompliance\r\nexport function DateCheck(props) {\r\n    var date = props.Date;\r\n    \r\n    if (date < \"2019-09-22\") {\r\n        return (\r\n            <BackgroundDanger>{date}</BackgroundDanger>\r\n        )\r\n    } else if (date < \"2019-10-22\" && date > \"2019-09-22\") {\r\n        return (\r\n            <BackgroundWarning>{date}</BackgroundWarning>\r\n        )\r\n    } else {\r\n        return (\r\n            <span>{date}</span>\r\n        );\r\n    }   \r\n}\r\n\r\n//used in TvPage and TVPost\r\nexport function TvMazeCard(props) {\r\n    return(\r\n        <Card style={props.CardStyle} className={props.CardClassName}>\r\n        <CardTitle \r\n            className=\"m-4 text-center\"\r\n            style={TvpageStyle.Title}>\r\n            {props.Title}\r\n        </CardTitle>\r\n        <CardBody>\r\n            <CardImg \r\n                className={props.ImgClass} \r\n                style={TvpageStyle.Image} \r\n                src={props.ImgSrc} \r\n                alt={props.ImgAlt}\r\n            />\r\n            <CardSubtitle className=\"text-center my-2\">\r\n            <h4 style={TvpageStyle.Cast}>\r\n                {props.SubTitle}\r\n            </h4>\r\n            </CardSubtitle>\r\n            <CardText>{props.Description}</CardText>\r\n        </CardBody>\r\n            {props.Link}\r\n        </Card>\r\n    );\r\n}\r\n\r\n//used in ProviderCompliance, providerData and TVpost\r\nexport function CustomTabs(props) {\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    \r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav tabs>\r\n                <NavItem>\r\n                    <NavLink\r\n                        className={classnames({ active: activeTab === '1' })}\r\n                        onClick={() => { toggle('1'); }} style={Pointer}\r\n                    >\r\n                        {props.Tab1Name}\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink\r\n                        className={classnames({ active: activeTab === '2' })}\r\n                        onClick={() => { toggle('2'); }} style={Pointer}\r\n                    >\r\n                        {props.Tab2Name}\r\n                    </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n                <TabPane tabId=\"1\" style={TabStyle}>\r\n                    {props.Tab1Content}\r\n                </TabPane>\r\n                <TabPane tabId=\"2\" style={TabStyle}>\r\n                    {props.Tab2Content}\r\n                </TabPane>\r\n            </TabContent>\r\n        </div>\r\n    )\r\n}\r\n\r\n/* *********************** \r\n*   Export Classes       * \r\n**************************/\r\n\r\n//used in home page\r\nexport class HomeCard extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card style={HomeCardStyle.Card}>\r\n                    <CardTitle style={HomeCardStyle.Title}>\r\n                        {this.props.Title}\r\n                    </CardTitle>\r\n                    <CardImg top \r\n                        style={ImageStyles.HomeCard} \r\n                        src={this.props.Image} \r\n                        alt=\"Card image cap\" \r\n                    />\r\n                    <CardBody>\r\n                        <CardSubtitle>{this.props.Subtitle}</CardSubtitle>\r\n                        <CardText style={{height: '80px'}}>\r\n                            {this.props.Description}\r\n                        </CardText>\r\n                        <Button className=\"w-100 p-0 m-0\">\r\n                            <NewTabLink\r\n                                Style=\"btn btn-dark w-100 p-2\"\r\n                                Link={this.props.Link}>\r\n                                    {this.props.ButtonTitle}\r\n                            </NewTabLink>\r\n                        </Button>\r\n                    </CardBody>\r\n                </Card> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//used in Resumeview, about page and providerdata\r\nexport class CustomJumbo extends React.Component {\r\n    render() {\r\n        if (this.props.ImgUrl === \"noimage\") {\r\n            return (\r\n                <Jumbotron>\r\n                    <h1 className=\"display-3 text-center\">\r\n                        {this.props.Title}\r\n                    </h1>\r\n                    <p className={this.props.Caption1Style}>\r\n                        {this.props.Caption1}\r\n                    </p>\r\n                    <hr className=\"my-2\" />\r\n                    <p className={this.props.Caption2Style}>\r\n                        {this.props.Caption2}\r\n                    </p>\r\n                </Jumbotron>\r\n            );\r\n        } else {\r\n            return (\r\n                <Jumbotron>\r\n                    <h1 className=\"display-3 text-center\">{this.props.Title}</h1>\r\n                    <div className=\"container-fluid text-center\">\r\n                        <img \r\n                            src=\"../static/images/avatar.jpg\" \r\n                            style={ImageStyles.HomeAvatar} alt=\"avatar\"\r\n                        />\r\n                    </div>\r\n                    <p className={this.props.Caption1Style}>\r\n                        {this.props.Caption1}\r\n                    </p>\r\n                    <hr className=\"my-2\" />\r\n                    <p className={this.props.Caption2Style}>\r\n                        {this.props.Caption2}<br />\r\n                        {this.props.Caption3}\r\n                    </p>\r\n                </Jumbotron>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n//used in about page\r\nexport class AboutMedia extends React.Component{\r\n    render() {\r\n\r\n        if (this.props.Align === \"Right\") {\r\n            return (\r\n                <div className=\"py-2\">\r\n                    <Card className={this.props.Class}>\r\n                        <Row>\r\n                            <Col>\r\n                                <CardImg \r\n                                    style={ImageStyles.About} \r\n                                    src={this.props.ImgUrl} \r\n                                    alt=\"Card image cap\" \r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <CardTitle className=\"mt-5\">\r\n                                    <h1>{this.props.Title}</h1>\r\n                                </CardTitle>\r\n                                <CardBody>\r\n                                    {this.props.Description}\r\n                                </CardBody>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card> \r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.props.Align === \"Left\") {\r\n            return (\r\n                <div className=\"py-2\">\r\n                    <Card className={this.props.Class}>\r\n                        <Row>\r\n                            <Col >\r\n                            <CardTitle className=\"mt-5\">\r\n                                <h1>{this.props.Title}</h1>\r\n                            </CardTitle>\r\n                            <CardBody>\r\n                                    {this.props.Description}\r\n                            </CardBody>\r\n                            </Col>\r\n                            <Col>\r\n                                <CardImg \r\n                                    style={ImageStyles.About} \r\n                                    src={this.props.ImgUrl} \r\n                                    alt=\"Card image cap\" \r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\n//used in resume for experience section\r\nexport class ThreeColumnCard extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className=\"py-3\">\r\n                <Card className={this.props.Class}>\r\n                    <CardTitle><h1>{this.props.Title}</h1></CardTitle>\r\n                    <Row className=\"text-left\">\r\n                        <Col >\r\n                            <CardBody>\r\n                                <div>\r\n                                    <li>\r\n                                        {this.props.Description1}\r\n                                    </li>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col >\r\n                            <CardBody>\r\n                                <div>\r\n                                    <li>\r\n                                        {this.props.Description2}\r\n                                    </li>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col >\r\n                            <CardBody>\r\n                                <div>\r\n                                    <li>\r\n                                        {this.props.Description3}\r\n                                    </li>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Col>\r\n                    </Row>\r\n                </Card> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//D and D application\r\nexport class CharacterSheet extends React.Component {\r\n    render() {\r\n        function DandDTableLabel(props) {\r\n            return (\r\n                <td className=\"text-muted text-left h4\">\r\n                    {props.children}\r\n                </td>\r\n            );\r\n        }\r\n\r\n        function DandDTableValue(props) {\r\n            return (\r\n                <td style={{width: '100px'}} className=\"text-white text-left h4\">\r\n                    {props.children}\r\n                </td>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col sm={{ size: 'auto', offset: 0 }}>\r\n                        <Table borderless  className=\"\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <DandDTableLabel>Strength:</DandDTableLabel>\r\n                                    <DandDTableValue>{this.props.Strength}</DandDTableValue>\r\n                                </tr>\r\n                                <tr>\r\n                                    <DandDTableLabel>Constitution:</DandDTableLabel>\r\n                                    <DandDTableValue>{this.props.Constitution}</DandDTableValue>\r\n                                </tr>\r\n                                <tr>\r\n                                    <DandDTableLabel>Dexterity:</DandDTableLabel>\r\n                                    <DandDTableValue>{this.props.Dexterity}</DandDTableValue>\r\n                                </tr>\r\n                                <tr>\r\n                                    <DandDTableLabel>Hitpoints:</DandDTableLabel>\r\n                                    <DandDTableValue>\r\n                                        {this.props.Hitpoints != \"Dead\" && \r\n                                            <span>{this.props.Hitpoints}</span> ||\r\n                                            <span className=\"text-danger h5\">\r\n                                                <small>{this.props.Hitpoints}</small>\r\n                                            </span>\r\n                                        } \r\n                                    </DandDTableValue>\r\n                                </tr>\r\n                                <tr>\r\n                                    <DandDTableLabel>Damage per Hit:</DandDTableLabel>\r\n                                    <DandDTableValue>{this.props.Damage}</DandDTableValue>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>  \r\n                    </Col>\r\n                    <Col sm={{ size: 'auto', offset: 2 }}>\r\n                        <div className=\"text-center \">\r\n                            <img  style={DandDStyle.Avatar} \r\n                                src={this.props.ImgUrl} \r\n                                alt=\"Avatar\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// D and D application\r\nexport class AttackSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.RollResult = this.RollResult.bind(this);\r\n        this.AttackBanner = this.AttackBanner.bind(this);\r\n        this.AttackButton = this.AttackButton.bind(this);\r\n    }\r\n    \r\n    //Shows attack roll number with special display for\r\n    //crit scrike (natural 20 on roll)\r\n    RollResult() {\r\n        if (this.props.Roll === 'Crit Strike') {\r\n            return (\r\n                <span className=\"text-danger font-italic\">\r\n                    Critical Strike!\r\n                </span>\r\n            );\r\n        } else {\r\n            return (\r\n                <span>{this.props.Roll}</span>\r\n            );\r\n        }\r\n    }\r\n\r\n    //shows attack result of hit/miss or place holder for\r\n    //result display.\r\n    AttackBanner() {\r\n        const Result = this.props.DidHit;\r\n        if (Result === \"Hit\") {\r\n            return (\r\n                <h2 className=\"alert alert-success py-2 text-center\">Hit!</h2>\r\n            );\r\n        } if (Result === \"Miss\") {\r\n            return (\r\n                <h2 className=\"alert alert-danger py-2 text-center\">Miss</h2>\r\n            );\r\n        } else {\r\n            return (\r\n                <h6 className=\"text-white text-center\">\r\n                    (Attack Result displayed here)\r\n                </h6>\r\n            );\r\n        }\r\n    }\r\n    \r\n    /*Function to display attack button based on initiative roll and attack turn. Pulls\r\n    AttackTurn functon and Attackroll functions from either herofunctions.js or monsterfunctions.js\r\n    as itentified in props */\r\n    AttackButton() {\r\n        if (this.props.AttackTurn === true) {\r\n            return (\r\n                <Button  \r\n                    onMouseDown={this.props.AttackRoll} \r\n                    onMouseUp = {this.props.NextTurn}\r\n                >\r\n                    {this.props.RollTitle}\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (\r\n                <h4 className=\"text-white\">Not your turn</h4>\r\n            )\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col className=\"my-4 mx-5 d-flex justify-content-center\">\r\n                        <div style={DandDStyle.thumbnail}>\r\n                            <img src=\"../static/images/acicon.png\" alt=\"shield\"/>\r\n                            <div>\r\n                                <h4 className=\"AC-Icon-text\">\r\n                                    {this.props.AC}\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"my-4 mx-5 d-flex justify-content-center\">\r\n                            <div style={DandDStyle.thumbnail}>\r\n                                <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                                <div>\r\n                                    <h4 className=\"HitAdj-Icon-text\">\r\n                                        {this.props.HitAdj}\r\n                                    </h4>\r\n                                </div>\r\n                            </div>  \r\n                    </Col>\r\n                    <style jsx>{`\r\n                        .AC-Icon-text {\r\n                            position: absolute;\r\n                            top: 42px;\r\n                            left: 50px;\r\n                            transform: translate(-50%, -50%);\r\n                        }\r\n                        .HitAdj-Icon-text {\r\n                            position: absolute;\r\n                            top: 48%;\r\n                            left: 50px;\r\n                            transform: translate(-50%, -50%);\r\n                        }    \r\n                    `}\r\n                    </style>\r\n                </Row>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                    {this.AttackButton()}\r\n                </div>\r\n                <div className=\"text-center text-white\">\r\n                    <h2>Attack Result:</h2>\r\n                    <p className=\"mt-2 p-0\">\r\n                        attack roll: &nbsp; {this.RollResult()}</p>\r\n                </div>\r\n                <div>\r\n                    {this.AttackBanner()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//used in DandD page to display Name,Initiative and HP status for hero and \r\n//monster.\r\nexport class AttackStatusDisplay extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4 className=\"text-info\">{this.props.Name}</h4>\r\n                <div className=\"text-center pt-4\">\r\n                    <div className=\"p-3\">\r\n                        <h4>iniative:</h4>\r\n                        <h4>\r\n                            {this.props.Initiative != \"Second\" && \r\n                                <span className=\"text-info\">\r\n                                    {this.props.Initiative}\r\n                                </span> ||  \r\n                                <span className=\"text-warning\">\r\n                                    {this.props.Initiative}\r\n                                </span>\r\n                            }\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"p-3\">\r\n                        <h4>Hit Points:</h4>\r\n                        <h4 className=\"text-center mt-4\">\r\n                            {this.props.HP != \"Dead\" &&\r\n                                <span className=\"text-success\">\r\n                                    {this.props.HP}\r\n                                </span> ||\r\n                                <span className=\"text-danger\">\r\n                                    {this.props.HP}\r\n                                </span>\r\n                            }\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//D and D application\r\nexport class NameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {collapse: false};\r\n        this.toggle = this.toggle.bind(this);\r\n    }   \r\n    \r\n    toggle() {\r\n        this.setState(state => ({collapse: !state.collapse}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"my-3\">\r\n                <Col xs=\"auto\">\r\n                    <Button\r\n                        onClick={this.toggle}>\r\n                            {this.state.collapse? 'Hide' : 'Change Name'}\r\n                    </Button>\r\n                </Col>\r\n                <Col>\r\n                    <Collapse isOpen={this.state.collapse}>\r\n                        <Form inline>\r\n                            <Label className=\"mx-sm-2\">\r\n                                Name:\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                maxLength=\"20\"\r\n                                value={this.props.Value}\r\n                                onChange={this.props.NameChange}\r\n                                //Prevent enter key submit\r\n                                onKeyPress={event => {\r\n                                    if (event.which === 13 /* Enter */) {\r\n                                    event.preventDefault();\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                className=\"ml-sm-2\"\r\n                                onClick={this.props.NameSubmit}>\r\n                                    Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Collapse>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Layout from '../components/layout.js'\r\nimport { CustomJumbo, CustomTabs, DateCheck, TplistHeaderRow, InfoField, NetworkDataFilter,\r\n    } from '../components/customComponents'\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, \r\n    Row, Col, Table } from 'reactstrap'\r\nimport NetworkList from './provider_data/networkTable.js'\r\nimport { Tplist } from '../components/jsxstyles'\r\nimport ComplianceTable from './provider_data/ComplianceTable.js'\r\nimport Networkinfo from './provider_data/Networkinfo.js'\r\n\r\n\r\n\r\nvar tpdata = require('./provider_data/company.json');\r\nvar vehdata = require('./provider_data/vehicle.json');\r\nvar drdata = require('./provider_data/driver.json');\r\n\r\n/* ***************************** \r\n*   Components for class       * \r\n*******************************/\r\n\r\nfunction ProviderDropdown() {\r\n    return (\r\n        <DropdownMenu\r\n            modifiers={{\r\n                setMaxHeight: {\r\n                    enabled: true,\r\n                    order: 890,\r\n                    fn: (data) => {\r\n                        return {\r\n                            ...data,\r\n                            styles: {\r\n                            ...data.styles,\r\n                            overflow: 'auto',\r\n                            maxHeight: 200  ,\r\n                            textAlign: 'center',\r\n                            marginLeft: '-15px'\r\n                            },\r\n                        };\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            {tpdata.map(TP => (\r\n                    <DropdownItem \r\n                        className=\"Btn\" \r\n                        key={TP.company} \r\n                        onClick={this.selectProvider}\r\n                        value={TP.company}\r\n                    >\r\n                        {TP.company}\r\n                    </DropdownItem>\r\n                ))\r\n            }\r\n        </DropdownMenu>\r\n    );\r\n}\r\n\r\nfunction CompanyTab(props) {\r\n    let TP = props.Data;\r\n    return (\r\n        <div className=\"bg-light shadow\">\r\n            <p className=\"pt-4 pl-4\"><b>Provider:</b> {TP.company}</p>\r\n            <Row className=\"ml-3\">\r\n                <Col className=\"ml-2\">\r\n                    <p><b>Address:</b></p>\r\n                    <InfoField>{TP.address1}</InfoField>\r\n                    <InfoField>{TP.address2}</InfoField>\r\n                </Col>\r\n                <Col>\r\n                    <p className=\"ml-2\"><b>Contact info:</b></p>\r\n                    <InfoField><b>Phone:</b> {TP.phone}</InfoField>\r\n                    <InfoField><b>Email:</b> {TP.email}</InfoField>\r\n                </Col>\r\n            </Row>\r\n            <p className=\"pt-4 pl-4\"><b>Insurance:</b></p>\r\n            <Row className=\" ml-3\">\r\n                <Col className=\"ml-2 mb-4\">\r\n                    <InfoField><b>Type:</b> {TP.gl.type}</InfoField>\r\n                    <InfoField><b>Company:</b> {TP.gl.company}</InfoField>\r\n                    <InfoField><b>Exp Date:</b> <DateCheck Date={TP.gl.end} /></InfoField>\r\n                </Col>\r\n                <Col className=\"ml-2\">\r\n                    <InfoField><b>Type:</b> {TP.veh.type}</InfoField>\r\n                    <InfoField><b>Company:</b> {TP.veh.company}</InfoField>\r\n                    <InfoField><b>Exp Date:</b> <DateCheck Date={TP.veh.end} /></InfoField>\r\n                </Col>\r\n                <Col className=\"ml-2\">\r\n                    <InfoField><b>Type:</b> {TP.wc.type}</InfoField>\r\n                    <InfoField><b>Company:</b> {TP.wc.company}</InfoField>\r\n                    <InfoField><b>Exp Date:</b> <DateCheck Date={TP.wc.end} /></InfoField>\r\n                </Col>  \r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DriverTab(props) {\r\n    let Driver = props.Data;\r\n\r\n    return (\r\n        <div>\r\n            {Driver.map(driver => (\r\n                <div key={driver.id}>\r\n                    <TplistHeaderRow>\r\n                        <Col style={Tplist.Title}>\r\n                            <h3>{driver.name}</h3>\r\n                        </Col>\r\n                        <Col style={Tplist.Title}>\r\n                            <p style={Tplist.Value}>\r\n                                License State: {driver.license.state}\r\n                            </p>\r\n                        </Col>\r\n                        <Col style={Tplist.Title}>\r\n                            <p style={Tplist.Value}>License Exp: &nbsp;\r\n                                <DateCheck Date={driver.license.exp} />\r\n                            </p>\r\n                        </Col>\r\n                    </TplistHeaderRow>\r\n                    <Row className=\"ml-5 my-4\">\r\n                        <Col>\r\n                            <Table bordered className=\"w-75 shadow-sm\">\r\n                                <thead>\r\n                                    <tr className=\"bg-light\">\r\n                                        <th>Training</th>\r\n                                        <th>Company</th>\r\n                                        <th>Exp date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{driver.firstaid.type}</td>\r\n                                        <td>{driver.firstaid.company}</td>\r\n                                        <td><DateCheck Date={driver.firstaid.end}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{driver.cpr.type}</td>\r\n                                        <td>{driver.cpr.company}</td>\r\n                                        <td><DateCheck Date={driver.cpr.end}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{driver.defdriv.type}</td>\r\n                                        <td>{driver.defdriv.company}</td>\r\n                                        <td><DateCheck Date={driver.defdriv.end}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{driver.pass.type}</td>\r\n                                        <td>{driver.pass.company}</td>\r\n                                        <td><DateCheck Date={driver.pass.end}/></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col>\r\n                            <Table bordered className=\"w-75 shadow-sm\">\r\n                                <thead>\r\n                                    <tr className=\"bg-light\">\r\n                                        <th>Screening</th>\r\n                                        <th>Exp date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{driver.drugscreen.type}</td>\r\n                                        <td><DateCheck Date={driver.drugscreen.end}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{driver.background.type}</td>\r\n                                        <td><DateCheck Date={driver.background.end}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{driver.mvr.type}</td>\r\n                                        <td><DateCheck Date={driver.mvr.end}/></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction VehicleTab(props) {\r\n    let Vehicle = props.Data;\r\n    \r\n    return (\r\n        <div>\r\n            {Vehicle.map(vehicle => (\r\n                <div key={vehicle.id}>\r\n                    <TplistHeaderRow>\r\n                        <Col style={Tplist.Title}>\r\n                            <h3>Number: {vehicle.number}</h3>\r\n                        </Col>\r\n                        <Col style={Tplist.Title}>\r\n                            <p style={Tplist.Value}>\r\n                                Vehicle brand: {vehicle.brand}\r\n                            </p>\r\n                        </Col>\r\n                        <Col style={Tplist.Title}>\r\n                            <p style={Tplist.Value}>\r\n                                Vehicle type: {vehicle.type}\r\n                            </p>\r\n                        </Col>\r\n                        <Col style={Tplist.Title}>\r\n                            <p style={Tplist.Value}>\r\n                                Year: {vehicle.year}\r\n                            </p>\r\n                        </Col>\r\n                    </TplistHeaderRow>\r\n                    <Row className=\"ml-5 my-2\">\r\n                        <Col>\r\n                            <div className=\"d-inline-block h-25 m-3\">\r\n                                <h4>Registration State:&nbsp; \r\n                                    <small>{vehicle.registration.state}</small>\r\n                                </h4>\r\n                                <p>Exp date: <DateCheck Date={vehicle.registration.end} /></p>\r\n                            </div>\r\n                        </Col>\r\n                        <Col >\r\n                            <div className=\"d-inline-block h-25 m-3\">\r\n                                <h4>Inspection:</h4>\r\n                                <p>Exp date: <DateCheck Date={vehicle.inspection.end} /></p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n/* ******************* \r\n*   Main Class       * \r\n*********************/\r\n\r\nclass ProviderCompliance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false,\r\n            value: 'ACCEL',\r\n        };\r\n        this.selectProvider = this.selectProvider.bind(this);\r\n        this.clickDropdown = this.clickDropdown.bind(this);\r\n        this.ProviderDropdown = ProviderDropdown.bind(this);\r\n    }\r\n  \r\n    clickDropdown() {\r\n        this.setState(prevState => ({\r\n            dropdownOpen: !prevState.dropdownOpen\r\n        }));\r\n    }\r\n\r\n    selectProvider(e) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const tpfilter = tpdata.filter(tpdata => tpdata.company === this.state.value);\r\n        const tp = tpfilter[0];\r\n        const drfilter = drdata.filter(drdata => drdata.company === this.state.value);\r\n        const vehfilter = vehdata.filter(vehdata => vehdata.company === this.state.value);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"my-3 text-center\">\r\n                    <h1>Provider Compliance Report</h1>\r\n                    <h3>Report Date: 9/22/2019</h3>\r\n                </div>\r\n                <ComplianceTable />\r\n                <h1 className=\"mt-3 text-center\">Compliance by Provider</h1>\r\n                <Dropdown isOpen={this.state.dropdownOpen} \r\n                    toggle={this.clickDropdown}\r\n                    className=\"d-flex ml-5 my-5 justify-content-center\"\r\n                >\r\n                    <DropdownToggle caret>\r\n                        Provider List\r\n                    </DropdownToggle>\r\n                    {this.ProviderDropdown()}\r\n                </Dropdown>\r\n                <div className=\"mt-5 ml-5\">\r\n                    <h5>Dates in <span className=\"bg-warning text-white\">Yellow</span>&nbsp;\r\n                        are about to expire.</h5>\r\n                    <h5 className=\"mb-5\">Dates in  <span className=\"bg-danger text-white\">Red</span>\r\n                        &nbsp;need immediate attention.\r\n                    </h5>\r\n                </div>\r\n                <div>\r\n                    <CompanyTab Data = {tp} />\r\n                    <div className=\"my-3\">\r\n                        <CustomTabs\r\n                            Tab1Name = 'Drivers'\r\n                            Tab2Name = 'Vehicles'\r\n                            Tab1Content = {\r\n                                <DriverTab Data = {drfilter} />\r\n                            }\r\n                            Tab2Content = {\r\n                                <VehicleTab Data = {vehfilter} />\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/* ******************* \r\n*   Displays Page    * \r\n*********************/\r\n\r\n\r\nfunction ProviderData() {\r\n\r\n    return (\r\n        <Layout>\r\n            <CustomJumbo\r\n                Title=\"Provider List\"\r\n                ImgUrl=\"noimage\"\r\n                Caption1Style='lead text-center'\r\n                Caption1=\"this is data imported from local json files. It will recreate tracking\r\n                    spreadsheets I created at one of my previous jobs.\"\r\n                Caption2Style='text-center'\r\n                Caption2=\"All information has been randomly generated from a JSON Generator tool \r\n                found online. This includes names, emails, phone numbers, addresses and dates.\"\r\n            />\r\n\r\n            <CustomTabs\r\n                Tab1Name = 'Network'\r\n                Tab2Name = 'Compliance'\r\n                Tab1Content = {\r\n                    <div>\r\n                        <Networkinfo />\r\n                        <NetworkList />\r\n                    </div>\r\n                }\r\n                Tab2Content = {\r\n                    <ProviderCompliance />\r\n                }\r\n            />\r\n        </Layout>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default ProviderData;","import React from 'react'\r\nimport { Row, Col, Table } from 'reactstrap'\r\n\r\nvar networkdata = require('./network.json');\r\n\r\n//used in providerstats\r\nexport function NetworkDataFilter(props) {\r\n    let Fone = props.Filter1;\r\n    let Vone = props.Value1;\r\n    let Ftwo = props.Filter2;\r\n    let Vtwo = props.Value2;\r\n    let Data = props.Info;\r\n    \r\n    return (\r\n        <span>{Data.filter(Data => Data[Fone] === Vone && Data[Ftwo] === Vtwo).length}</span>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction Networkinfo() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"mt-5 text-center\">Network Summary</h1>\r\n            <h3 className=\"mt-2 mb-5 text-center\">Report Date: 09/22/2019</h3>\r\n            <Row>\r\n                <Col className=\"px-5 pt-3\">\r\n                    <Table striped bordered size=\"sm\" className=\"shadow-sm\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th colSpan=\"2\">All Regions</th>\r\n                            </tr>\r\n                            <tr>\r\n                            <th>Total Providers:</th>\r\n                                <th>{networkdata.length}</th></tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Amb'\r\n                                        Value1 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'WCHR'\r\n                                        Value1 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Stretcher'\r\n                                        Value1 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colSpan=\"2\">Central</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Total Providers:</th>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'\r\n                                        Filter2 = 'Amb'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'\r\n                                        Filter2 = 'WCHR'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'Central'\r\n                                        Filter2 = 'Stretcher'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        <style jsx>{`\r\n                            {\r\n                                text-align: center;\r\n                                width: 70px;\r\n                            }\r\n                            th {\r\n                                aligh: center,\r\n                            }\r\n                        `}\r\n                        </style>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"px-5 pt-3\">\r\n                    <Table striped bordered size=\"sm\" className=\"shadow-sm\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th colSpan=\"2\">SouthWest</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Total Providers:</th>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'\r\n                                        Filter2 = 'Amb'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'\r\n                                        Filter2 = 'WCHR'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'SouthWest'\r\n                                        Filter2 = 'Stretcher'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th colSpan=\"2\">East</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Total Providers:</th>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Ambulatory:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'\r\n                                        Filter2 = 'Amb'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Wheelchair:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'\r\n                                        Filter2 = 'WCHR'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Providers with Stretcher:</td>\r\n                                <td><NetworkDataFilter\r\n                                        Info = {networkdata}\r\n                                        Filter1 = 'Region'\r\n                                        Value1 = 'East'\r\n                                        Filter2 = 'Stretcher'\r\n                                        Value2 = 'Yes'/>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <style jsx>{`\r\n                            {\r\n                                text-align: center;\r\n                                width: 70px;\r\n                            }\r\n                            th {\r\n                                aligh: center,\r\n                            }\r\n                        `}\r\n                        </style>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </div>  \r\n    );\r\n}\r\n\r\n\r\nexport default Networkinfo;"],"mappings":"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","sourceRoot":""}