{"version":3,"file":"static/webpack/static\\development\\pages\\providerData.js.58cce407bb1841ef1060.hot-update.js","sources":["webpack:///./pages/provider_data/providerimport.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { createFilter } from './Filter';\r\nimport { createSorter } from './sort';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nvar data = require('./provider.json');\r\n\r\n\r\nfunction filterCaseInsensitive(filter, row) {\r\n  const id = filter.pivotId || filter.id;\r\n  return (\r\n      row[id] !== undefined ?\r\n          String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\r\n      :\r\n          true\r\n  );\r\n}\r\n\r\nclass ProviderList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n}\r\n  \r\n  componentDidMount () {\r\n    fetch(`/provider.json`)\r\n      .then(res => res.json());\r\n  }\r\n\r\n  render() {\r\n    \r\n    return data ? this.renderData(data) : this.renderLoading();\r\n  }\r\n\r\n  renderData(data) {\r\n      return (\r\n        <div>\r\n          \r\n          <ReactTable \r\n          data= {data}\r\n          filterable\r\n            defaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row) }\r\n          columns={[\r\n            {\r\n              Header: \"Provider\",\r\n              columns: [\r\n                {\r\n                  Header: \"Name\",\r\n                  accessor: \"Name\",\r\n                  sortMethod: (a, b) => {\r\n                    if (a.length === b.length) {\r\n                      return a > b ? 1 : -1;\r\n                    }\r\n                    return a.length > b.length ? 1 : -1;\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              Header: \"Provider Info\",\r\n              columns: [\r\n                {\r\n                  Header: \"Type\",\r\n                  id: \"Type\",\r\n                  accessor: d => d.Type\r\n                },\r\n                {\r\n                  Header: \"Region\",\r\n                  id: \"Region\",\r\n                  accessor: d => d.Region\r\n                },\r\n                {\r\n                  Header: \"County\",\r\n                  id: \"County\",\r\n                  accessor: d => d.County\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              Header: \"Level of Service\",\r\n              columns: [\r\n                {\r\n                  Header: \"Ambulatory\",\r\n                  accessor: \"Amb\"\r\n                },\r\n                {\r\n                  Header: \"Wheelchair\",\r\n                  id: \"WCHR\",\r\n                  accessor: d => d.WCHR\r\n                },\r\n                {\r\n                  Header: \"Stretcher\",\r\n                  id: \"Stretcher\",\r\n                  accessor: d => d.Stretcher\r\n                }\r\n              ]\r\n            },\r\n          ]}\r\n          defaultPageSize={20}\r\n          style={{\r\n            height: \"400px\" // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n          className= \"Provider-table\"\r\n        />\r\n            {/*\r\n              <table \r\n              defaultPageSize={20}\r\n              className=\"Provider-table\">\r\n              <tr>\r\n                <th>Type</th>\r\n                <th>Provider Name</th>\r\n                <th>Provider Region</th>\r\n                <th>County</th>\r\n                <th>Ambulatory</th>\r\n                <th>Wheelchair</th>\r\n                <th>Stretcher</th>\r\n              </tr>\r\n              {data.map(item => (\r\n                <tr key={item.id}>\r\n                  <td>{item.Type}</td>\r\n                  <td>{item.Name}</td>\r\n                  <td>{item.Region}</td>\r\n                  <td>{item.County}</td>\r\n                  <td>{item.Amb}</td>\r\n                  <td>{item.WCHR}</td>\r\n                  <td>{item.Stretcher}</td>\r\n                </tr>\r\n              ))}\r\n              </table>*/}\r\n          \r\n        </div>\r\n      );\r\n    } \r\n\r\n  renderLoading() {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default ProviderList;\r\n\r\n\r\n /* codxe used while working on generating page\r\n render () {\r\n    \r\n     const  {sorter}  = this.state;\r\n  \r\n      if (data && data.length > 0) {\r\n        if (Array.isArray(sorter) && sorter.length) {\r\n          data.sort(createSorter(...sorter));\r\n        }\r\n      }\r\n  \r\n      return (\r\n        \r\n        <div>\r\n                    \r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                <span>{item.id}</span>&nbsp;&nbsp;\r\n                \r\n                <span><a href={`mailto:${item.email}`}>{item.name}</a></span>;&nbsp; \r\n                <span>{item.company}</span>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n        \r\n      );\r\n    } \r\n    }\r\n\r\n\r\nexport default List;*/\r\n\r\n\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAGA;AACA;;;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAEA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AAHA;AAgBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAbA;AAqBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAZA;AAoBA;AACA;AACA;AACA;AAFA;AAGA;AAhEA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8FA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAtHA;AACA;AAwHA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}