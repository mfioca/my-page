{"version":3,"file":"static/webpack/static\\development\\pages\\providerData.js.50b9fdabb15537686241.hot-update.js","sources":["webpack:///./pages/providerData.js"],"sourcesContent":["import React from 'react';\r\nimport Layout from '../components/layout.js';\r\nimport { Container, Row, Col, Table } from 'reactstrap';\r\nimport { JumbonoImage } from './customComponents';\r\nimport ProviderList from './provider_data/providerImport.js';\r\n\r\n\r\nvar data = require('./provider_data/provider.json');\r\n\r\n\r\n// {data.filter(data => data.Type === 'Provider').length}: \r\n// filters the json based on items with values and totals up \r\n//the number of listed items with that data value.  example above:\r\n//count the number of entries with the data \"Type\" of 'Provider'  \r\n\r\n//function Providerinfo() {\r\nclass Providerinfo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Row>\r\n                    <Col className=\"px-5\">\r\n                    <h4 className=\"text-center p-2\"><b><u>Provider Totals</u></b></h4> \r\n                        <Table striped bordered size=\"sm\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th className=\"text-center\">Total Transportation Providers:</th>\r\n                                    <td>{data.length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Volunteer Driver').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"text-center\">Central Region Providers:</th>\r\n                                    <td>{data.filter(data => data.Region === 'Central').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider' && data.Region === 'Central' ).length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Volunteer Driver' && data.Region === 'Central').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"text-center\">SouthWest Region:</th>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider' && data.Region === 'SouthWest' ).length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td> {data.filter(data => data.Type === 'Volunteer Driver' && data.Region === 'SouthWest').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"text-center\">East Region:</th>\r\n                                    <td>{data.filter(data => data.Region === 'East').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Transportation Companies:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Provider' && data.Region === 'East' ).length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-right\">Volunteer Drivers:</td>\r\n                                    <td>{data.filter(data => data.Type === 'Volunteer Driver' && data.Region === 'East').length}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                    <Col className=\"px-5\">\r\n                        <h4 className=\"text-center p-2\"><b><u>Level of Service Totals</u></b></h4>\r\n                        <Table striped bordered size=\"sm\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th colspan=\"2\">All Regions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td colspan=\"2\">{data.filter(data => data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th colspan=\"2\">Central</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td>{data.filter(data => data.Region === 'Central' && data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.Region === 'Central' && data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Region === 'Central' && data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th colspan=\"2\">SouthWest</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest' && data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest' && data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Region === 'SouthWest' && data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th colspan=\"2\">East</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Ambulatory:</td>\r\n                                    <td>{data.filter(data => data.Region === 'East' && data.Amb === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Wheelchair:</td>\r\n                                    <td>{data.filter(data => data.Region === 'East' && data.WCHR === 'Yes').length}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Providers with Stretcher:</td>\r\n                                    <td>{data.filter(data => data.Region === 'East' && data.Stretcher === 'Yes').length}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction ProviderData() {\r\n    return (\r\n        <Layout>\r\n            <JumbonoImage \r\n                Title=\"Provider List\"\r\n                Caption1=\"this is data imported from a local json file. It will recreate a tracking\r\n                spreadsheet I created at one of my jobs.\"\r\n                Caption2=\"I used react-table dependency to build the data table. Altering formatting\r\n                to match my spreadsheet.\"\r\n                noonewouldeverusethisname='text-center'\r\n                />\r\n            {/*Providerinfo listed above*/}\r\n            <Providerinfo />\r\n            {/*pulled in from providerimport.js*/}\r\n            <Row className=\"justify-content-center\">\r\n                <Col xs=\"11\" >\r\n                <ProviderList />\r\n                </Col>\r\n            </Row>\r\n        </Layout>\r\n    ); \r\n}\r\n\r\nexport default ProviderData;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AADA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAlIA;AACA;AAsIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}