{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandDpage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../components/layout.js';\nimport { SetConstAdj, SetAcAdj, SetDmgHitAdj, setherostats, setmonsterstats, RollforIniative, AttackRoll, AttackTurn } from '../components/DandDfunctions';\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../components/customComponents';\nimport { Row, Col, Button } from 'reactstrap';\n\nclass AttackSim extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      base: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10\n      },\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroNametext: '',\n      heroName: 'Hero',\n      heroInitiative: 0,\n      heroAttackVisible: false,\n      heroRoll: 0,\n      heroDidHit: '',\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterNametext: '',\n      monsterName: 'Monster',\n      monsterInitiative: 0,\n      monsterAttackVisible: false,\n      monsterRoll: 0,\n      monsterDidHit: '',\n      initiativeButtonVisible: true\n    }; //Hero bind function statements\n\n    this.setherostats = setherostats.bind(this);\n    this.heroNameChange = this.heroNameChange.bind(this);\n    this.heroNameSubmit = this.heroNameSubmit.bind(this); //monster bind function statements\n\n    this.setmonsterstats = setmonsterstats.bind(this);\n    this.monsterNameChange = this.monsterNameChange.bind(this);\n    this.monsterNameSubmit = this.monsterNameSubmit.bind(this); //combined hero/monster function statesments\n\n    this.SetConstAdj = SetConstAdj.bind(this);\n    this.SetAcAdj = SetAcAdj.bind(this);\n    this.SetDmgHitAdj = SetDmgHitAdj.bind(this);\n    this.RollforIniative = RollforIniative.bind(this);\n    this.AttackRoll = AttackRoll.bind(this);\n    this.AttackTurn = AttackTurn.bind(this);\n  }\n\n  heroNameChange(event) {\n    this.setState({\n      heroNametext: event.target.value\n    });\n  }\n\n  heroNameSubmit(event) {\n    this.setState({\n      heroName: this.state.heroNametext\n    });\n  }\n\n  monsterNameChange(event) {\n    this.setState({\n      monsterNametext: event.target.value\n    });\n  }\n\n  monsterNameSubmit(event) {\n    this.setState({\n      monsterName: this.state.monsterNametext\n    });\n  }\n\n  IntButton() {\n    if (this.state.initiativeButtonVisible === true) {\n      return __jsx(Button, {\n        className: \"m-5 w-50\",\n        onClick: this.RollforIniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Roll for iniative\");\n    } else {\n      return __jsx(\"h4\", {\n        className: \"text-white m-5 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Round in Progress\");\n    }\n\n    ;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(CenterFlexWrapDiv, {\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(Row, {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(Col, {\n      className: \"m-1 bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"h5\", {\n      className: \"mt-5 ml-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Hero Name: \"), __jsx(\"span\", {\n      className: \"text-info ml-5 h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.heroName)), __jsx(CharacterSheet, {\n      Strength: this.state.herostats.Str,\n      Constitution: this.state.herostats.Const,\n      Dexterity: this.state.herostats.Dext,\n      Hitpoints: this.state.heroHp,\n      Damage: this.state.heroDmg,\n      ImgUrl: \"../static/images/hero.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"text-center m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: this.setherostats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Set Attrubutes\")), __jsx(NameForm, {\n      Value: this.state.value,\n      NameChange: this.heroNameChange,\n      NameSubmit: this.heroNameSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), __jsx(Col, {\n      className: \"m-1 bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(\"h5\", {\n      className: \"mt-5 ml-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Monster Name: \"), __jsx(\"span\", {\n      className: \"text-info ml-5 h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.monsterName)), __jsx(CharacterSheet, {\n      Strength: this.state.monsterstats.Str,\n      Constitution: this.state.monsterstats.Const,\n      Dexterity: this.state.monsterstats.Dext,\n      Hitpoints: this.state.monsterHp,\n      Damage: this.state.monsterDmg,\n      ImgUrl: \"../static/images/monster.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"text-center m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: this.setmonsterstats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Set Attrubutes\")), __jsx(NameForm, {\n      Value: this.state.value,\n      NameChange: this.monsterNameChange,\n      NameSubmit: this.monsterNameSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })))), __jsx(CenterFlexWrapDiv, {\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"bg-dark m-1 p-0 mb-2 col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, __jsx(AttackSection, {\n      AC: this.state.heroAc,\n      HitAdj: this.state.heroHitAdj,\n      AttackRoll: this.AttackRoll,\n      RollTitle: \"Hero Roll for Attack\",\n      Roll: this.state.heroRoll,\n      DidHit: this.state.heroDidHit,\n      NextTurn: this.AttackTurn,\n      AttackTurn: this.state.heroAttackVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"bg-dark m-1 mb-2 p-0 col text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.IntButton(), __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, __jsx(Col, {\n      className: \"w-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, __jsx(AttackStatusDisplay, {\n      Name: this.state.heroName,\n      Initiative: this.state.heroInitiative,\n      HP: this.state.heroHp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, __jsx(AttackStatusDisplay, {\n      Name: this.state.monsterName,\n      Initiative: this.state.monsterInitiative,\n      HP: this.state.monsterHp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })))), __jsx(\"div\", {\n      className: \"bg-dark m-1 p-0 mb-2 col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, __jsx(AttackSection, {\n      AC: this.state.monsterAc,\n      HitAdj: this.state.monsterHitAdj,\n      AttackRoll: this.AttackRoll,\n      RollTitle: \"Monster Roll for Attack\",\n      Roll: this.state.monsterRoll,\n      DidHit: this.state.monsterDidHit,\n      NextTurn: this.AttackTurn,\n      AttackTurn: this.state.monsterAttackVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction DandD() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"ml-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Dungeons and Dragons attack simulation\"), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Calculations are based on SE 2 rules from late 80's and early 90's.\"), __jsx(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Instructions:\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Press the \\\"Set Attributes\\\" buttons for both Hero and Monster.\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Press the \\\"Roll for Initiative\\\" button to see who attacks first.\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Follow the instructions and press the \\\"Roll for Attack\\\" buttons.\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"After each round, repeat by rolling for Initiative and continue attacking until a character dies.\"))), __jsx(AttackSim, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }));\n}\n\nexport default DandD;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandDpage.js"],"names":["React","Layout","SetConstAdj","SetAcAdj","SetDmgHitAdj","setherostats","setmonsterstats","RollforIniative","AttackRoll","AttackTurn","CharacterSheet","NameForm","AttackSection","CenterFlexWrapDiv","AttackStatusDisplay","Row","Col","Button","AttackSim","Component","constructor","props","state","base","Hp","ArmorClass","Damage","herostats","Str","Const","Dext","monsterstats","heroHp","heroAc","heroDmg","heroHitAdj","heroNametext","heroName","heroInitiative","heroAttackVisible","heroRoll","heroDidHit","monsterHp","monsterAc","monsterDmg","monsterHitAdj","monsterNametext","monsterName","monsterInitiative","monsterAttackVisible","monsterRoll","monsterDidHit","initiativeButtonVisible","bind","heroNameChange","heroNameSubmit","monsterNameChange","monsterNameSubmit","event","setState","target","value","IntButton","render","DandD"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/layout.js'\r\nimport { SetConstAdj, SetAcAdj, SetDmgHitAdj, setherostats, setmonsterstats,\r\n    RollforIniative, AttackRoll, AttackTurn } from '../components/DandDfunctions'\r\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../components/customComponents'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            base: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10\r\n            },\r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroNametext: '',\r\n            heroName: 'Hero',\r\n            heroInitiative: 0,\r\n            heroAttackVisible: false,\r\n            heroRoll: 0,\r\n            heroDidHit: '',\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterNametext: '',\r\n            monsterName: 'Monster',\r\n            monsterInitiative: 0,\r\n            monsterAttackVisible: false,\r\n            monsterRoll: 0,\r\n            monsterDidHit: '',\r\n            initiativeButtonVisible: true,\r\n        };\r\n\r\n        //Hero bind function statements\r\n        this.setherostats = setherostats.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n        this.heroNameSubmit = this.heroNameSubmit.bind(this);\r\n        \r\n        //monster bind function statements\r\n        this.setmonsterstats = setmonsterstats.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n        this.monsterNameSubmit = this.monsterNameSubmit.bind(this);\r\n\r\n        //combined hero/monster function statesments\r\n        this.SetConstAdj = SetConstAdj.bind(this);\r\n        this.SetAcAdj = SetAcAdj.bind(this);\r\n        this.SetDmgHitAdj = SetDmgHitAdj.bind(this);\r\n        this.RollforIniative = RollforIniative.bind(this);\r\n        this.AttackRoll = AttackRoll.bind(this);\r\n        this.AttackTurn = AttackTurn.bind(this);\r\n\r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext})\r\n    }\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterNametext : event.target.value});\r\n    }\r\n\r\n    monsterNameSubmit(event) {\r\n        this.setState ({monsterName: this.state.monsterNametext});\r\n    }\r\n\r\n    IntButton() {\r\n        if (this.state.initiativeButtonVisible === true) {\r\n            return (\r\n                <Button \r\n                    className=\"m-5 w-50\"  \r\n                    onClick={this.RollforIniative}>\r\n                    Roll for iniative\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (\r\n                <h4 className=\"text-white m-5 text-center\">Round in Progress</h4>\r\n            )\r\n        };\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n            <div>\r\n                <CenterFlexWrapDiv className=\"m-0 p-0\"> \r\n                    <Row className=\"w-100\">\r\n            {/**********Hero Character Sheet*********/}\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <h5 className=\"mt-5 ml-5\"><b>Hero Name: </b>\r\n                                <span className=\"text-info ml-5 h3\">\r\n                                    {this.state.heroName}\r\n                                </span>\r\n                            </h5>\r\n                            <CharacterSheet \r\n                                Strength = {this.state.herostats.Str}\r\n                                Constitution = {this.state.herostats.Const}\r\n                                Dexterity = {this.state.herostats.Dext}\r\n                                Hitpoints = {this.state.heroHp}\r\n                                Damage = {this.state.heroDmg}\r\n                                ImgUrl= \"../static/images/hero.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setherostats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm\r\n                                Value = {this.state.value}\r\n                                NameChange = {this.heroNameChange}\r\n                                NameSubmit = {this.heroNameSubmit}\r\n                            />\r\n                        </Col>\r\n            {/**********Monster Character Sheet*********/}\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <h5 className=\"mt-5 ml-5\"><b>Monster Name: </b>\r\n                                <span className=\"text-info ml-5 h3\">\r\n                                    {this.state.monsterName}\r\n                                </span>\r\n                            </h5>\r\n                            <CharacterSheet\r\n                                Strength = {this.state.monsterstats.Str}\r\n                                Constitution = {this.state.monsterstats.Const}\r\n                                Dexterity = {this.state.monsterstats.Dext}\r\n                                Hitpoints = {this.state.monsterHp}\r\n                                Damage = {this.state.monsterDmg}\r\n                                ImgUrl = \"../static/images/monster.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setmonsterstats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm\r\n                                Value = {this.state.value}\r\n                                NameChange = {this.monsterNameChange}\r\n                                NameSubmit = {this.monsterNameSubmit}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </CenterFlexWrapDiv>\r\n                <CenterFlexWrapDiv className=\"m-0 p-0\">\r\n                    <div  className=\"bg-dark m-1 p-0 mb-2 col\">\r\n            {/**********Hero Display Area*********/}\r\n                        <AttackSection\r\n                            AC = {this.state.heroAc}\r\n                            HitAdj = {this.state.heroHitAdj}\r\n                            AttackRoll = {this.AttackRoll}\r\n                            RollTitle = \"Hero Roll for Attack\"\r\n                            Roll = {this.state.heroRoll}\r\n                            DidHit = {this.state.heroDidHit}\r\n                            NextTurn = {this.AttackTurn}\r\n                            AttackTurn = {this.state.heroAttackVisible}\r\n                        /> \r\n                    </div>\r\n                    <div className=\"bg-dark m-1 mb-2 p-0 col text-center text-white\">\r\n                        {this.IntButton()}\r\n                        <Row>\r\n                            <Col className=\"w-50\">\r\n                                <AttackStatusDisplay\r\n                                    Name = {this.state.heroName}\r\n                                    Initiative = {this.state.heroInitiative}\r\n                                    HP = {this.state.heroHp}\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <AttackStatusDisplay\r\n                                    Name = {this.state.monsterName}\r\n                                    Initiative = {this.state.monsterInitiative}\r\n                                    HP = {this.state.monsterHp}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"bg-dark m-1 p-0 mb-2 col\">\r\n            {/**********Monster Display Area*********/}\r\n                        <AttackSection\r\n                            AC = {this.state.monsterAc}\r\n                            HitAdj = {this.state.monsterHitAdj}\r\n                            AttackRoll = {this.AttackRoll}\r\n                            RollTitle = \"Monster Roll for Attack\"\r\n                            Roll = {this.state.monsterRoll}\r\n                            DidHit = {this.state.monsterDidHit}\r\n                            NextTurn = {this.AttackTurn}\r\n                            AttackTurn = {this.state.monsterAttackVisible}\r\n                        />\r\n                    </div>\r\n                </CenterFlexWrapDiv>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction DandD(){\r\n    return (\r\n        <Layout>\r\n            <div className=\"ml-5\">\r\n                <h1>Dungeons and Dragons attack simulation</h1>\r\n                <h4>Calculations are based on SE 2 rules from late 80's and early 90's.</h4>\r\n                <ol><b>Instructions:</b>\r\n                    <li>Press the \"Set Attributes\" buttons for both Hero and Monster.</li>\r\n                    <li>Press the \"Roll for Initiative\" button to see who attacks first.</li>\r\n                    <li>Follow the instructions and press the \"Roll for Attack\" buttons.</li>\r\n                    <li>After each round, repeat by rolling for Initiative and continue \r\n                        attacking until a character dies.</li>\r\n                </ol>\r\n            </div>\r\n            <AttackSim />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default DandD;\r\n\r\n"]},"metadata":{},"sourceType":"module"}