{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\n/* **************** \r\n*   Imports       * \r\n******************/\nimport React, { useState } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Row, Col, Form, Label, Input, Button, Collapse, Table, Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport { HomeCardStyle, DandDStyle, ImageStyles, TvpageStyle, Pointer, TabStyle, Tplist } from './jsxstyles';\nimport Link from 'next/link';\n/* *********************************\r\n*   Export styled components       * \r\n***********************************/\n//Used in datecheck below\n\nexport function BackgroundDanger(props) {\n  return __jsx(\"span\", {\n    className: \"bg-danger text-white\"\n  }, props.children);\n} //Used in dateCheck below\n\nexport function BackgroundWarning(props) {\n  return __jsx(\"span\", {\n    className: \"bg-warning text-white\"\n  }, props.children);\n}\nexport function NewTabLink(props) {\n  return __jsx(\"a\", {\n    className: props.Style,\n    href: props.Link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    title: props.Title\n  }, props.children);\n} //used in home page, attacksim\n\nexport function CenterFlexWrapDiv(props) {\n  return __jsx(\"div\", {\n    className: \"d-flex flex-wrap justify-content-center\"\n  }, props.children);\n} //used in tvpost, tvpage\n\nexport function LeftFlexWrapDiv(props) {\n  return __jsx(\"div\", {\n    className: \"d-flex flex-wrap justify-content-left\"\n  }, props.children);\n}\nexport function TvMazeHeader() {\n  return __jsx(\"div\", null, __jsx(Link, {\n    href: \"/tvpage\"\n  }, __jsx(\"a\", {\n    style: TvpageStyle.Link\n  }, \"Search Page\")));\n}\nexport function TvMazePage(props) {\n  return __jsx(\"div\", {\n    style: TvpageStyle.Layout\n  }, __jsx(TvMazeHeader, null), props.children);\n}\nexport function TvPostInfoLabel(props) {\n  return __jsx(\"td\", {\n    className: \"h2 text-left w-25 m-0 p-2\"\n  }, props.children);\n}\nexport function TvPostInfoValue(props) {\n  return __jsx(\"td\", {\n    className: \"text-left m-0 p-2\"\n  }, __jsx(\"small\", null, props.children));\n} //used in provider compliance\n\nexport function TplistHeaderRow(props) {\n  return __jsx(Row, {\n    className: \"p-0 bg-secondary text-white rounded-lg\"\n  }, props.children);\n} //used in providercompliance\n\nexport function InfoField(props) {\n  return __jsx(\"p\", {\n    style: Tplist.Info\n  }, props.children);\n}\n/* *********************** \r\n*   Export functions     * \r\n**************************/\n//used in providerCompliance\n\nexport function DateCheck(props) {\n  var date = props.Date;\n\n  if (date < \"2019-09-22\") {\n    return __jsx(BackgroundDanger, null, date);\n  } else if (date < \"2019-10-22\" && date > \"2019-09-22\") {\n    return __jsx(BackgroundWarning, null, date);\n  } else {\n    return __jsx(\"span\", null, date);\n  }\n} //used in TvPage and TVPost\n\nexport function TvMazeCard(props) {\n  return __jsx(Card, {\n    style: props.CardStyle,\n    className: props.CardClassName\n  }, __jsx(CardTitle, {\n    className: \"m-4 text-center\",\n    style: TvpageStyle.Title\n  }, props.Title), __jsx(CardBody, null, __jsx(CardImg, {\n    className: props.ImgClass,\n    style: TvpageStyle.Image,\n    src: props.ImgSrc,\n    alt: props.ImgAlt\n  }), __jsx(CardSubtitle, {\n    className: \"text-center my-2\"\n  }, __jsx(\"h4\", {\n    style: TvpageStyle.Cast\n  }, props.SubTitle)), __jsx(CardText, null, props.Description)), props.Link);\n} //used in ProviderCompliance, providerData and TVpost\n\nexport function CustomTabs(props) {\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return __jsx(\"div\", null, __jsx(Nav, {\n    tabs: true\n  }, __jsx(NavItem, null, __jsx(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggle('1');\n    },\n    style: Pointer\n  }, props.Tab1Name)), __jsx(NavItem, null, __jsx(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggle('2');\n    },\n    style: Pointer\n  }, props.Tab2Name))), __jsx(TabContent, {\n    activeTab: activeTab\n  }, __jsx(TabPane, {\n    tabId: \"1\",\n    style: TabStyle\n  }, props.Tab1Content), __jsx(TabPane, {\n    tabId: \"2\",\n    style: TabStyle\n  }, props.Tab2Content)));\n}\n/* *********************** \r\n*   Export Classes       * \r\n**************************/\n//used in home page\n\nexport class HomeCard extends React.Component {\n  render() {\n    return __jsx(\"div\", null, __jsx(Card, {\n      style: HomeCardStyle.Card\n    }, __jsx(CardTitle, {\n      style: HomeCardStyle.Title\n    }, this.props.Title), __jsx(CardImg, {\n      top: true,\n      style: ImageStyles.HomeCard,\n      src: this.props.Image,\n      alt: \"Card image cap\"\n    }), __jsx(CardBody, null, __jsx(CardSubtitle, null, this.props.Subtitle), __jsx(CardText, {\n      style: {\n        height: '80px'\n      }\n    }, this.props.Description), __jsx(Button, {\n      className: \"w-100 p-0 m-0\"\n    }, __jsx(NewTabLink, {\n      Style: \"btn btn-dark w-100 p-2\",\n      Link: this.props.Link\n    }, this.props.ButtonTitle)))));\n  }\n\n} //used in Resumeview, about page and providerdata\n\nexport class CustomJumbo extends React.Component {\n  render() {\n    if (this.props.ImgUrl === \"noimage\") {\n      return __jsx(Jumbotron, null, __jsx(\"h1\", {\n        className: \"display-3 text-center\"\n      }, this.props.Title), __jsx(\"p\", {\n        className: this.props.Caption1Style\n      }, this.props.Caption1), __jsx(\"hr\", {\n        className: \"my-2\"\n      }), __jsx(\"p\", {\n        className: this.props.Caption2Style\n      }, this.props.Caption2));\n    } else {\n      return __jsx(Jumbotron, null, __jsx(\"h1\", {\n        className: \"display-3 text-center\"\n      }, this.props.Title), __jsx(\"div\", {\n        className: \"container-fluid text-center\"\n      }, __jsx(\"img\", {\n        src: \"../static/images/avatar.jpg\",\n        style: ImageStyles.HomeAvatar,\n        alt: \"avatar\"\n      })), __jsx(\"p\", {\n        className: this.props.Caption1Style\n      }, this.props.Caption1), __jsx(\"hr\", {\n        className: \"my-2\"\n      }), __jsx(\"p\", {\n        className: this.props.Caption2Style\n      }, this.props.Caption2, __jsx(\"br\", null), this.props.Caption3));\n    }\n  }\n\n} //used in about page\n\nexport class AboutMedia extends React.Component {\n  render() {\n    if (this.props.Align === \"Right\") {\n      return __jsx(\"div\", {\n        className: \"py-2\"\n      }, __jsx(Card, {\n        className: this.props.Class\n      }, __jsx(Row, null, __jsx(Col, null, __jsx(CardImg, {\n        style: ImageStyles.About,\n        src: this.props.ImgUrl,\n        alt: \"Card image cap\"\n      })), __jsx(Col, null, __jsx(CardTitle, {\n        className: \"mt-5\"\n      }, __jsx(\"h1\", null, this.props.Title)), __jsx(CardBody, null, this.props.Description)))));\n    }\n\n    if (this.props.Align === \"Left\") {\n      return __jsx(\"div\", {\n        className: \"py-2\"\n      }, __jsx(Card, {\n        className: this.props.Class\n      }, __jsx(Row, null, __jsx(Col, null, __jsx(CardTitle, {\n        className: \"mt-5\"\n      }, __jsx(\"h1\", null, this.props.Title)), __jsx(CardBody, null, this.props.Description)), __jsx(Col, null, __jsx(CardImg, {\n        style: ImageStyles.About,\n        src: this.props.ImgUrl,\n        alt: \"Card image cap\"\n      })))));\n    }\n\n    ;\n  }\n\n} //used in resume for experience section\n\nexport class ThreeColumnCard extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      className: \"py-3\"\n    }, __jsx(Card, {\n      className: this.props.Class\n    }, __jsx(CardTitle, null, __jsx(\"h1\", null, this.props.Title)), __jsx(Row, {\n      className: \"text-left\"\n    }, __jsx(Col, null, __jsx(CardBody, null, __jsx(\"div\", null, __jsx(\"li\", null, this.props.Description1)))), __jsx(Col, null, __jsx(CardBody, null, __jsx(\"div\", null, __jsx(\"li\", null, this.props.Description2)))), __jsx(Col, null, __jsx(CardBody, null, __jsx(\"div\", null, __jsx(\"li\", null, this.props.Description3)))))));\n  }\n\n} //D and D application\n\nexport class CharacterSheet extends React.Component {\n  render() {\n    function DandDTableLabel(props) {\n      return __jsx(\"td\", {\n        className: \"text-muted text-left h4\"\n      }, props.children);\n    }\n\n    function DandDTableValue(props) {\n      return __jsx(\"td\", {\n        style: {\n          width: '100px'\n        },\n        className: \"text-white text-left h4\"\n      }, props.children);\n    }\n\n    return __jsx(\"div\", null, __jsx(Row, null, __jsx(Col, {\n      sm: {\n        size: 'auto',\n        offset: 0\n      }\n    }, __jsx(Table, {\n      borderless: true,\n      className: \"\"\n    }, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(DandDTableLabel, null, \"Strength:\"), __jsx(DandDTableValue, null, this.props.Strength)), __jsx(\"tr\", null, __jsx(DandDTableLabel, null, \"Constitution:\"), __jsx(DandDTableValue, null, this.props.Constitution)), __jsx(\"tr\", null, __jsx(DandDTableLabel, null, \"Dexterity:\"), __jsx(DandDTableValue, null, this.props.Dexterity)), __jsx(\"tr\", null, __jsx(DandDTableLabel, null, \"Hitpoints:\"), __jsx(DandDTableValue, null, this.props.Hitpoints != \"Dead\" && __jsx(\"span\", null, this.props.Hitpoints) || __jsx(\"span\", {\n      className: \"text-danger h5\"\n    }, __jsx(\"small\", null, this.props.Hitpoints)))), __jsx(\"tr\", null, __jsx(DandDTableLabel, null, \"Damage per Hit:\"), __jsx(DandDTableValue, null, this.props.Damage))))), __jsx(Col, {\n      sm: {\n        size: 'auto',\n        offset: 2\n      }\n    }, __jsx(\"div\", {\n      className: \"text-center \"\n    }, __jsx(\"img\", {\n      style: DandDStyle.Avatar,\n      src: this.props.ImgUrl,\n      alt: \"Avatar\"\n    })))));\n  }\n\n} // D and D application\n\nexport class AttackSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.RollResult = this.RollResult.bind(this);\n    this.AttackBanner = this.AttackBanner.bind(this);\n    this.AttackButton = this.AttackButton.bind(this);\n  } //Shows attack roll number with special display for\n  //crit scrike (natural 20 on roll)\n\n\n  RollResult() {\n    if (this.props.Roll === 'Crit Strike') {\n      return __jsx(\"span\", {\n        className: \"text-danger font-italic\"\n      }, \"Critical Strike!\");\n    } else {\n      return __jsx(\"span\", null, this.props.Roll);\n    }\n  } //shows attack result of hit/miss or place holder for\n  //result display.\n\n\n  AttackBanner() {\n    const Result = this.props.DidHit;\n\n    if (Result === \"Hit\") {\n      return __jsx(\"h2\", {\n        className: \"alert alert-success py-2 text-center\"\n      }, \"Hit!\");\n    }\n\n    if (Result === \"Miss\") {\n      return __jsx(\"h2\", {\n        className: \"alert alert-danger py-2 text-center\"\n      }, \"Miss\");\n    } else {\n      return __jsx(\"h6\", {\n        className: \"text-white text-center\"\n      }, \"(Attack Result displayed here)\");\n    }\n  }\n  /*Function to display attack button based on initiative roll and attack turn. \r\n  Pulls npAttackTurn functon and Attackroll functions from either herofunctions.js or \r\n  monsterfunctions.js as itentified in props */\n\n\n  AttackButton() {\n    if (this.props.AttackTurn === true) {\n      return __jsx(Button, {\n        onClick: this.props.AttackRoll //onMouseDown={this.props.NextTurn}\n        //onMouseDown={this.props.AttackRoll && this.props.NextTurn} \n        //onMouseUp = {this.props.NextTurn}\n\n      }, this.props.RollTitle);\n    } else {\n      return __jsx(\"h4\", {\n        className: \"text-white\"\n      }, \"Not your turn\");\n    }\n\n    ;\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Row, null, __jsx(Col, {\n      className: \"my-4 mx-5 d-flex justify-content-center\"\n    }, __jsx(\"div\", {\n      style: DandDStyle.thumbnail,\n      className: \"jsx-1953405926\"\n    }, __jsx(\"img\", {\n      src: \"../static/images/acicon.png\",\n      alt: \"shield\",\n      className: \"jsx-1953405926\"\n    }), __jsx(\"div\", {\n      className: \"jsx-1953405926\"\n    }, __jsx(\"h4\", {\n      className: \"jsx-1953405926\" + \" \" + \"AC-Icon-text\"\n    }, this.props.AC)))), __jsx(Col, {\n      className: \"my-4 mx-5 d-flex justify-content-center\"\n    }, __jsx(\"div\", {\n      style: DandDStyle.thumbnail,\n      className: \"jsx-1953405926\"\n    }, __jsx(\"img\", {\n      src: \"../static/images/hitadjust.png\",\n      alt: \"icon\",\n      className: \"jsx-1953405926\"\n    }), __jsx(\"div\", {\n      className: \"jsx-1953405926\"\n    }, __jsx(\"h4\", {\n      className: \"jsx-1953405926\" + \" \" + \"HitAdj-Icon-text\"\n    }, this.props.HitAdj)))), __jsx(_JSXStyle, {\n      id: \"1953405926\"\n    }, [\".AC-Icon-text.jsx-1953405926{position:absolute;top:42px;left:50px;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);}\", \".HitAdj-Icon-text.jsx-1953405926{position:absolute;top:48%;left:50px;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);}\"])), __jsx(\"div\", {\n      className: \"d-flex justify-content-center my-4\"\n    }, this.AttackButton()), __jsx(\"div\", {\n      className: \"text-center text-white\"\n    }, __jsx(\"h2\", null, \"Attack Result:\"), __jsx(\"p\", {\n      className: \"mt-2 p-0\"\n    }, \"attack roll: \\xA0 \", this.RollResult())), __jsx(\"div\", null, this.AttackBanner()));\n  }\n\n} //used in DandD page to display Name,Initiative and HP status for hero and \n//monster.\n\nexport class AttackStatusDisplay extends React.Component {\n  render() {\n    return __jsx(\"div\", null, __jsx(\"h4\", {\n      className: \"text-info\"\n    }, this.props.Name), __jsx(\"div\", {\n      className: \"text-center pt-4\"\n    }, __jsx(\"div\", {\n      className: \"p-3\"\n    }, __jsx(\"h4\", null, \"iniative:\"), __jsx(\"h4\", null, this.props.Initiative != \"Second\" && __jsx(\"span\", {\n      className: \"text-info\"\n    }, this.props.Initiative) || __jsx(\"span\", {\n      className: \"text-warning\"\n    }, this.props.Initiative))), __jsx(\"div\", {\n      className: \"p-3\"\n    }, __jsx(\"h4\", null, \"Hit Points:\"), __jsx(\"h4\", {\n      className: \"text-center mt-4\"\n    }, this.props.HP != \"Dead\" && __jsx(\"span\", {\n      className: \"text-success\"\n    }, this.props.HP) || __jsx(\"span\", {\n      className: \"text-danger\"\n    }, this.props.HP)))));\n  }\n\n} //D and D application\n\nexport class NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  }\n\n  render() {\n    return __jsx(Row, {\n      className: \"my-3\"\n    }, __jsx(Col, {\n      xs: \"auto\"\n    }, __jsx(Button, {\n      onClick: this.toggle\n    }, this.state.collapse ? 'Hide' : 'Change Name')), __jsx(Col, null, __jsx(Collapse, {\n      isOpen: this.state.collapse\n    }, __jsx(Form, {\n      inline: true\n    }, __jsx(Label, {\n      className: \"mx-sm-2\"\n    }, \"Name:\"), __jsx(Input, {\n      type: \"text\",\n      maxLength: \"20\",\n      value: this.props.Value,\n      onChange: this.props.NameChange //Prevent enter key submit\n      ,\n      onKeyPress: event => {\n        if (event.which === 13\n        /* Enter */\n        ) {\n            event.preventDefault();\n          }\n      }\n    }), __jsx(Button, {\n      className: \"ml-sm-2\",\n      onClick: this.props.NameSubmit\n    }, \"Submit\")))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}