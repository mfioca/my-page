{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\tvpage.js\",\n    _this2 = this;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Form, Label, Input } from 'reactstrap';\nimport Layout from '../components/layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { NewTabLink, LeftFlexWrapDiv, TvMazePage, TvMazeCard } from '../components/customComponents';\nvar noimage = '/static/images/no-img.png';\nvar Search = '';\n\nvar Searchbar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n\n  var _super = _createSuper(Searchbar);\n\n  function Searchbar(props) {\n    var _this;\n\n    _classCallCheck(this, Searchbar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: ''\n    };\n    _this.enterSearch = _this.enterSearch.bind(_assertThisInitialized(_this));\n    return _this;\n  } //handles setting state of search value to render tvmaze json api\n  //sets variable search value to state\n\n\n  _createClass(Searchbar, [{\n    key: \"enterSearch\",\n    value: function enterSearch(event) {\n      this.setState({\n        value: event.target.value\n      });\n      Search = event.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Form, {\n        inline: true,\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, __jsx(Label, {\n        className: \"mr-sm-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, \"TV Show search by Name:\"), __jsx(Input, {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.enterSearch //Prevent enter key submit\n        ,\n        onKeyPress: function onKeyPress(event) {\n          if (event.which === 13\n          /* Enter */\n          ) {\n              event.preventDefault();\n            }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), __jsx(Link, {\n        href: \"/tvpage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        className: \"btn btn-dark ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Click Submit\")));\n    }\n  }]);\n\n  return Searchbar;\n}(React.Component);\n\nvar TvPage = function TvPage(props) {\n  return __jsx(Layout, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"the below content has been imported from\", __jsx(NewTabLink, {\n    Link: \"https://www.tvmaze.com\",\n    Title: \"TvMaze.com\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Tvmaze.com\")), __jsx(Searchbar, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), __jsx(TvMazePage, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Results for: \", Search), __jsx(LeftFlexWrapDiv, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, props.shows.map(function (show) {\n    return __jsx(\"div\", {\n      className: \"p-3\",\n      key: show.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, __jsx(TvMazeCard, {\n      CardStyle: {\n        width: '250px'\n      },\n      Title: __jsx(\"p\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, __jsx(\"b\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }\n      }, __jsx(\"u\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, show.name))),\n      ImgSrc: show.image ? show.image.medium : noimage,\n      ImgAlt: \"image\",\n      Link: __jsx(\"a\", {\n        href: \"/tvpost?id=\".concat(show.id),\n        className: \"btn btn-dark w-100\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Select\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }));\n  }))));\n};\n\nTvPage.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=' + Search));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default TvPage;","map":{"version":3,"sources":["C:/Users/Mark/Desktop/newtest/my-page/pages/tvpage.js"],"names":["React","Form","Label","Input","Layout","Link","fetch","NewTabLink","LeftFlexWrapDiv","TvMazePage","TvMazeCard","noimage","Search","Searchbar","props","state","value","enterSearch","bind","event","setState","target","which","preventDefault","Component","TvPage","shows","map","show","id","width","name","image","medium","getInitialProps","res","json","data","console","log","length","entry"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Label, Input } from 'reactstrap'\r\nimport Layout from '../components/layout'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { NewTabLink, LeftFlexWrapDiv, TvMazePage, TvMazeCard } from '../components/customComponents'\r\n\r\n\r\nconst noimage = '/static/images/no-img.png';\r\nvar Search = '';\r\n\r\nclass Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.enterSearch = this.enterSearch.bind(this);\r\n  }\r\n  //handles setting state of search value to render tvmaze json api\r\n  //sets variable search value to state\r\n  enterSearch(event) {\r\n    this.setState({value: event.target.value});\r\n    Search = (event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form inline className=\"justify-content-center\">\r\n        <Label className=\"mr-sm-2\">TV Show search by Name:</Label>\r\n        <Input\r\n          type=\"text\"\r\n          value={this.state.value} \r\n          onChange={this.enterSearch} \r\n          //Prevent enter key submit\r\n          onKeyPress={event => {\r\n            if (event.which === 13 /* Enter */) {\r\n              event.preventDefault();\r\n            }\r\n          }}\r\n        />\r\n        {/*due to get initial props async function is only called on page load\r\n          disguised a page link as a search button to call value of search for \r\n          the await fetch api call.*/}\r\n        <Link href=\"/tvpage\">\r\n          <a className=\"btn btn-dark ml-4\">Click Submit</a>\r\n        </Link>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst TvPage = props => (\r\n  \r\n  <Layout>\r\n    <h1 className=\"text-center\">the below content has been imported from \r\n      <NewTabLink\r\n        Link=\"https://www.tvmaze.com\"\r\n        Title=\"TvMaze.com\">\r\n          Tvmaze.com\r\n      </NewTabLink>\r\n    </h1>\r\n    <Searchbar />\r\n    <TvMazePage>\r\n      <h1>Results for: {Search}</h1>\r\n      <LeftFlexWrapDiv>\r\n        {props.shows.map(show => (\r\n          <div className=\"p-3\" key={show.id}>\r\n            <TvMazeCard\r\n              CardStyle={{width: '250px'}}\r\n              Title={\r\n                <p><b><u>{show.name}</u></b></p>\r\n              }\r\n              ImgSrc={show.image ? show.image.medium : noimage}\r\n              ImgAlt=\"image\"\r\n              Link={\r\n                <a href={`/tvpost?id=${show.id}`} className=\"btn btn-dark w-100\">Select</a>\r\n              }\r\n            />\r\n          </div>\r\n        ))}\r\n      </LeftFlexWrapDiv>\r\n    </TvMazePage>\r\n  </Layout>\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  //tvmaze search api link.  pulls the json info based on the search variable\r\n  //entered by user in the search field.\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + Search);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;\r\n"]},"metadata":{},"sourceType":"module"}