{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandDpage.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Layout from '../components/layout.js';\nimport { SetConstAdj, SetAcAdj, SetDmgHitAdj, setherostats, setmonsterstats, RollforIniative, AttackRoll, AttackTurn } from '../components/DandDfunctions';\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../components/customComponents';\nimport { Row, Col, Button } from 'reactstrap';\n\nvar AttackSim = /*#__PURE__*/function (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  var _super = _createSuper(AttackSim);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      base: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10\n      },\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroNametext: '',\n      heroName: 'Hero',\n      heroInitiative: 0,\n      heroAttackVisible: false,\n      heroRoll: 0,\n      heroDidHit: '',\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterNametext: '',\n      monsterName: 'Monster',\n      monsterInitiative: 0,\n      monsterAttackVisible: false,\n      monsterRoll: 0,\n      monsterDidHit: '',\n      initiativeButtonVisible: true\n    }; //Hero bind function statements\n\n    _this.setherostats = setherostats.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    _this.heroNameSubmit = _this.heroNameSubmit.bind(_assertThisInitialized(_this)); //monster bind function statements\n\n    _this.setmonsterstats = setmonsterstats.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    _this.monsterNameSubmit = _this.monsterNameSubmit.bind(_assertThisInitialized(_this)); //combined hero/monster function statesments\n\n    _this.SetConstAdj = SetConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetAcAdj = SetAcAdj.bind(_assertThisInitialized(_this));\n    _this.SetDmgHitAdj = SetDmgHitAdj.bind(_assertThisInitialized(_this));\n    _this.RollforIniative = RollforIniative.bind(_assertThisInitialized(_this));\n    _this.AttackRoll = AttackRoll.bind(_assertThisInitialized(_this));\n    _this.AttackTurn = AttackTurn.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"heroNameSubmit\",\n    value: function heroNameSubmit(event) {\n      this.setState({\n        heroName: this.state.heroNametext\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameSubmit\",\n    value: function monsterNameSubmit(event) {\n      this.setState({\n        monsterName: this.state.monsterNametext\n      });\n    }\n  }, {\n    key: \"IntButton\",\n    value: function IntButton() {\n      if (this.state.initiativeButtonVisible === true) {\n        return __jsx(Button, {\n          className: \"m-5 w-50\",\n          onClick: this.RollforIniative,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }\n        }, \"Roll for iniative\");\n      } else {\n        return __jsx(\"h4\", {\n          className: \"text-white m-5 text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, \"Round in Progress\");\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, __jsx(CenterFlexWrapDiv, {\n        className: \"m-0 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, __jsx(Row, {\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, __jsx(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, __jsx(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 55\n        }\n      }, \"Hero Name: \"), __jsx(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 33\n        }\n      }, this.state.heroName)), __jsx(CharacterSheet, {\n        Strength: this.state.herostats.Str,\n        Constitution: this.state.herostats.Const,\n        Dexterity: this.state.herostats.Dext,\n        Hitpoints: this.state.heroHp,\n        Damage: this.state.heroDmg,\n        ImgUrl: \"../static/images/hero.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"text-center m-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, __jsx(Button, {\n        onClick: this.setherostats,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }, \"Set Attrubutes\")), __jsx(NameForm, {\n        Value: this.state.value,\n        NameChange: this.heroNameChange,\n        NameSubmit: this.heroNameSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      })), __jsx(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, __jsx(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 55\n        }\n      }, \"Monster Name: \"), __jsx(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }\n      }, this.state.monsterName)), __jsx(CharacterSheet, {\n        Strength: this.state.monsterstats.Str,\n        Constitution: this.state.monsterstats.Const,\n        Dexterity: this.state.monsterstats.Dext,\n        Hitpoints: this.state.monsterHp,\n        Damage: this.state.monsterDmg,\n        ImgUrl: \"../static/images/monster.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"text-center m-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, __jsx(Button, {\n        onClick: this.setmonsterstats,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, \"Set Attrubutes\")), __jsx(NameForm, {\n        Value: this.state.value,\n        NameChange: this.monsterNameChange,\n        NameSubmit: this.monsterNameSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      })))), __jsx(CenterFlexWrapDiv, {\n        className: \"m-0 p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"bg-dark m-1 p-0 mb-2 col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, __jsx(AttackSection, {\n        AC: this.state.heroAc,\n        HitAdj: this.state.heroHitAdj,\n        AttackRoll: this.AttackRoll,\n        RollTitle: \"Hero Roll for Attack\",\n        Roll: this.state.heroRoll,\n        DidHit: this.state.heroDidHit,\n        NextTurn: this.AttackTurn,\n        AttackTurn: this.state.heroAttackVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"bg-dark m-1 mb-2 p-0 col text-center text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, this.IntButton(), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, __jsx(Col, {\n        className: \"w-50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }\n      }, __jsx(AttackStatusDisplay, {\n        Name: this.state.heroName,\n        Initiative: this.state.heroInitiative,\n        HP: this.state.heroHp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 33\n        }\n      })), __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }, __jsx(AttackStatusDisplay, {\n        Name: this.state.monsterName,\n        Initiative: this.state.monsterInitiative,\n        HP: this.state.monsterHp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 33\n        }\n      })))), __jsx(\"div\", {\n        className: \"bg-dark m-1 p-0 mb-2 col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, __jsx(AttackSection, {\n        AC: this.state.monsterAc,\n        HitAdj: this.state.monsterHitAdj,\n        AttackRoll: this.AttackRoll,\n        RollTitle: \"Monster Roll for Attack\",\n        Roll: this.state.monsterRoll,\n        DidHit: this.state.monsterDidHit,\n        NextTurn: this.AttackTurn,\n        AttackTurn: this.state.monsterAttackVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nfunction DandD() {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \"Dungeons and Dragons attack simulation\"), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, \"Calculations are based on SE 2 rules from late 80's and early 90's.\"), __jsx(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, \"Instructions:\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, \"Press the \\\"Set Attributes\\\" buttons for both Hero and Monster.\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, \"Press the \\\"Roll for Initiative\\\" button to see who attacks first.\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \"Follow the instructions and press the \\\"Roll for Attack\\\" buttons.\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, \"After each round, repeat by rolling for Initiative and continue attacking until a character dies.\"))), __jsx(AttackSim, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default DandD;","map":{"version":3,"sources":["C:/Users/Mark/Desktop/newtest/my-page/pages/DandDpage.js"],"names":["React","Layout","SetConstAdj","SetAcAdj","SetDmgHitAdj","setherostats","setmonsterstats","RollforIniative","AttackRoll","AttackTurn","CharacterSheet","NameForm","AttackSection","CenterFlexWrapDiv","AttackStatusDisplay","Row","Col","Button","AttackSim","props","state","base","Hp","ArmorClass","Damage","herostats","Str","Const","Dext","monsterstats","heroHp","heroAc","heroDmg","heroHitAdj","heroNametext","heroName","heroInitiative","heroAttackVisible","heroRoll","heroDidHit","monsterHp","monsterAc","monsterDmg","monsterHitAdj","monsterNametext","monsterName","monsterInitiative","monsterAttackVisible","monsterRoll","monsterDidHit","initiativeButtonVisible","bind","heroNameChange","heroNameSubmit","monsterNameChange","monsterNameSubmit","event","setState","target","value","IntButton","Component","DandD"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/layout.js'\r\nimport { SetConstAdj, SetAcAdj, SetDmgHitAdj, setherostats, setmonsterstats,\r\n    RollforIniative, AttackRoll, AttackTurn } from '../components/DandDfunctions'\r\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../components/customComponents'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            base: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10\r\n            },\r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroNametext: '',\r\n            heroName: 'Hero',\r\n            heroInitiative: 0,\r\n            heroAttackVisible: false,\r\n            heroRoll: 0,\r\n            heroDidHit: '',\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterNametext: '',\r\n            monsterName: 'Monster',\r\n            monsterInitiative: 0,\r\n            monsterAttackVisible: false,\r\n            monsterRoll: 0,\r\n            monsterDidHit: '',\r\n            initiativeButtonVisible: true,\r\n        };\r\n\r\n        //Hero bind function statements\r\n        this.setherostats = setherostats.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n        this.heroNameSubmit = this.heroNameSubmit.bind(this);\r\n        \r\n        //monster bind function statements\r\n        this.setmonsterstats = setmonsterstats.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n        this.monsterNameSubmit = this.monsterNameSubmit.bind(this);\r\n\r\n        //combined hero/monster function statesments\r\n        this.SetConstAdj = SetConstAdj.bind(this);\r\n        this.SetAcAdj = SetAcAdj.bind(this);\r\n        this.SetDmgHitAdj = SetDmgHitAdj.bind(this);\r\n        this.RollforIniative = RollforIniative.bind(this);\r\n        this.AttackRoll = AttackRoll.bind(this);\r\n        this.AttackTurn = AttackTurn.bind(this);\r\n\r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext})\r\n    }\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterNametext : event.target.value});\r\n    }\r\n\r\n    monsterNameSubmit(event) {\r\n        this.setState ({monsterName: this.state.monsterNametext});\r\n    }\r\n\r\n    IntButton() {\r\n        if (this.state.initiativeButtonVisible === true) {\r\n            return (\r\n                <Button \r\n                    className=\"m-5 w-50\"  \r\n                    onClick={this.RollforIniative}>\r\n                    Roll for iniative\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (\r\n                <h4 className=\"text-white m-5 text-center\">Round in Progress</h4>\r\n            )\r\n        };\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n            <div>\r\n                <CenterFlexWrapDiv className=\"m-0 p-0\"> \r\n                    <Row className=\"w-100\">\r\n            {/**********Hero Character Sheet*********/}\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <h5 className=\"mt-5 ml-5\"><b>Hero Name: </b>\r\n                                <span className=\"text-info ml-5 h3\">\r\n                                    {this.state.heroName}\r\n                                </span>\r\n                            </h5>\r\n                            <CharacterSheet \r\n                                Strength = {this.state.herostats.Str}\r\n                                Constitution = {this.state.herostats.Const}\r\n                                Dexterity = {this.state.herostats.Dext}\r\n                                Hitpoints = {this.state.heroHp}\r\n                                Damage = {this.state.heroDmg}\r\n                                ImgUrl= \"../static/images/hero.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setherostats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm\r\n                                Value = {this.state.value}\r\n                                NameChange = {this.heroNameChange}\r\n                                NameSubmit = {this.heroNameSubmit}\r\n                            />\r\n                        </Col>\r\n            {/**********Monster Character Sheet*********/}\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <h5 className=\"mt-5 ml-5\"><b>Monster Name: </b>\r\n                                <span className=\"text-info ml-5 h3\">\r\n                                    {this.state.monsterName}\r\n                                </span>\r\n                            </h5>\r\n                            <CharacterSheet\r\n                                Strength = {this.state.monsterstats.Str}\r\n                                Constitution = {this.state.monsterstats.Const}\r\n                                Dexterity = {this.state.monsterstats.Dext}\r\n                                Hitpoints = {this.state.monsterHp}\r\n                                Damage = {this.state.monsterDmg}\r\n                                ImgUrl = \"../static/images/monster.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setmonsterstats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm\r\n                                Value = {this.state.value}\r\n                                NameChange = {this.monsterNameChange}\r\n                                NameSubmit = {this.monsterNameSubmit}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </CenterFlexWrapDiv>\r\n                <CenterFlexWrapDiv className=\"m-0 p-0\">\r\n                    <div  className=\"bg-dark m-1 p-0 mb-2 col\">\r\n            {/**********Hero Display Area*********/}\r\n                        <AttackSection\r\n                            AC = {this.state.heroAc}\r\n                            HitAdj = {this.state.heroHitAdj}\r\n                            AttackRoll = {this.AttackRoll}\r\n                            RollTitle = \"Hero Roll for Attack\"\r\n                            Roll = {this.state.heroRoll}\r\n                            DidHit = {this.state.heroDidHit}\r\n                            NextTurn = {this.AttackTurn}\r\n                            AttackTurn = {this.state.heroAttackVisible}\r\n                        /> \r\n                    </div>\r\n                    <div className=\"bg-dark m-1 mb-2 p-0 col text-center text-white\">\r\n                        {this.IntButton()}\r\n                        <Row>\r\n                            <Col className=\"w-50\">\r\n                                <AttackStatusDisplay\r\n                                    Name = {this.state.heroName}\r\n                                    Initiative = {this.state.heroInitiative}\r\n                                    HP = {this.state.heroHp}\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <AttackStatusDisplay\r\n                                    Name = {this.state.monsterName}\r\n                                    Initiative = {this.state.monsterInitiative}\r\n                                    HP = {this.state.monsterHp}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"bg-dark m-1 p-0 mb-2 col\">\r\n            {/**********Monster Display Area*********/}\r\n                        <AttackSection\r\n                            AC = {this.state.monsterAc}\r\n                            HitAdj = {this.state.monsterHitAdj}\r\n                            AttackRoll = {this.AttackRoll}\r\n                            RollTitle = \"Monster Roll for Attack\"\r\n                            Roll = {this.state.monsterRoll}\r\n                            DidHit = {this.state.monsterDidHit}\r\n                            NextTurn = {this.AttackTurn}\r\n                            AttackTurn = {this.state.monsterAttackVisible}\r\n                        />\r\n                    </div>\r\n                </CenterFlexWrapDiv>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction DandD(){\r\n    return (\r\n        <Layout>\r\n            <div className=\"ml-5\">\r\n                <h1>Dungeons and Dragons attack simulation</h1>\r\n                <h4>Calculations are based on SE 2 rules from late 80's and early 90's.</h4>\r\n                <ol><b>Instructions:</b>\r\n                    <li>Press the \"Set Attributes\" buttons for both Hero and Monster.</li>\r\n                    <li>Press the \"Roll for Initiative\" button to see who attacks first.</li>\r\n                    <li>Follow the instructions and press the \"Roll for Attack\" buttons.</li>\r\n                    <li>After each round, repeat by rolling for Initiative and continue \r\n                        attacking until a character dies.</li>\r\n                </ol>\r\n            </div>\r\n            <AttackSim />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default DandD;\r\n\r\n"]},"metadata":{},"sourceType":"module"}