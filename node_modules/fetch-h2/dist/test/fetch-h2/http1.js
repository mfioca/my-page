"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const server_helpers_1 = require("../lib/server-helpers");
const index_1 = require("../../index");
const utils_1 = require("../lib/utils");
describe(`http1`, () => {
    const { cycleOpts, makeServer } = server_helpers_1.makeMakeServer({ proto: "http:", version: "http1" });
    describe("keep-alive", () => {
        it("should not send 'connection: close' by default", async () => {
            const { server, port } = await makeServer();
            const { disconnectAll, fetch } = index_1.context({ ...cycleOpts });
            const response1 = utils_1.ensureStatusSuccess(await fetch(`http://localhost:${port}/headers`));
            const headers = await response1.json();
            expect(headers.connection).not.toBe("close");
            disconnectAll();
            await server.shutdown();
        });
        it("should send 'connection: close' if http1.keelAlive === false", async () => {
            const { server, port } = await makeServer();
            const { disconnectAll, fetch } = index_1.context({
                ...cycleOpts,
                http1: {
                    keepAlive: false,
                },
            });
            const response1 = utils_1.ensureStatusSuccess(await fetch(`http://localhost:${port}/headers`));
            const headers = await response1.json();
            expect(headers.connection).toBe("close");
            disconnectAll();
            await server.shutdown();
        });
    });
});
//# sourceMappingURL=http1.js.map