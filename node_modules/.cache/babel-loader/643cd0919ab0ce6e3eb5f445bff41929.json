{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\github\\\\my-page\\\\pages\\\\DandD\\\\attacksim.js\";\nimport React from 'react';\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj, setherostats, heroattackroll } from './herofunctions';\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj, setmonsterstats, monsterattackroll } from './monsterfunctions';\nimport { CharacterSheet, NameForm } from '../customComponents';\nimport { Row, Col, Button } from 'reactstrap';\nvar thumbnail = {\n  position: 'relative',\n  align: 'center',\n  margin: '10px'\n};\nvar caption1 = {\n  top: '50px',\n  left: '45px',\n  width: '100%',\n  align: 'center'\n};\nvar caption2 = {\n  position: 'absolute',\n  top: '40%',\n  left: '45px',\n  align: 'center'\n};\n\nvar AttackSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSection, _React$Component);\n\n  function AttackSection() {\n    _classCallCheck(this, AttackSection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AttackSection).apply(this, arguments));\n  }\n\n  _createClass(AttackSection, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        alt: \"shield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: caption1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.AC)))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: caption2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.HitAdj))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.props.AttackRoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.RollTitle)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: {\n          size: 12,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Attack Result: \", React.createElement(\"span\", {\n        className: \"btn-success w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.DidHit), \" \")))))));\n    }\n  }]);\n\n  return AttackSection;\n}(React.Component);\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(AttackSim, _React$Component2);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    _this.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroNametext: '',\n      heroName: '',\n      heroInitiative: 0,\n      heroRoll: 0,\n      heroDidHit: '',\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterNametext: '',\n      monsterName: '',\n      monsterInitiative: 0,\n      monsterRoll: 0,\n      monsterDidHit: ''\n    }; //Hero bind function statements\n\n    _this.setherostats = setherostats.bind(_assertThisInitialized(_this));\n    _this.SetheroConstAdj = SetheroConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroacAdj = SetheroacAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroDmgAdj = SetheroDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroHitAdj = SetheroHitAdj.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    _this.heroNameSubmit = _this.heroNameSubmit.bind(_assertThisInitialized(_this));\n    _this.heroattackroll = heroattackroll.bind(_assertThisInitialized(_this)); //monster bind function statements\n\n    _this.setmonsterstats = setmonsterstats.bind(_assertThisInitialized(_this));\n    _this.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    _this.monsterNameSubmit = _this.monsterNameSubmit.bind(_assertThisInitialized(_this));\n    _this.monsterattackroll = monsterattackroll.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"heroNameSubmit\",\n    value: function heroNameSubmit(event) {\n      this.setState({\n        heroName: this.state.heroNametext\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameSubmit\",\n    value: function monsterNameSubmit(event) {\n      this.setState({\n        monsterName: this.state.monsterNametext\n      });\n    } //initiative shows what character attacks first\n\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      this.Heroinitiative = Math.floor(Math.random() * 10 + 1);\n      this.Monsterinitiative = Math.floor(Math.random() * 10 + 1); //if hero 1-10 role is lower, hero goes first.\n\n      if (this.Heroinitiative < this.Monsterinitiative) {\n        this.setState({\n          heroInitiative: 'First',\n          monsterInitiative: 'Second'\n        }); //if monster 1-10 role is lower, monster goes first\n      } else if (this.Heroinitiative > this.Monsterinitiative) {\n        this.setState({\n          monsterInitiative: 'First',\n          heroInitiative: 'Second'\n        });\n      } else {\n        //if both have same result, roll again\n        this.setState({\n          heroInitiative: 'ReRoll',\n          monsterInitiative: 'ReRoll'\n        });\n      }\n\n      ; //clears out the hit/miss comments since it is a new round.\n\n      this.setState({\n        heroDidHit: '',\n        monsterDidHit: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"m-5 bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Name: \"), this.state.heroName)), React.createElement(CharacterSheet, {\n        Strength: this.state.herostats.Str,\n        Constitution: this.state.herostats.Const,\n        Dexterity: this.state.herostats.Dext,\n        Hitpoints: this.state.heroHp,\n        Damage: this.state.heroDmg,\n        ImgUrl: \"../static/images/hero.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setherostats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        className: \"ml-3 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.heroNameChange,\n        NameSubmit: this.heroNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        className: \"m-5  bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Name: \"), this.state.monsterName), React.createElement(CharacterSheet, {\n        Strength: this.state.monsterstats.Str,\n        Constitution: this.state.monsterstats.Const,\n        Dexterity: this.state.monsterstats.Dext,\n        Hitpoints: this.state.monsterHp,\n        Damage: this.state.monsterDmg,\n        ImgUrl: \"../static/images/monster.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setmonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        className: \"ml-3 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.monsterNameChange,\n        NameSubmit: this.monsterNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.heroAc,\n        HitAdj: this.state.heroHitAdj,\n        AttackRoll: this.heroattackroll,\n        RollTitle: \"Hero Roll for Attack\",\n        DidHit: this.state.heroDidHit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Roll for iniative\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Hero \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), \"iniative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, this.state.heroInitiative)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Monster initiative:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, this.state.monsterInitiative)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/herohp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, this.state.heroHp)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/monsterhp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, this.state.monsterHp)))), React.createElement(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.monsterAc,\n        HitAdj: this.state.monsterHitAdj,\n        AttackRoll: this.monsterattackroll,\n        RollTitle: \"Monster Roll for Attack\",\n        DidHit: this.state.monsterDidHit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Documents\\github\\my-page\\pages\\DandD\\attacksim.js"],"names":["React","SetheroConstAdj","SetheroHitAdj","SetheroDmgAdj","SetheroacAdj","setherostats","heroattackroll","SetmonsterConstAdj","SetmonsterHitAdj","SetmonsterDmgAdj","SetmonsteracAdj","setmonsterstats","monsterattackroll","CharacterSheet","NameForm","Row","Col","Button","thumbnail","position","align","margin","caption1","top","left","width","caption2","AttackSection","props","AC","HitAdj","AttackRoll","RollTitle","size","offset","DidHit","Component","AttackSim","state","herostats","Str","Const","Dext","herobase","Hp","ArmorClass","Damage","monsterstats","monsterbase","heroHp","heroAc","heroDmg","heroHitAdj","heroNametext","heroName","heroInitiative","heroRoll","heroDidHit","monsterHp","monsterAc","monsterDmg","monsterHitAdj","monsterNametext","monsterName","monsterInitiative","monsterRoll","monsterDidHit","bind","heroNameChange","heroNameSubmit","monsterNameChange","monsterNameSubmit","rollforiniative","event","setState","target","value","Heroinitiative","Math","floor","random","Monsterinitiative"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj, setherostats, heroattackroll } from './herofunctions'\r\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj, setmonsterstats, monsterattackroll } from './monsterfunctions'\r\nimport { CharacterSheet, NameForm } from '../customComponents'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n\r\n const thumbnail = {\r\n    position: 'relative',\r\n    align: 'center',\r\n    margin: '10px'\r\n}\r\n\r\nconst caption1 = {\r\n    \r\n    top: '50px',\r\n    left: '45px',\r\n    width: '100%',\r\n    align: 'center',\r\n}\r\n\r\nconst caption2 = {\r\n    position: 'absolute',\r\n    top: '40%',\r\n    left: '45px',\r\n    align: 'center'\r\n\r\n}\r\n\r\n\r\n\r\nclass AttackSection extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"bg-dark\">\r\n            <Row>\r\n                <Col>\r\n                    <div style={thumbnail}>\r\n                        <img src=\"../static/images/acicon.png\" alt=\"shield\"/>\r\n                        <div>\r\n                            <h4 style={caption1}>\r\n                                { this.props.AC }\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div style={thumbnail}>\r\n                        <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                        <div>\r\n                            <p style={caption2}>\r\n                                { this.props.HitAdj }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                    <Col>\r\n                <div >\r\n                    <button  onClick={ this.props.AttackRoll }>\r\n                        { this.props.RollTitle }\r\n                    </button>\r\n                </div>\r\n                <Row>\r\n                    <Col sm=\"12\" md={{ size: 12, offset: 3 }}>\r\n                <div>\r\n                    <h2>Attack Result: <span className=\"btn-success w-50\">{ this.props.DidHit }</span> </h2>\r\n                </div>\r\n                </Col>\r\n            </Row>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroNametext: '',\r\n            heroName: '',\r\n            heroInitiative: 0,\r\n            heroRoll: 0,\r\n            heroDidHit: '',\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterNametext: '',\r\n            monsterName: '',\r\n            monsterInitiative: 0,\r\n            monsterRoll: 0,\r\n            monsterDidHit: ''\r\n        };\r\n\r\n        //Hero bind function statements\r\n        this.setherostats = setherostats.bind(this);\r\n        this.SetheroConstAdj = SetheroConstAdj.bind(this);\r\n        this.SetheroacAdj = SetheroacAdj.bind(this);\r\n        this.SetheroDmgAdj = SetheroDmgAdj.bind(this);\r\n        this.SetheroHitAdj = SetheroHitAdj.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n        this.heroNameSubmit = this.heroNameSubmit.bind(this);\r\n        this.heroattackroll = heroattackroll.bind(this);\r\n        //monster bind function statements\r\n        this.setmonsterstats = setmonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n        this.monsterNameSubmit = this.monsterNameSubmit.bind(this);\r\n        this.monsterattackroll = monsterattackroll.bind(this);\r\n\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext})\r\n    }\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterNametext : event.target.value});\r\n    }\r\n\r\n    monsterNameSubmit(event) {\r\n        this.setState ({monsterName: this.state.monsterNametext});\r\n    }\r\n\r\n    //initiative shows what character attacks first\r\n    rollforiniative() {\r\n        this.Heroinitiative = Math.floor((Math.random() * 10) + 1);\r\n        this.Monsterinitiative = Math.floor((Math.random() * 10) + 1);\r\n        //if hero 1-10 role is lower, hero goes first.\r\n        if (this.Heroinitiative < this.Monsterinitiative) {\r\n            this.setState ({\r\n                heroInitiative: 'First',\r\n                monsterInitiative: 'Second'\r\n            });\r\n        //if monster 1-10 role is lower, monster goes first\r\n        } else if (this.Heroinitiative > this.Monsterinitiative) {\r\n            this.setState ({\r\n                monsterInitiative: 'First',\r\n                heroInitiative: 'Second'\r\n            });\r\n        } else {\r\n            //if both have same result, roll again\r\n            this.setState ({\r\n                heroInitiative: 'ReRoll',\r\n                monsterInitiative: 'ReRoll'\r\n            })   \r\n        };\r\n        //clears out the hit/miss comments since it is a new round.\r\n        this.setState ({\r\n            heroDidHit: '',\r\n            monsterDidHit: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid p-0\">\r\n                    <Row>\r\n                        <Col className=\"m-5 bg-dark text-white\">\r\n                            <div>\r\n                            <h5 className=\"mt-5\"><b>Name: </b>{ this.state.heroName }</h5>\r\n                            </div>\r\n                            <CharacterSheet \r\n                                Strength = { this.state.herostats.Str }\r\n                                Constitution = { this.state.herostats.Const }\r\n                                Dexterity = { this.state.herostats.Dext }\r\n                                Hitpoints = { this.state.heroHp }\r\n                                Damage = { this.state.heroDmg }\r\n                                ImgUrl= \"../static/images/hero.png\"\r\n                            />\r\n                            \r\n                        \r\n                            <div className=\"text-center m-3\">\r\n                            <Button onClick={ this.setherostats }>Set Attrubutes</Button>\r\n                            </div>\r\n                            <div className=\"ml-3 p-2\">\r\n                            <NameForm \r\n                                value = { this.state.value }\r\n                                NameChange = { this.heroNameChange }\r\n                                NameSubmit = { this.heroNameSubmit }\r\n                            />\r\n                            </div>\r\n                        </Col>\r\n                        \r\n                        <Col className=\"m-5  bg-dark text-white\">\r\n                            <h5 className=\"mt-5\"><b>Name: </b>{ this.state.monsterName }</h5>\r\n                            <CharacterSheet\r\n                                Strength = { this.state.monsterstats.Str }\r\n                                Constitution = { this.state.monsterstats.Const }\r\n                                Dexterity = { this.state.monsterstats.Dext }\r\n                                Hitpoints = { this.state.monsterHp }\r\n                                Damage = { this.state.monsterDmg }\r\n                                ImgUrl = \"../static/images/monster.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                            <Button onClick={ this.setmonsterstats }>Set Attrubutes</Button>\r\n                            </div>\r\n                            <div className=\"ml-3 p-2\">\r\n                            <NameForm \r\n                                value = { this.state.value }\r\n                                NameChange = { this.monsterNameChange }\r\n                                NameSubmit = { this.monsterNameSubmit }\r\n                            />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                \r\n                    <Row>\r\n                    <Col xs=\"6\" sm=\"4\">\r\n                        <AttackSection\r\n                            AC = { this.state.heroAc }\r\n                            HitAdj = { this.state.heroHitAdj }\r\n                            AttackRoll = { this.heroattackroll }\r\n                            RollTitle = \"Hero Roll for Attack\"\r\n                            DidHit = { this.state.heroDidHit }\r\n                        />\r\n                </Col>\r\n                <Col className=\"bg-dark\">\r\n                <div >    \r\n                    <div >\r\n                        <button onClick={ this.rollforiniative }>Roll for iniative</button>\r\n                    </div>\r\n                    <div >\r\n                        <p>Hero <br/>iniative:</p>\r\n                        <p className=\"Fsize-3\">{ this.state.heroInitiative }</p>\r\n                    </div>\r\n                    <div >\r\n                        <p>Monster initiative:</p>\r\n                        <p >{ this.state.monsterInitiative }</p>\r\n                    </div>  \r\n                    <div >\r\n                        <img src=\"../static/images/herohp.png\" alt=\"icon\"/>\r\n                        <p >\r\n                            { this.state.heroHp }\r\n                        </p>\r\n                    </div>\r\n                    <div >\r\n                        <img src=\"../static/images/monsterhp.png\" alt=\"icon\"/>\r\n                        <p >\r\n                            { this.state.monsterHp }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                </Col>\r\n                <Col xs=\"6\" sm=\"4\">\r\n                <AttackSection\r\n                    AC = { this.state.monsterAc }\r\n                    HitAdj = { this.state.monsterHitAdj }\r\n                    AttackRoll = { this.monsterattackroll }\r\n                    RollTitle = \"Monster Roll for Attack\"\r\n                    DidHit = { this.state.monsterDidHit }\r\n                />\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AttackSim"]},"metadata":{},"sourceType":"module"}