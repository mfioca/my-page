{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\hero_attacksim.js\";\nimport React from 'react';\nimport { Monster } from './monster';\nexport { MonsteradjStats };\nexport { HeroadjStats }; //import { HeroHitAdj } from './hero'\n\nvar MonsteradjStats = {\n  MonsterHp: 0,\n  MonsterAc: 0,\n  MonsterDmg: 0,\n  MonsterHitAdj: 0\n};\nvar HeroadjStats = {\n  HeroHp: 0,\n  HeroAc: 0,\n  HeroDmg: 0,\n  HeroHitAdj: 0\n};\nvar Heroroll = 0;\nvar Herodidhit = \" \";\nvar Monsterdidhit = \" \";\n\nfunction heroattackroll() {\n  //Heroroll = Math.floor((Math.random() * 20) + 1);\n  if (Heroroll >= MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj) {\n    Herodidhit = \"yes\";\n    MonsteradjStats.MonsterHp = MonsteradjStats.MonsterHp - 10;\n\n    if (MonsteradjStats.MonsterHp <= 0) {\n      MonsteradjStats.MonsterHp = \"Monster is dead\";\n    }\n  } else {\n    Herodidhit = \"no\";\n  }\n\n  ;\n}\n\nfunction Monsterattackroll() {\n  if (Monsterroll >= HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj) {\n    Monsterdidhit = \"yes\";\n    HeroadjStats.HeroHp = HeroadjStats.HeroHp - 10;\n\n    if (HeroadjStats.HeroHp <= 0) {\n      HeroadjStats.HeroHp = \"Hero is dead\";\n    }\n  } else {\n    Monsterdidhit = \"no\";\n  }\n\n  ;\n}\n\nvar HeroAttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HeroAttackSim, _React$Component);\n\n  function HeroAttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, HeroAttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeroAttackSim).call(this, props));\n    _this.heroattack = _this.heroattack.bind(_assertThisInitialized(_this));\n    _this.Monsterattack = _this.Monsterattack.bind(_assertThisInitialized(_this));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(HeroAttackSim, [{\n    key: \"heroattack\",\n    value: function heroattack() {\n      Heroroll = Math.floor(Math.random() * 20 + 1);\n      heroattackroll();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"Monsterattack\",\n    value: function Monsterattack() {\n      Monsterroll = Math.floor(Math.random() * 20 + 1);\n      Monsterattackroll();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Refresh stats\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"MonsterAC = \", MonsteradjStats.MonsterAc), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Hero Hit Adjustment = \", HeroadjStats.HeroHitAdj), React.createElement(\"button\", {\n        onClick: this.heroattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Roll to hit\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Result of attack = \", Herodidhit), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \" Monster hit points = \", MonsteradjStats.MonsterHp)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Refresh stats\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"HeroAC = \", HeroadjStats.HeroAc), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Monster Hit Adjustment = \", MonsteradjStats.MonsterHitAdj), React.createElement(\"button\", {\n        onClick: this.Monsterattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Roll to hit\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Result of attack = \", Monsterdidhit), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" Monster hit points = \", HeroadjStats.HeroHp)));\n    }\n  }]);\n\n  return HeroAttackSim;\n}(React.Component);\n\nexport default HeroAttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\hero_attacksim.js"],"names":["React","Monster","MonsteradjStats","HeroadjStats","MonsterHp","MonsterAc","MonsterDmg","MonsterHitAdj","HeroHp","HeroAc","HeroDmg","HeroHitAdj","Heroroll","Herodidhit","Monsterdidhit","heroattackroll","Monsterattackroll","Monsterroll","HeroAttackSim","props","heroattack","bind","Monsterattack","refresh","Math","floor","random","forceUpdate","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Monster } from './monster'\r\nexport { MonsteradjStats}\r\nexport { HeroadjStats }\r\n\r\n//import { HeroHitAdj } from './hero'\r\n\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n}\r\n\r\n\r\n\r\nvar Heroroll = 0;\r\n\r\nvar Herodidhit = \" \";\r\nvar Monsterdidhit = \" \";\r\n\r\n\r\nfunction heroattackroll() {\r\n    //Heroroll = Math.floor((Math.random() * 20) + 1);\r\n    if (Heroroll >= (MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj)) {\r\n        Herodidhit = \"yes\";\r\n        MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n        if (MonsteradjStats.MonsterHp <= 0 ) {\r\n            MonsteradjStats.MonsterHp = \"Monster is dead\";\r\n        }\r\n    } else {\r\n        Herodidhit = \"no\";\r\n    };\r\n}\r\n\r\nfunction Monsterattackroll() {\r\n    if (Monsterroll >= (HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj)) {\r\n        Monsterdidhit = \"yes\";\r\n        HeroadjStats.HeroHp = (HeroadjStats.HeroHp - 10);\r\n        if (HeroadjStats.HeroHp <= 0 ) {\r\n            HeroadjStats.HeroHp = \"Hero is dead\";\r\n        }\r\n    } else {\r\n        Monsterdidhit = \"no\";\r\n    };\r\n}\r\n\r\n\r\nclass HeroAttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.heroattack = this.heroattack.bind(this);\r\n        this.Monsterattack = this.Monsterattack.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    heroattack() {\r\n        Heroroll = Math.floor((Math.random() * 20) + 1);\r\n        heroattackroll();\r\n        this.forceUpdate();\r\n    }\r\n    Monsterattack() {\r\n        Monsterroll = Math.floor((Math.random() * 20) + 1);\r\n        Monsterattackroll();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    refresh() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div>\r\n                <button onClick={this.refresh}>Refresh stats</button>\r\n                <p>MonsterAC = { MonsteradjStats.MonsterAc }</p>\r\n                <p>Hero Hit Adjustment = { HeroadjStats.HeroHitAdj }</p>\r\n                <button onClick={this.heroattack}>\r\n                    Roll to hit\r\n                </button>\r\n                <p>Result of attack = { Herodidhit }</p>\r\n                <p> Monster hit points = { MonsteradjStats.MonsterHp }</p>\r\n            </div>\r\n            <div>\r\n            <button onClick={this.refresh}>Refresh stats</button>\r\n            <p>HeroAC = { HeroadjStats.HeroAc }</p>\r\n            <p>Monster Hit Adjustment = { MonsteradjStats.MonsterHitAdj }</p>\r\n            <button onClick={this.Monsterattack}>\r\n                Roll to hit\r\n            </button>\r\n            <p>Result of attack = { Monsterdidhit }</p>\r\n            <p> Monster hit points = { HeroadjStats.HeroHp }</p>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeroAttackSim"]},"metadata":{},"sourceType":"module"}