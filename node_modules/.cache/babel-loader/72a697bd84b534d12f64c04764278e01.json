{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\provider_data\\\\providerimport.js\";\nimport React, { Component } from 'react';\nimport { createFilter } from './Filter';\nimport { createSorter } from './sort';\nimport ReactTable from 'react-table';\n\nvar data = require('./provider.json');\n\nvar test1 = {\n  region: {\n    property: 'Region',\n    value: 'Central'\n  }\n};\n\nvar ProviderList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProviderList, _Component);\n\n  function ProviderList(props) {\n    var _this;\n\n    _classCallCheck(this, ProviderList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProviderList).call(this, props));\n    _this.state = {\n      filters: _this.props.filters,\n      sorter: _this.props.sorter\n    };\n    return _this;\n  }\n\n  _createClass(ProviderList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"/provider.json\").then(function (res) {\n        return res.json();\n      });\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(data) {\n      var sorter = this.state.sorter;\n\n      if (data && data.length) {\n        if (_Array$isArray(sorter) && sorter.length) {\n          data.sort(createSorter.apply(void 0, _toConsumableArray(sorter)));\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const  data   = this.parseData(data);\n      return this.parseData(data) ? this.renderData(data) : this.renderLoading();\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData(data) {\n      var filters = this.state.filters;\n\n      if (data && data.length > 0) {\n        if (_Array$isArray(filters) && filters.length) {\n          data = data.filter(createFilter.apply(void 0, _toConsumableArray(filters)));\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(ReactTable, {\n          data: data,\n          columns: [{\n            Header: \"Provider\",\n            columns: [{\n              Header: \"Name\",\n              accessor: \"Name\"\n            }]\n          }, {\n            Header: \"Info\",\n            columns: [{\n              Header: \"Type\",\n              accessor: \"Type\"\n            }]\n          }],\n          defaultPageSize: 20,\n          style: {\n            height: \"400px\" // This will force the table body to overflow and scroll, since there is not enough room\n\n          },\n          className: \"-striped -highlight\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"No items found\");\n      }\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }]);\n\n  return ProviderList;\n}(Component);\n\n_defineProperty(ProviderList, \"defaultProps\", {\n  filters: [{\n    property: 'Type',\n    value: ''\n  }, {\n    property: test1.region.property,\n    value: test1.region.value\n  }, {\n    property: 'County',\n    value: ''\n  }, {\n    property: 'WCHR',\n    value: ''\n  }, {\n    property: 'Stretcher',\n    value: 'Yes'\n  }],\n  sorter: [{\n    property: 'County'\n  }, {\n    property: 'name'\n  }]\n});\n\nexport default ProviderList;\n/* codxe used while working on generating page\r\nrender () {\r\n   \r\n    const  {sorter}  = this.state;\r\n \r\n     if (data && data.length > 0) {\r\n       if (Array.isArray(sorter) && sorter.length) {\r\n         data.sort(createSorter(...sorter));\r\n       }\r\n     }\r\n \r\n     return (\r\n       \r\n       <div>\r\n                   \r\n         {\r\n           data.map(item => (\r\n             <div key={item.id}>\r\n               <span>{item.id}</span>&nbsp;&nbsp;\r\n               \r\n               <span><a href={`mailto:${item.email}`}>{item.name}</a></span>;&nbsp; \r\n               <span>{item.company}</span>\r\n             </div>\r\n           ))\r\n         }\r\n       </div>\r\n       \r\n     );\r\n   } \r\n   }\r\n\n\nexport default List;*/","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\provider_data\\providerimport.js"],"names":["React","Component","createFilter","createSorter","ReactTable","data","require","test1","region","property","value","ProviderList","props","state","filters","sorter","fetch","then","res","json","length","sort","parseData","renderData","renderLoading","filter","Header","columns","accessor","height"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACRC,IAAAA,QAAQ,EAAE,QADF;AAERC,IAAAA,KAAK,EAAE;AAFC;AADE,CAAZ;;IAQMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWE,OADT;AAEXC,MAAAA,MAAM,EAAE,MAAKH,KAAL,CAAWG;AAFR,KAAb;AAFiB;AAMpB;;;;wCA2BsB;AACnBC,MAAAA,KAAK,kBAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX;AAGD;;;8BAESd,I,EAAM;AAAA,UACNU,MADM,GACK,KAAKF,KADV,CACNE,MADM;;AAGd,UAAIV,IAAI,IAAIA,IAAI,CAACe,MAAjB,EAAyB;AACvB,YAAI,eAAcL,MAAd,KAAyBA,MAAM,CAACK,MAApC,EAA4C;AAC1Cf,UAAAA,IAAI,CAACgB,IAAL,CAAUlB,YAAY,MAAZ,4BAAgBY,MAAhB,EAAV;AACD;AACF;;AAED,aAAOV,IAAP;AACD;;;6BAIQ;AACP;AACA,aAAO,KAAKiB,SAAL,CAAejB,IAAf,IAAuB,KAAKkB,UAAL,CAAgBlB,IAAhB,CAAvB,GAA+C,KAAKmB,aAAL,EAAtD;AACD;;;+BAEUnB,I,EAAM;AAAA,UACPS,OADO,GACK,KAAKD,KADV,CACPC,OADO;;AAGf,UAAIT,IAAI,IAAIA,IAAI,CAACe,MAAL,GAAc,CAA1B,EAA6B;AAC3B,YAAI,eAAcN,OAAd,KAA0BA,OAAO,CAACM,MAAtC,EAA8C;AAC5Cf,UAAAA,IAAI,GAAGA,IAAI,CAACoB,MAAL,CAAYvB,YAAY,MAAZ,4BAAgBY,OAAhB,EAAZ,CAAP;AACD;;AACD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,UAAD;AACA,UAAA,IAAI,EAAET,IADN;AAEA,UAAA,OAAO,EAAE,CACP;AACEqB,YAAAA,MAAM,EAAE,UADV;AAEEC,YAAAA,OAAO,EAAE,CACP;AACED,cAAAA,MAAM,EAAE,MADV;AAEEE,cAAAA,QAAQ,EAAE;AAFZ,aADO;AAFX,WADO,EAUP;AACEF,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,OAAO,EAAE,CACP;AACED,cAAAA,MAAM,EAAE,MADV;AAEEE,cAAAA,QAAQ,EAAE;AAFZ,aADO;AAFX,WAVO,CAFT;AAsBA,UAAA,eAAe,EAAE,EAtBjB;AAuBA,UAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE,OADH,CACW;;AADX,WAvBP;AA0BA,UAAA,SAAS,EAAC,qBA1BV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AA2DD,OA/DD,MA+DO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;AACF;;;oCAEe;AACd,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;;;EApIwB5B,S;;gBAArBU,Y,kBAUkB;AACpBG,EAAAA,OAAO,EAAE,CAAC;AACRL,IAAAA,QAAQ,EAAE,MADF;AAERC,IAAAA,KAAK,EAAE;AAFC,GAAD,EAGN;AACDD,IAAAA,QAAQ,EAAEF,KAAK,CAACC,MAAN,CAAaC,QADtB;AAEDC,IAAAA,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaE;AAFnB,GAHM,EAMN;AACDD,IAAAA,QAAQ,EAAE,QADT;AAEDC,IAAAA,KAAK,EAAE;AAFN,GANM,EASN;AACDD,IAAAA,QAAQ,EAAE,MADT;AAEDC,IAAAA,KAAK,EAAE;AAFN,GATM,EAYN;AACDD,IAAAA,QAAQ,EAAE,WADT;AAEDC,IAAAA,KAAK,EAAE;AAFN,GAZM,CADW;AAiBpBK,EAAAA,MAAM,EAAE,CAAC;AACPN,IAAAA,QAAQ,EAAE;AADH,GAAD,EAEL;AACDA,IAAAA,QAAQ,EAAE;AADT,GAFK;AAjBY,C;;AA6HxB,eAAeE,YAAf;AAGC","sourcesContent":["import React, { Component } from 'react';\r\nimport { createFilter } from './Filter';\r\nimport { createSorter } from './sort';\r\nimport ReactTable from 'react-table';\r\n\r\nvar data = require('./provider.json');\r\n\r\nvar test1 = {\r\n  region: {\r\n  property: 'Region',\r\n  value: 'Central',\r\n}\r\n};\r\n\r\n\r\nclass ProviderList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filters: this.props.filters,\r\n      sorter: this.props.sorter\r\n  };\r\n}\r\n\r\n\r\n  static defaultProps = {\r\n    filters: [{\r\n      property: 'Type',\r\n      value: ''\r\n    }, {\r\n      property: test1.region.property,\r\n      value: test1.region.value\r\n    }, {\r\n      property: 'County',\r\n      value: ''\r\n    }, {\r\n      property: 'WCHR',\r\n      value: ''\r\n    }, {\r\n      property: 'Stretcher',\r\n      value: 'Yes'\r\n    }],\r\n    sorter: [{\r\n      property: 'County'\r\n    }, {\r\n      property: 'name'\r\n    }]\r\n  };\r\n  \r\n  componentDidMount () {\r\n    fetch(`/provider.json`)\r\n      .then(res => res.json());\r\n       \r\n  }\r\n\r\n  parseData(data) {\r\n    const { sorter } = this.state;\r\n\r\n    if (data && data.length) {\r\n      if (Array.isArray(sorter) && sorter.length) {\r\n        data.sort(createSorter(...sorter));\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    //const  data   = this.parseData(data);\r\n    return this.parseData(data) ? this.renderData(data) : this.renderLoading();\r\n  }\r\n\r\n  renderData(data) {\r\n    const { filters } = this.state;\r\n    \r\n    if (data && data.length > 0) {\r\n      if (Array.isArray(filters) && filters.length) {\r\n        data = data.filter(createFilter(...filters));\r\n      }\r\n      return (\r\n        <div>\r\n          \r\n          <ReactTable\r\n          data={data}\r\n          columns={[\r\n            {\r\n              Header: \"Provider\",\r\n              columns: [\r\n                {\r\n                  Header: \"Name\",\r\n                  accessor: \"Name\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              Header: \"Info\",\r\n              columns: [\r\n                {\r\n                  Header: \"Type\",\r\n                  accessor: \"Type\"\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          defaultPageSize={20}\r\n          style={{\r\n            height: \"400px\" // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n          className=\"-striped -highlight\"\r\n        />\r\n            {/*\r\n              <table \r\n              defaultPageSize={20}\r\n              className=\"Provider-table\">\r\n              <tr>\r\n                <th>Type</th>\r\n                <th>Provider Name</th>\r\n                <th>Provider Region</th>\r\n                <th>County</th>\r\n                <th>Ambulatory</th>\r\n                <th>Wheelchair</th>\r\n                <th>Stretcher</th>\r\n              </tr>\r\n              {data.map(item => (\r\n                <tr key={item.id}>\r\n                  <td>{item.Type}</td>\r\n                  <td>{item.Name}</td>\r\n                  <td>{item.Region}</td>\r\n                  <td>{item.County}</td>\r\n                  <td>{item.Amb}</td>\r\n                  <td>{item.WCHR}</td>\r\n                  <td>{item.Stretcher}</td>\r\n                </tr>\r\n              ))}\r\n              </table>*/}\r\n          \r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>;\r\n    }\r\n  }\r\n\r\n  renderLoading() {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default ProviderList;\r\n\r\n\r\n /* codxe used while working on generating page\r\n render () {\r\n    \r\n     const  {sorter}  = this.state;\r\n  \r\n      if (data && data.length > 0) {\r\n        if (Array.isArray(sorter) && sorter.length) {\r\n          data.sort(createSorter(...sorter));\r\n        }\r\n      }\r\n  \r\n      return (\r\n        \r\n        <div>\r\n                    \r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                <span>{item.id}</span>&nbsp;&nbsp;\r\n                \r\n                <span><a href={`mailto:${item.email}`}>{item.name}</a></span>;&nbsp; \r\n                <span>{item.company}</span>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n        \r\n      );\r\n    } \r\n    }\r\n\r\n\r\nexport default List;*/\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}