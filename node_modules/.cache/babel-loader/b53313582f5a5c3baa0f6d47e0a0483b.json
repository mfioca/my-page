{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { SetmonsterConstAdj } from './monsterfunctions';\nimport { SetmonsterHitAdj } from './monsterfunctions';\nimport { SetmonsterDmgAdj } from './monsterfunctions';\nimport { SetmonsteracAdj } from './monsterfunctions'; //import { MonsteradjStats } from './attacksim';\n//export { newMonster }\n\n/*\r\nvar newMonster = {\r\n    Str: 0,\r\n    Const: 0,\r\n    Dext: 0,\r\n    BaseHitPoints: 50,\r\n    BaseArmorClass: 10,\r\n    BaseDamage: 10,\r\n    BaseHitAdj: 0\r\n};  */\n\nvar Monster =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Monster, _React$Component);\n\n  function Monster(props) {\n    var _this;\n\n    _classCallCheck(this, Monster);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Monster).call(this, props));\n    _this.state = {\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Name: '',\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterName: ''\n    };\n    _this.setMonsterstats = _this.setMonsterstats.bind(_assertThisInitialized(_this));\n    _this.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Monster, [{\n    key: \"setMonsterstats\",\n    value: function setMonsterstats() {\n      for (var key in this.state.monsterstats) {\n        this.state.monsterstats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ;\n      this.setState({\n        monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\n        monsterAc: this.state.monsterbase.ArmorClass + this.SetmonsteracAdj(),\n        monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\n        monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj()\n      });\n    } //displays name as entered into the name field. currently is\n    //a live event rather than on submit event.\n\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterName: event.target.value\n      });\n    }\n    /*\r\n    setMonsterstats() {\r\n        //random number 1-20 to set newmonster stats\r\n        newMonster.Str = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Const = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Dext = Math.floor((Math.random() * 20) + 1);\r\n        //calls the adjusted functions in monster_functions to set adjusted monster\r\n        //stats in the attacksim.js\r\n        MonsteradjStats.MonsterHp = (newMonster.BaseHitPoints) + (SetConstAdj());\r\n        MonsteradjStats.MonsterAc = (newMonster.BaseArmorClass) + (setacAdj());\r\n        MonsteradjStats.MonsterDmg = (newMonster.BaseDamage) + (setDmgAdj());\r\n        MonsteradjStats.MonsterHitAdj = (newMonster.BaseHitAdj) + (setHitAdj());\r\n        //sets new state for each variable\r\n        this.setState({\r\n            str: newMonster.Str,\r\n            const: newMonster.Const,\r\n            dext: newMonster.Dext,\r\n            hp: MonsteradjStats.MonsterHp,\r\n            dmg: MonsteradjStats.MonsterDmg\r\n        });\r\n    } */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Monster\"\n      }, React.createElement(\"div\", {\n        className: \"MonsterBox\"\n      }, React.createElement(\"div\", null, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Name: \"), this.state.monsterName), React.createElement(\"table\", {\n        className: \"DandDstat_table\"\n      }, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Strength:\"), React.createElement(\"td\", null, \" \", this.state.monsterstats.Str)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Constitution:\"), React.createElement(\"td\", null, \" \", this.state.monsterstats.Const)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Dexterity:\"), React.createElement(\"td\", null, \" \", this.state.monsterstats.Dext)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Hitpoints:\"), React.createElement(\"td\", null, \" \", this.state.monsterHp)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Base Damage:\"), React.createElement(\"td\", null, \" \", this.state.monsterDmg)))), React.createElement(\"div\", null, React.createElement(\"img\", {\n        className: \"DnD_Monster Float-right\",\n        src: \"../static/images/monster.png\",\n        alt: \"monster\"\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\"\n      }, React.createElement(\"button\", {\n        onClick: this.setMonsterstats\n      }, \"Set Attrubutes\")), React.createElement(\"div\", null, React.createElement(\"form\", null, React.createElement(\"label\", null, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.monsterNameChange\n      })))));\n    }\n  }]);\n\n  return Monster;\n}(React.Component);\n\nexport default Monster;","map":null,"metadata":{},"sourceType":"module"}