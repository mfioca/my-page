{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\hero.js\";\nimport React from 'react';\nimport { SetConstAdj } from './herofunctions';\nimport { setHitAdj } from './herofunctions';\nimport { setDmgAdj } from './herofunctions';\nimport { setacAdj } from './herofunctions'; //import { HeroadjStats } from './attacksim';\n//export { newHero }\n\nexport { Hero };\n\nvar Hero =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Hero, _React$Component);\n\n  function Hero(props) {\n    var _this;\n\n    _classCallCheck(this, Hero);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Hero).call(this, props));\n    _this.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroHp: 50,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0\n    };\n    _this.setherostats = _this.setherostats.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Hero, [{\n    key: \"setherostats\",\n    value: function setherostats() {\n      for (var key in this.state.herostats) {\n        this.state.herostats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ; //calls functions in hero_functions to adjust stats in\n      //heroadjstats variable in the attacksim.js\n\n      this.setState({\n        heroHp: this.state.herobase.hp + 1\n      });\n      this.setState({\n        heroAC: this.state.herobase.ArmorClass + 1\n      });\n      this.setState({\n        heroDmg: this.state.herobase.Damage + 1\n      });\n      this.setState({\n        heroHitAdj: this.state.herobase.HitAdj + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeroBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"DandDstat_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" \", this.state.herostats.Str)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" \", this.state.herostats.Const)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" \", this.state.herostats.Dext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" \", this.state.heroHp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Base Damage:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" \", this.state.heroDmg)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"DnD_Hero Float-right\",\n        src: \"../static/images/hero.png\",\n        alt: \"hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setherostats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Hero;\n}(React.Component);\n/*\nvar newHero = {\n    Str: 0,\n    Const: 0,\n    Dext: 0,\n    BaseHitPoints: 50,\n    BaseArmorClass: 10,\n    BaseDamage: 10,\n    BaseHitAdj: 0\n};\n\n\nclass Hero extends React.Component {\n    constructor(props) {\n        super(props);\n        //sets states for stats in the new hero object\n        this.state = {\n            str: newHero.Str,\n            const: newHero.Const,\n            dext: newHero.Dext,\n            hp: HeroadjStats.HeroHp,\n            dmg: HeroadjStats.HeroDmg,\n            name: '',\n        };\n        this.setherostats = this.setherostats.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    setherostats() {\n        for (let key in newHero) {\n            newHero[key] = Math.floor((Math.random() * 20) + 1);\n        } \n        //random number between 1-20 to set stats\n        newHero.Str = Math.floor((Math.random() * 20) + 1);\n        newHero.Const = Math.floor((Math.random() * 20) + 1);\n        newHero.Dext = Math.floor((Math.random() * 20) + 1);\n        //calls functions in hero_functions to adjust stats in\n        //heroadjstats variable in the attacksim.js\n        HeroadjStats.HeroHp = (newHero.BaseHitPoints) + (SetConstAdj());\n        HeroadjStats.HeroAc = (newHero.BaseArmorClass) + (setacAdj());\n        HeroadjStats.HeroDmg = (newHero.BaseDamage) + (setDmgAdj());\n        HeroadjStats.HeroHitAdj = (newHero.BaseHitAdj) + (setHitAdj());\n        //sets new state for each variable \n        this.setState({\n            str: newHero.Str,\n            const: newHero.Const,\n            dext: newHero.Dext,\n            hp: HeroadjStats.HeroHp,\n            dmg: HeroadjStats.HeroDmg\n        });\n    }\n    //displays name as entered into the name field. currently is\n    //a live event rather than on submit event.\n    handleChange(event) {\n        this.setState({Name: event.target.value});\n        event.preventDefault();\n    }\n\n    handleSubmit() {\n        this.setState(prevState => ({\n            showNameForm: !prevState.showNameForm\n        }));\n    }\n\n    \n\n    render() {\n        return (\n            <div className=\"Hero\">\n                <div className=\"HeroBox\">\n                    <div>\n                        <p><b>Name:</b> { this.state.Name }</p>\n                        <table className=\"DandDstat_table\">\n                            <tr>\n                                <td>Strength:</td>\n                                <td> { this.state.str }</td>\n                            </tr>\n                            <tr>\n                                <td>Constitution:</td>\n                                <td> { this.state.const }</td>\n                            </tr>\n                            <tr>\n                                <td>Dexterity:</td>\n                                <td> { this.state.dext }</td>\n                            </tr>\n                            <tr>\n                                <td>Hitpoints:</td>\n                                <td> { this.state.hp }</td>\n                            </tr>\n                            <tr>\n                                <td>Base Damage:</td>\n                                <td> { this.state.dmg }</td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div>\n                        <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \n                    </div>\n                </div>\n                <div className=\"Stats-roll align-center\">\n                    <button onClick={ this.setherostats }>Set Attrubutes</button>\n                </div>\n                <div>\n                    <form>\n                        <label>\n                            Name: \n                            <input \n                                type=\"text\"\n                                maxLength=\"20\"\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                            />\n                            <button onClick = {this.handleChange}>Submit</button>\n                        </label>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n*/\n\n\nexport default Hero;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\hero.js"],"names":["React","SetConstAdj","setHitAdj","setDmgAdj","setacAdj","Hero","props","state","herostats","Str","Const","Dext","herobase","Hp","ArmorClass","Damage","HitAdj","heroHp","heroAc","heroDmg","heroHitAdj","setherostats","bind","key","Math","floor","random","setState","hp","heroAC","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SetConstAdj } from './herofunctions';\nimport { setHitAdj } from './herofunctions';\nimport { setDmgAdj } from './herofunctions';\nimport { setacAdj } from './herofunctions';\n//import { HeroadjStats } from './attacksim';\n\n//export { newHero }\nexport { Hero }\n\n\nclass Hero extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            herostats: {\n                Str: 0,\n                Const: 0,\n                Dext: 0\n            },\n            herobase: {\n                Hp: 50,\n                ArmorClass: 10,\n                Damage: 10,\n                HitAdj: 0\n            },\n            heroHp: 50,\n            heroAc: 0,\n            heroDmg: 0,\n            heroHitAdj: 0,\n        };\n        this.setherostats = this.setherostats.bind(this);\n    }\n\n    setherostats() {\n        for (let key in this.state.herostats) {\n            this.state.herostats[key] = Math.floor((Math.random() * 20) + 1);\n        } ;\n\n        //calls functions in hero_functions to adjust stats in\n        //heroadjstats variable in the attacksim.js\n        this.setState ({heroHp: (this.state.herobase.hp) + 1});\n        this.setState ({heroAC: (this.state.herobase.ArmorClass) + 1});\n        this.setState ({heroDmg: (this.state.herobase.Damage) + 1});\n        this.setState ({heroHitAdj: (this.state.herobase.HitAdj) + 1});\n    };\n\n    render() {\n        return (\n            <div className=\"Hero\">\n                <div className=\"HeroBox\">\n                    <div>\n                        \n                        <table className=\"DandDstat_table\">\n                            <tr>\n                                <td>Strength:</td>\n                                <td> { this.state.herostats.Str }</td>\n                            </tr>\n                            <tr>\n                                <td>Constitution:</td>\n                                <td> { this.state.herostats.Const }</td>\n                            </tr>\n                            <tr>\n                                <td>Dexterity:</td>\n                                <td> { this.state.herostats.Dext }</td>\n                            </tr>\n                            <tr>\n                                <td>Hitpoints:</td>\n                                <td> { this.state.heroHp }</td>\n                            </tr>\n                            <tr>\n                                <td>Base Damage:</td>\n                                <td> { this.state.heroDmg }</td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div>\n                        <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \n                    </div>\n                </div>\n                <div className=\"Stats-roll align-center\">\n                    <button onClick={ this.setherostats }>Set Attrubutes</button>\n                </div>\n                <div>\n                    \n                </div>\n            </div>\n        );\n    }\n}\n/*\nvar newHero = {\n    Str: 0,\n    Const: 0,\n    Dext: 0,\n    BaseHitPoints: 50,\n    BaseArmorClass: 10,\n    BaseDamage: 10,\n    BaseHitAdj: 0\n};\n\n\nclass Hero extends React.Component {\n    constructor(props) {\n        super(props);\n        //sets states for stats in the new hero object\n        this.state = {\n            str: newHero.Str,\n            const: newHero.Const,\n            dext: newHero.Dext,\n            hp: HeroadjStats.HeroHp,\n            dmg: HeroadjStats.HeroDmg,\n            name: '',\n        };\n        this.setherostats = this.setherostats.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    setherostats() {\n        for (let key in newHero) {\n            newHero[key] = Math.floor((Math.random() * 20) + 1);\n        } \n        //random number between 1-20 to set stats\n        newHero.Str = Math.floor((Math.random() * 20) + 1);\n        newHero.Const = Math.floor((Math.random() * 20) + 1);\n        newHero.Dext = Math.floor((Math.random() * 20) + 1);\n        //calls functions in hero_functions to adjust stats in\n        //heroadjstats variable in the attacksim.js\n        HeroadjStats.HeroHp = (newHero.BaseHitPoints) + (SetConstAdj());\n        HeroadjStats.HeroAc = (newHero.BaseArmorClass) + (setacAdj());\n        HeroadjStats.HeroDmg = (newHero.BaseDamage) + (setDmgAdj());\n        HeroadjStats.HeroHitAdj = (newHero.BaseHitAdj) + (setHitAdj());\n        //sets new state for each variable \n        this.setState({\n            str: newHero.Str,\n            const: newHero.Const,\n            dext: newHero.Dext,\n            hp: HeroadjStats.HeroHp,\n            dmg: HeroadjStats.HeroDmg\n        });\n    }\n    //displays name as entered into the name field. currently is\n    //a live event rather than on submit event.\n    handleChange(event) {\n        this.setState({Name: event.target.value});\n        event.preventDefault();\n    }\n\n    handleSubmit() {\n        this.setState(prevState => ({\n            showNameForm: !prevState.showNameForm\n        }));\n    }\n\n    \n\n    render() {\n        return (\n            <div className=\"Hero\">\n                <div className=\"HeroBox\">\n                    <div>\n                        <p><b>Name:</b> { this.state.Name }</p>\n                        <table className=\"DandDstat_table\">\n                            <tr>\n                                <td>Strength:</td>\n                                <td> { this.state.str }</td>\n                            </tr>\n                            <tr>\n                                <td>Constitution:</td>\n                                <td> { this.state.const }</td>\n                            </tr>\n                            <tr>\n                                <td>Dexterity:</td>\n                                <td> { this.state.dext }</td>\n                            </tr>\n                            <tr>\n                                <td>Hitpoints:</td>\n                                <td> { this.state.hp }</td>\n                            </tr>\n                            <tr>\n                                <td>Base Damage:</td>\n                                <td> { this.state.dmg }</td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div>\n                        <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \n                    </div>\n                </div>\n                <div className=\"Stats-roll align-center\">\n                    <button onClick={ this.setherostats }>Set Attrubutes</button>\n                </div>\n                <div>\n                    <form>\n                        <label>\n                            Name: \n                            <input \n                                type=\"text\"\n                                maxLength=\"20\"\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                            />\n                            <button onClick = {this.handleChange}>Submit</button>\n                        </label>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n*/\n\nexport default Hero "]},"metadata":{},"sourceType":"module"}