{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\test_items\\\\jsonsearch.js\";\nimport React, { Component } from 'react';\nimport { createFilter } from './Filter';\nimport { createSorter } from './Sort';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"something.json\").then(function (data) {\n        console.log(data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n/*\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('./something.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  parseData (response) {\r\n    return response;\r\n  }\r\n\r\n  onLoad = (newdata) => {\r\n    this.setState({\r\n      newdata: this.parseData(newdata)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    \r\n    return newdata ?\r\n      this.renderData(newdata) :\r\n      this.renderLoading()\r\n  }\r\n\r\n  renderData (newdata) {\r\n    if (newdata && newdata.length) {\r\n      return (\r\n        <div>\r\n          {\r\n            newdata.map(item => (\r\n              <div key={item.id}>\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>\r\n    }\r\n  }\r\n\r\n  renderLoading () {\r\n    return <div>Loading...</div>\r\n  }\r\n}\r\n*/\n\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\test_items\\jsonsearch.js"],"names":["React","Component","createFilter","createSorter","App","fetch","then","data","console","log","List"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,YAAT,QAA6B,QAA7B;;IAGMC,G;;;;;;;;;;;;;wCACgB;AAClBC,MAAAA,KAAK,CAAC,gBAAD,CAAL,CAAwBC,IAAxB,CAA6B,UAASC,IAAT,EAAe;AAC1CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAFD;AAGD;;;6BACQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAReP,KAAK,CAACC,S;AAiBxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,eAAeS,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { createFilter } from './Filter';\r\nimport { createSorter } from './Sort';\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    fetch(\"something.json\").then(function(data) {\r\n      console.log(data);\r\n    });\r\n  }\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('./something.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  parseData (response) {\r\n    return response;\r\n  }\r\n\r\n  onLoad = (newdata) => {\r\n    this.setState({\r\n      newdata: this.parseData(newdata)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    \r\n    return newdata ?\r\n      this.renderData(newdata) :\r\n      this.renderLoading()\r\n  }\r\n\r\n  renderData (newdata) {\r\n    if (newdata && newdata.length) {\r\n      return (\r\n        <div>\r\n          {\r\n            newdata.map(item => (\r\n              <div key={item.id}>\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>\r\n    }\r\n  }\r\n\r\n  renderLoading () {\r\n    return <div>Loading...</div>\r\n  }\r\n}\r\n*/\r\nexport default List;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}