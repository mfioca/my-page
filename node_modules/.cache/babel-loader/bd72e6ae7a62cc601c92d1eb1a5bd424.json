{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { SetheroConstAdj } from './herofunctions';\nimport { SetheroHitAdj } from './herofunctions';\nimport { SetheroDmgAdj } from './herofunctions';\nimport { SetheroacAdj } from './herofunctions'; //import { HeroadjStats } from './attacksim';\n\nvar Hero =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Hero, _React$Component);\n\n  function Hero(props) {\n    var _this;\n\n    _classCallCheck(this, Hero);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Hero).call(this, props));\n    _this.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroName: ''\n    };\n    _this.setherostats = _this.setherostats.bind(_assertThisInitialized(_this));\n    _this.SetheroConstAdj = SetheroConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroacAdj = SetheroacAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroDmgAdj = SetheroDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroHitAdj = SetheroHitAdj.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Hero, [{\n    key: \"setherostats\",\n    value: function setherostats() {\n      for (var key in this.state.herostats) {\n        this.state.herostats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ; //calls functions in hero_functions to adjust stats in\n      //heroadjstats variable in the attacksim.js\n\n      this.setState({\n        heroHp: this.state.herobase.Hp + this.SetheroConstAdj(),\n        heroAC: this.state.herobase.ArmorClass + this.SetheroacAdj(),\n        heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\n        heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj()\n      });\n    }\n  }, {\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroName: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Hero\"\n      }, React.createElement(\"div\", {\n        className: \"HeroBox\"\n      }, React.createElement(\"div\", null, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Name: \"), this.state.heroName), React.createElement(\"table\", {\n        className: \"DandDstat_table\"\n      }, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Strength:\"), React.createElement(\"td\", null, \" \", this.state.herostats.Str)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Constitution:\"), React.createElement(\"td\", null, \" \", this.state.herostats.Const)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Dexterity:\"), React.createElement(\"td\", null, \" \", this.state.herostats.Dext)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Hitpoints:\"), React.createElement(\"td\", null, \" \", this.state.heroHp)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Damage per hit:\"), React.createElement(\"td\", null, \" \", this.state.heroDmg)))), React.createElement(\"div\", null, React.createElement(\"img\", {\n        className: \"DnD_Hero Float-right\",\n        src: \"../static/images/hero.png\",\n        alt: \"hero\"\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\"\n      }, React.createElement(\"button\", {\n        onClick: this.setherostats\n      }, \"Set Attrubutes\")), React.createElement(\"div\", null, React.createElement(\"form\", null, React.createElement(\"label\", null, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.heroNameChange\n      })))));\n    }\n  }]);\n\n  return Hero;\n}(React.Component);\n/*\nvar newHero = {\n    Str: 0,\n    Const: 0,\n    Dext: 0,\n    BaseHitPoints: 50,\n    BaseArmorClass: 10,\n    BaseDamage: 10,\n    BaseHitAdj: 0\n};\n\n\nclass Hero extends React.Component {\n    constructor(props) {\n        super(props);\n        //sets states for stats in the new hero object\n        this.state = {\n            str: newHero.Str,\n            const: newHero.Const,\n            dext: newHero.Dext,\n            hp: HeroadjStats.HeroHp,\n            dmg: HeroadjStats.HeroDmg,\n            name: '',\n        };\n        this.setherostats = this.setherostats.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    setherostats() {\n        for (let key in newHero) {\n            newHero[key] = Math.floor((Math.random() * 20) + 1);\n        } \n        //random number between 1-20 to set stats\n        newHero.Str = Math.floor((Math.random() * 20) + 1);\n        newHero.Const = Math.floor((Math.random() * 20) + 1);\n        newHero.Dext = Math.floor((Math.random() * 20) + 1);\n        //calls functions in hero_functions to adjust stats in\n        //heroadjstats variable in the attacksim.js\n        HeroadjStats.HeroHp = (newHero.BaseHitPoints) + (SetConstAdj());\n        HeroadjStats.HeroAc = (newHero.BaseArmorClass) + (setacAdj());\n        HeroadjStats.HeroDmg = (newHero.BaseDamage) + (setDmgAdj());\n        HeroadjStats.HeroHitAdj = (newHero.BaseHitAdj) + (setHitAdj());\n        //sets new state for each variable \n        this.setState({\n            str: newHero.Str,\n            const: newHero.Const,\n            dext: newHero.Dext,\n            hp: HeroadjStats.HeroHp,\n            dmg: HeroadjStats.HeroDmg\n        });\n    }\n    //displays name as entered into the name field. currently is\n    //a live event rather than on submit event.\n    handleChange(event) {\n        this.setState({Name: event.target.value});\n        event.preventDefault();\n    }\n\n    handleSubmit() {\n        this.setState(prevState => ({\n            showNameForm: !prevState.showNameForm\n        }));\n    }\n\n    \n\n    render() {\n        return (\n            <div className=\"Hero\">\n                <div className=\"HeroBox\">\n                    <div>\n                        <p><b>Name:</b> { this.state.Name }</p>\n                        <table className=\"DandDstat_table\">\n                            <tr>\n                                <td>Strength:</td>\n                                <td> { this.state.str }</td>\n                            </tr>\n                            <tr>\n                                <td>Constitution:</td>\n                                <td> { this.state.const }</td>\n                            </tr>\n                            <tr>\n                                <td>Dexterity:</td>\n                                <td> { this.state.dext }</td>\n                            </tr>\n                            <tr>\n                                <td>Hitpoints:</td>\n                                <td> { this.state.hp }</td>\n                            </tr>\n                            <tr>\n                                <td>Base Damage:</td>\n                                <td> { this.state.dmg }</td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div>\n                        <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \n                    </div>\n                </div>\n                <div className=\"Stats-roll align-center\">\n                    <button onClick={ this.setherostats }>Set Attrubutes</button>\n                </div>\n                <div>\n                    <form>\n                        <label>\n                            Name: \n                            <input \n                                type=\"text\"\n                                maxLength=\"20\"\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                            />\n                            <button onClick = {this.handleChange}>Submit</button>\n                        </label>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n*/\n\n\nexport default Hero;","map":null,"metadata":{},"sourceType":"module"}