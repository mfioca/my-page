{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\monster.js\";\nimport React from 'react';\nimport { SetConstAdj } from './monsterfunctions';\nimport { setHitAdj } from './monsterfunctions';\nimport { setDmgAdj } from './monsterfunctions';\nimport { setacAdj } from './monsterfunctions';\nimport { MonsteradjStats } from './attacksim';\nexport { newMonster };\nvar newMonster = {\n  Str: 0,\n  Const: 0,\n  Dext: 0,\n  BaseHitPoints: 50,\n  BaseArmorClass: 10,\n  BaseDamage: 10,\n  BaseHitAdj: 0\n};\n\nvar Monster =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Monster, _React$Component);\n\n  function Monster(props) {\n    var _this;\n\n    _classCallCheck(this, Monster);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Monster).call(this, props)); //sets states for stats in the new monster object\n\n    _this.state = {\n      str: newMonster.Str\n    };\n    _this.state = {\n      const: newMonster.Const\n    };\n    _this.state = {\n      dext: newMonster.Dext\n    };\n    _this.state = {\n      hp: MonsteradjStats.MonsterHp\n    };\n    _this.state = {\n      dmg: MonsteradjStats.MonsterDmg\n    };\n    _this.setMonsterstats = _this.setMonsterstats.bind(_assertThisInitialized(_this)); //sets Name on form\n\n    _this.state = {\n      Name: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Monster, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        Name: event.target.value\n      });\n    }\n  }, {\n    key: \"setMonsterstats\",\n    value: function setMonsterstats() {\n      //random number 1-20 to set newmonster stats\n      newMonster.Str = Math.floor(Math.random() * 20 + 1);\n      newMonster.Const = Math.floor(Math.random() * 20 + 1);\n      newMonster.Dext = Math.floor(Math.random() * 20 + 1); //calls the adjusted functions in monster_functions to set adjusted monster\n      //stats in the attacksim.js\n\n      MonsteradjStats.MonsterHp = newMonster.BaseHitPoints + SetConstAdj();\n      MonsteradjStats.MonsterAc = newMonster.BaseArmorClass + setacAdj();\n      MonsteradjStats.MonsterDmg = newMonster.BaseDamage + setDmgAdj();\n      MonsteradjStats.MonsterHitAdj = newMonster.BaseHitAdj + setHitAdj(); //sets new state for each variable\n\n      this.setState({\n        str: newMonster.Str\n      });\n      this.setState({\n        const: newMonster.Const\n      });\n      this.setState({\n        dext: newMonster.Dext\n      });\n      this.setState({\n        hp: MonsteradjStats.MonsterHp\n      });\n      this.setState({\n        dmg: MonsteradjStats.MonsterDmg\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Name: \"), this.state.Name)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"DandDstat_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" \", this.state.str)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" \", this.state.const)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" \", this.state.dext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" \", this.state.hp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Base Damage:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \", this.state.dmg)))), React.createElement(\"div\", {\n        className: \"Stats-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setMonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Monster;\n}(React.Component);\n\nexport default Monster;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\monster.js"],"names":["React","SetConstAdj","setHitAdj","setDmgAdj","setacAdj","MonsteradjStats","newMonster","Str","Const","Dext","BaseHitPoints","BaseArmorClass","BaseDamage","BaseHitAdj","Monster","props","state","str","const","dext","hp","MonsterHp","dmg","MonsterDmg","setMonsterstats","bind","Name","handleChange","event","setState","target","value","Math","floor","random","MonsterAc","MonsterHitAdj","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SetConstAdj } from './monsterfunctions';\r\nimport { setHitAdj } from './monsterfunctions';\r\nimport { setDmgAdj } from './monsterfunctions';\r\nimport { setacAdj } from './monsterfunctions';\r\nimport { MonsteradjStats } from './attacksim';\r\nexport { newMonster }\r\n\r\n\r\nvar newMonster = {\r\n    Str: 0,\r\n    Const: 0,\r\n    Dext: 0,\r\n    BaseHitPoints: 50,\r\n    BaseArmorClass: 10,\r\n    BaseDamage: 10,\r\n    BaseHitAdj: 0\r\n};\r\n\r\nclass Monster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //sets states for stats in the new monster object\r\n        this.state = {str: newMonster.Str};\r\n        this.state = {const: newMonster.Const};\r\n        this.state = {dext: newMonster.Dext};\r\n        this.state = {hp: MonsteradjStats.MonsterHp};\r\n        this.state = {dmg: MonsteradjStats.MonsterDmg};\r\n        this.setMonsterstats = this.setMonsterstats.bind(this);\r\n        //sets Name on form\r\n        this.state = {Name: ''};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({Name: event.target.value});\r\n    }\r\n\r\n    setMonsterstats() {\r\n        //random number 1-20 to set newmonster stats\r\n        newMonster.Str = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Const = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Dext = Math.floor((Math.random() * 20) + 1);\r\n        //calls the adjusted functions in monster_functions to set adjusted monster\r\n        //stats in the attacksim.js\r\n        MonsteradjStats.MonsterHp = (newMonster.BaseHitPoints) + (SetConstAdj());\r\n        MonsteradjStats.MonsterAc = (newMonster.BaseArmorClass) + (setacAdj());\r\n        MonsteradjStats.MonsterDmg = (newMonster.BaseDamage) + (setDmgAdj());\r\n        MonsteradjStats.MonsterHitAdj = (newMonster.BaseHitAdj) + (setHitAdj());\r\n        //sets new state for each variable\r\n        this.setState({str: newMonster.Str});\r\n        this.setState({const: newMonster.Const});\r\n        this.setState({dext: newMonster.Dext});\r\n        this.setState({hp: MonsteradjStats.MonsterHp});\r\n        this.setState({dmg: MonsteradjStats.MonsterDmg});\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p><b>Name: </b>{ this.state.Name }</p>\r\n                </div>\r\n                <div>\r\n                    <table className=\"DandDstat_table\">\r\n                        <tr>\r\n                            <td>Strength:</td>\r\n                            <td> { this.state.str }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Constitution:</td>\r\n                            <td> { this.state.const }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Dexterity:</td>\r\n                            <td> { this.state.dext }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Hitpoints:</td>\r\n                            <td> { this.state.hp }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Base Damage:</td>\r\n                            <td> { this.state.dmg }</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div className=\"Stats-roll\">\r\n                    <button onClick={this.setMonsterstats}>Set Attrubutes</button>\r\n                </div>\r\n                <div>\r\n                    <form>\r\n                        <label>\r\n                            Name:\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.value}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Monster;"]},"metadata":{},"sourceType":"module"}