{"ast":null,"code":"var dirMap = {\n  // greater-than\n  gt: {\n    asc: -1,\n    desc: 1\n  },\n  // less-than\n  lt: {\n    asc: 1,\n    desc: -1\n  }\n};\n\nvar doSort = function doSort(A, B, property1) {\n  var direction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ASC';\n  var a = A[property1];\n  var b = B[property1];\n\n  if (a < b) {\n    return dirMap.lt[direction.toLowerCase()];\n  }\n\n  if (a > b) {\n    return dirMap.gt[direction.toLowerCase()];\n  }\n\n  return 0;\n};\n\nvar createSorter = function createSorter() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'string') {\n    args = [{\n      direction: args[1],\n      property: args[0]\n    }];\n  }\n\n  return function (A, B) {\n    var ret = 0;\n    args.some(function (sorter) {\n      var property1 = sorter.property1,\n          _sorter$direction = sorter.direction,\n          direction = _sorter$direction === void 0 ? 'ASC' : _sorter$direction;\n      var value = doSort(A, B, property1, direction);\n\n      if (value === 0) {\n        // they are equal, continue to next sorter if any\n        return false;\n      } else {\n        // they are different, stop at current sorter\n        ret = value;\n        return true;\n      }\n    });\n    return ret;\n  };\n};\n\nexport { createSorter };","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\test_items\\Sort.js"],"names":["dirMap","gt","asc","desc","lt","doSort","A","B","property1","direction","a","b","toLowerCase","createSorter","args","property","ret","some","sorter","value"],"mappings":"AAAA,IAAMA,MAAM,GAAG;AACX;AACAC,EAAAA,EAAE,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAC,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAFO;AAGX;AACAC,EAAAA,EAAE,EAAE;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,IAAI,EAAE,CAAC;AAAjB;AAJO,CAAf;;AAOE,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,SAAP,EAAwC;AAAA,MAAtBC,SAAsB,uEAAV,KAAU;AACrD,MAAMC,CAAC,GAAGJ,CAAC,CAAEE,SAAF,CAAX;AACA,MAAMG,CAAC,GAAGJ,CAAC,CAAEC,SAAF,CAAX;;AAEA,MAAIE,CAAC,GAAGC,CAAR,EAAW;AACT,WAAOX,MAAM,CAACI,EAAP,CAAWK,SAAS,CAACG,WAAV,EAAX,CAAP;AACD;;AACD,MAAIF,CAAC,GAAGC,CAAR,EAAW;AACT,WAAOX,MAAM,CAACC,EAAP,CAAWQ,SAAS,CAACG,WAAV,EAAX,CAAP;AACD;;AACD,SAAO,CAAP;AACD,CAXD;;AAaA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAa;AAAA,oCAATC,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAChC,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/BA,IAAAA,IAAI,GAAG,CACL;AACEL,MAAAA,SAAS,EAAEK,IAAI,CAAC,CAAD,CADjB;AAEEC,MAAAA,QAAQ,EAAED,IAAI,CAAC,CAAD;AAFhB,KADK,CAAP;AAMD;;AAED,SAAO,UAACR,CAAD,EAAIC,CAAJ,EAAU;AACf,QAAIS,GAAG,GAAG,CAAV;AAEAF,IAAAA,IAAI,CAACG,IAAL,CAAU,UAAAC,MAAM,EAAI;AAAA,UACVV,SADU,GACuBU,MADvB,CACVV,SADU;AAAA,8BACuBU,MADvB,CACCT,SADD;AAAA,UACCA,SADD,kCACa,KADb;AAElB,UAAMU,KAAK,GAAGd,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,SAAP,EAAkBC,SAAlB,CAApB;;AAEA,UAAIU,KAAK,KAAK,CAAd,EAAiB;AACf;AACA,eAAO,KAAP;AACD,OAHD,MAGO;AACL;AACAH,QAAAA,GAAG,GAAGG,KAAN;AAEA,eAAO,IAAP;AACD;AACF,KAbD;AAeA,WAAOH,GAAP;AACD,GAnBD;AAoBD,CA9BD;;AAgCA,SAASH,YAAT","sourcesContent":["const dirMap = {\r\n    // greater-than\r\n    gt: { asc: -1, desc: 1 },\r\n    // less-than\r\n    lt: { asc: 1, desc: -1 }\r\n  };\r\n  \r\n  const doSort = (A, B, property1, direction = 'ASC') => {\r\n    const a = A[ property1 ];\r\n    const b = B[ property1 ];\r\n  \r\n    if (a < b) {\r\n      return dirMap.lt[ direction.toLowerCase() ];\r\n    }\r\n    if (a > b) {\r\n      return dirMap.gt[ direction.toLowerCase() ];\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  const createSorter = (...args) => {\r\n    if (typeof args[0] === 'string') {\r\n      args = [\r\n        {\r\n          direction: args[1],\r\n          property: args[0]\r\n        }\r\n      ];\r\n    }\r\n  \r\n    return (A, B) => {\r\n      let ret = 0;\r\n  \r\n      args.some(sorter => {\r\n        const { property1, direction = 'ASC' } = sorter;\r\n        const value = doSort(A, B, property1, direction);\r\n  \r\n        if (value === 0) {\r\n          // they are equal, continue to next sorter if any\r\n          return false;\r\n        } else {\r\n          // they are different, stop at current sorter\r\n          ret = value;\r\n  \r\n          return true;\r\n        }\r\n      })\r\n  \r\n      return ret;\r\n    }\r\n  }\r\n  \r\n  export { createSorter };"]},"metadata":{},"sourceType":"module"}