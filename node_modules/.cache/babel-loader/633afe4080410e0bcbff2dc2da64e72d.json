{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { SetConstAdj } from './monsterfunctions';\nimport { setHitAdj } from './monsterfunctions';\nimport { setDmgAdj } from './monsterfunctions';\nimport { setacAdj } from './monsterfunctions';\nimport { MonsteradjStats } from './attacksim';\nexport { newMonster };\nvar newMonster = {\n  Str: 0,\n  Const: 0,\n  Dext: 0,\n  BaseHitPoints: 50,\n  BaseArmorClass: 10,\n  BaseDamage: 10,\n  BaseHitAdj: 0\n};\n\nvar Monster =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Monster, _React$Component);\n\n  function Monster(props) {\n    var _this;\n\n    _classCallCheck(this, Monster);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Monster).call(this, props)); //sets states for stats in the new monster object\n\n    _this.state = {\n      str: newMonster.Str,\n      const: newMonster.Const,\n      dext: newMonster.Dext,\n      hp: MonsteradjStats.MonsterHp,\n      dmg: MonsteradjStats.MonsterDmg,\n      Name: ''\n    };\n    _this.setMonsterstats = _this.setMonsterstats.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  } //displays name as entered into the name field. currently is\n  //a live event rather than on submit event.\n\n\n  _createClass(Monster, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        Name: event.target.value\n      });\n    }\n  }, {\n    key: \"setMonsterstats\",\n    value: function setMonsterstats() {\n      //random number 1-20 to set newmonster stats\n      newMonster.Str = Math.floor(Math.random() * 20 + 1);\n      newMonster.Const = Math.floor(Math.random() * 20 + 1);\n      newMonster.Dext = Math.floor(Math.random() * 20 + 1); //calls the adjusted functions in monster_functions to set adjusted monster\n      //stats in the attacksim.js\n\n      MonsteradjStats.MonsterHp = newMonster.BaseHitPoints + SetConstAdj();\n      MonsteradjStats.MonsterAc = newMonster.BaseArmorClass + setacAdj();\n      MonsteradjStats.MonsterDmg = newMonster.BaseDamage + setDmgAdj();\n      MonsteradjStats.MonsterHitAdj = newMonster.BaseHitAdj + setHitAdj(); //sets new state for each variable\n\n      this.setState({\n        str: newMonster.Str,\n        const: newMonster.Const,\n        dext: newMonster.Dext,\n        hp: MonsteradjStats.MonsterHp,\n        dmg: MonsteradjStats.MonsterDmg\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Monster\"\n      }, React.createElement(\"div\", {\n        className: \"MonsterBox\"\n      }, React.createElement(\"div\", null, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Name: \"), this.state.Name), React.createElement(\"table\", {\n        className: \"DandDstat_table\"\n      }, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Strength:\"), React.createElement(\"td\", null, \" \", this.state.str)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Constitution:\"), React.createElement(\"td\", null, \" \", this.state.const)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Dexterity:\"), React.createElement(\"td\", null, \" \", this.state.dext)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Hitpoints:\"), React.createElement(\"td\", null, \" \", this.state.hp)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Base Damage:\"), React.createElement(\"td\", null, \" \", this.state.dmg)))), React.createElement(\"div\", null, React.createElement(\"img\", {\n        className: \"DnD_Monster Float-right\",\n        src: \"../static/images/monster.png\",\n        alt: \"monster\"\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\"\n      }, React.createElement(\"button\", {\n        onClick: this.setMonsterstats\n      }, \"Set Attrubutes\")), React.createElement(\"div\", null, React.createElement(\"form\", null, React.createElement(\"label\", null, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.handleChange\n      })))));\n    }\n  }]);\n\n  return Monster;\n}(React.Component);\n\nexport default Monster;","map":null,"metadata":{},"sourceType":"module"}