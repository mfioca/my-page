{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\attacksim.js\";\nimport React from 'react';\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj, setherostats, heroattackroll, heroAttackTurn } from './herofunctions';\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj, setmonsterstats, monsterattackroll, monsterAttackTurn } from './monsterfunctions';\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../customComponents';\nimport { Row, Col, Button } from 'reactstrap';\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    _this.state = {\n      hero: {\n        stats: {\n          Str: 0,\n          Const: 0,\n          Dext: 0\n        }\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroadjusted: {\n        Hp: 0,\n        Ac: 0,\n        Dmg: 0,\n        HitAdj: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsteradjusted: {\n        Hp: 0,\n        Ac: 0,\n        Dmg: 0,\n        HitAdj: 0\n      },\n      heroNametext: '',\n      heroName: 'Hero',\n      heroInitiative: 0,\n      heroAttackVisible: false,\n      heroRoll: 0,\n      heroDidHit: '',\n      monsterNametext: '',\n      monsterName: 'Monster',\n      monsterInitiative: 0,\n      monsterAttackVisible: false,\n      monsterRoll: 0,\n      monsterDidHit: ''\n    }; //Hero bind function statements\n\n    _this.setherostats = setherostats.bind(_assertThisInitialized(_this));\n    _this.SetheroConstAdj = SetheroConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroacAdj = SetheroacAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroDmgAdj = SetheroDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroHitAdj = SetheroHitAdj.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    _this.heroNameSubmit = _this.heroNameSubmit.bind(_assertThisInitialized(_this));\n    _this.heroattackroll = heroattackroll.bind(_assertThisInitialized(_this));\n    _this.heroAttackTurn = heroAttackTurn.bind(_assertThisInitialized(_this)); //monster bind function statements\n\n    _this.setmonsterstats = setmonsterstats.bind(_assertThisInitialized(_this));\n    _this.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    _this.monsterNameSubmit = _this.monsterNameSubmit.bind(_assertThisInitialized(_this));\n    _this.monsterattackroll = monsterattackroll.bind(_assertThisInitialized(_this));\n    _this.monsterAttackTurn = monsterAttackTurn.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"heroNameSubmit\",\n    value: function heroNameSubmit(event) {\n      this.setState({\n        heroName: this.state.heroNametext\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameSubmit\",\n    value: function monsterNameSubmit(event) {\n      this.setState({\n        monsterName: this.state.monsterNametext\n      });\n    } //initiative shows what character attacks first\n\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      var heroinit = Math.floor(Math.random() * 10 + 1);\n      var monsterinit = Math.floor(Math.random() * 10 + 1);\n\n      if (heroinit < monsterinit) {\n        this.setState({\n          heroInitiative: 'First',\n          monsterInitiative: 'Second',\n          heroAttackVisible: true //displays attack button\n\n        });\n      } else if (heroinit > monsterinit) {\n        this.setState({\n          monsterInitiative: 'First',\n          heroInitiative: 'Second',\n          monsterAttackVisible: true //displays attack button\n\n        });\n      } else {\n        this.setState({\n          heroInitiative: 'ReRoll',\n          monsterInitiative: 'ReRoll',\n          //hides attck buttons due to reroll\n          heroAttackVisible: false,\n          monsterAttackVisible: false\n        });\n      }\n\n      ; //clears out the hit/miss comments and roll result since it is a new round.\n\n      this.setState({\n        heroDidHit: '',\n        monsterDidHit: '',\n        heroRoll: 0,\n        monsterRoll: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(CenterFlexWrapDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Hero Name: \"), React.createElement(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.heroName))), React.createElement(CharacterSheet, {\n        Strength: this.state.herostats.Str,\n        Constitution: this.state.herostats.Const,\n        Dexterity: this.state.herostats.Dext,\n        Hitpoints: this.state.heroadjusted.Hp,\n        Damage: this.state.heroadjusted.Dmg,\n        ImgUrl: \"../static/images/hero.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setherostats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.heroNameChange,\n        NameSubmit: this.heroNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Monster Name: \"), React.createElement(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.monsterName)), React.createElement(CharacterSheet, {\n        Strength: this.state.monsterstats.Str,\n        Constitution: this.state.monsterstats.Const,\n        Dexterity: this.state.monsterstats.Dext,\n        Hitpoints: this.state.monsteradjusted.Hp,\n        Damage: this.state.monsteradjusted.Dmg,\n        ImgUrl: \"../static/images/monster.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setmonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.monsterNameChange,\n        NameSubmit: this.monsterNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })))), React.createElement(CenterFlexWrapDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark m-1 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.heroadjusted.Ac,\n        HitAdj: this.state.heroadjusted.HitAdj,\n        AttackRoll: this.heroattackroll,\n        RollTitle: \"Hero Roll for Attack\",\n        Roll: this.state.heroRoll,\n        DidHit: this.state.heroDidHit,\n        NextTurn: this.heroAttackTurn,\n        AttackTurn: this.state.heroAttackVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"bg-dark m-1 mb-2 col\",\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        className: \"m-5 w-50\",\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Roll for iniative\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(AttackStatusDisplay, {\n        Name: this.state.heroName,\n        Initiative: this.state.heroInitiative,\n        HP: this.state.heroadjusted.Hp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(AttackStatusDisplay, {\n        Name: this.state.monsterName,\n        Initiative: this.state.monsterInitiative,\n        HP: this.state.monsteradjusted.Hp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"bg-dark m-1 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.monsteradjusted.Ac,\n        HitAdj: this.state.monsteradjusted.HitAdj,\n        AttackRoll: this.monsterattackroll,\n        RollTitle: \"Monster Roll for Attack\",\n        Roll: this.state.monsterRoll,\n        DidHit: this.state.monsterDidHit,\n        NextTurn: this.monsterAttackTurn,\n        AttackTurn: this.state.monsterAttackVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\attacksim.js"],"names":["React","SetheroConstAdj","SetheroHitAdj","SetheroDmgAdj","SetheroacAdj","setherostats","heroattackroll","heroAttackTurn","SetmonsterConstAdj","SetmonsterHitAdj","SetmonsterDmgAdj","SetmonsteracAdj","setmonsterstats","monsterattackroll","monsterAttackTurn","CharacterSheet","NameForm","AttackSection","CenterFlexWrapDiv","AttackStatusDisplay","Row","Col","Button","AttackSim","props","state","hero","stats","Str","Const","Dext","herobase","Hp","ArmorClass","Damage","HitAdj","heroadjusted","Ac","Dmg","monsterstats","monsterbase","monsteradjusted","heroNametext","heroName","heroInitiative","heroAttackVisible","heroRoll","heroDidHit","monsterNametext","monsterName","monsterInitiative","monsterAttackVisible","monsterRoll","monsterDidHit","bind","heroNameChange","heroNameSubmit","monsterNameChange","monsterNameSubmit","rollforiniative","event","setState","target","value","heroinit","Math","floor","random","monsterinit","herostats","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, \r\n    SetheroacAdj, setherostats, heroattackroll, heroAttackTurn \r\n} from './herofunctions'\r\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, \r\n    SetmonsteracAdj, setmonsterstats, monsterattackroll, monsterAttackTurn\r\n} from './monsterfunctions'\r\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../customComponents'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            hero: {\r\n                stats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n                }\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            heroadjusted: {\r\n                Hp: 0,\r\n                Ac: 0,\r\n                Dmg: 0,\r\n                HitAdj: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsteradjusted: {\r\n                Hp: 0,\r\n                Ac: 0,\r\n                Dmg: 0,\r\n                HitAdj: 0\r\n            },\r\n            heroNametext: '',\r\n            heroName: 'Hero',\r\n            heroInitiative: 0,\r\n            heroAttackVisible: false,\r\n            heroRoll: 0,\r\n            heroDidHit: '',\r\n            monsterNametext: '',\r\n            monsterName: 'Monster',\r\n            monsterInitiative: 0,\r\n            monsterAttackVisible: false,\r\n            monsterRoll: 0,\r\n            monsterDidHit: '',\r\n            \r\n        };\r\n\r\n        //Hero bind function statements\r\n        this.setherostats = setherostats.bind(this);\r\n        this.SetheroConstAdj = SetheroConstAdj.bind(this);\r\n        this.SetheroacAdj = SetheroacAdj.bind(this);\r\n        this.SetheroDmgAdj = SetheroDmgAdj.bind(this);\r\n        this.SetheroHitAdj = SetheroHitAdj.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n        this.heroNameSubmit = this.heroNameSubmit.bind(this);\r\n        this.heroattackroll = heroattackroll.bind(this);\r\n        this.heroAttackTurn = heroAttackTurn.bind(this);\r\n        //monster bind function statements\r\n        this.setmonsterstats = setmonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n        this.monsterNameSubmit = this.monsterNameSubmit.bind(this);\r\n        this.monsterattackroll = monsterattackroll.bind(this);\r\n        this.monsterAttackTurn = monsterAttackTurn.bind(this);\r\n\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n        \r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext})\r\n    }\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterNametext : event.target.value});\r\n    }\r\n\r\n    monsterNameSubmit(event) {\r\n        this.setState ({monsterName: this.state.monsterNametext});\r\n    }\r\n\r\n    //initiative shows what character attacks first\r\n    rollforiniative() {\r\n        const heroinit = Math.floor((Math.random() * 10) + 1);\r\n        const monsterinit = Math.floor((Math.random() * 10) + 1);\r\n        \r\n        if (heroinit < monsterinit) {\r\n            this.setState ({\r\n                heroInitiative: 'First',\r\n                monsterInitiative: 'Second',\r\n                heroAttackVisible: true  //displays attack button\r\n            });\r\n        } else if (heroinit > monsterinit) {\r\n            this.setState ({\r\n                monsterInitiative: 'First',\r\n                heroInitiative: 'Second',\r\n                monsterAttackVisible: true //displays attack button\r\n            }); \r\n        } else {\r\n            this.setState ({\r\n                heroInitiative: 'ReRoll',\r\n                monsterInitiative: 'ReRoll',\r\n                //hides attck buttons due to reroll\r\n                heroAttackVisible: false,  \r\n                monsterAttackVisible: false\r\n            });\r\n        };\r\n\r\n        //clears out the hit/miss comments and roll result since it is a new round.\r\n        this.setState ({\r\n            heroDidHit: '',\r\n            monsterDidHit: '',\r\n            heroRoll: 0,\r\n            monsterRoll: 0\r\n        });\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n            <div>\r\n                <CenterFlexWrapDiv> \r\n                    <Row className=\"w-100\">\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <div>\r\n                               <h5 className=\"mt-5 ml-5\"><b>Hero Name: </b>\r\n                                    <span className=\"text-info ml-5 h3\">\r\n                                        {this.state.heroName}\r\n                                    </span>\r\n                                </h5>\r\n                            </div>\r\n                            <CharacterSheet \r\n                                Strength = {this.state.herostats.Str}\r\n                                Constitution = {this.state.herostats.Const}\r\n                                Dexterity = {this.state.herostats.Dext}\r\n                                Hitpoints = {this.state.heroadjusted.Hp}\r\n                                Damage = {this.state.heroadjusted.Dmg}\r\n                                ImgUrl= \"../static/images/hero.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setherostats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm\r\n                                value = {this.state.value}\r\n                                NameChange = {this.heroNameChange}\r\n                                NameSubmit = {this.heroNameSubmit}\r\n                            />\r\n                        </Col>\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <h5 className=\"mt-5 ml-5\"><b>Monster Name: </b>\r\n                                <span className=\"text-info ml-5 h3\">\r\n                                    {this.state.monsterName}\r\n                                </span>\r\n                            </h5>\r\n                            <CharacterSheet\r\n                                Strength = {this.state.monsterstats.Str}\r\n                                Constitution = {this.state.monsterstats.Const}\r\n                                Dexterity = {this.state.monsterstats.Dext}\r\n                                Hitpoints = {this.state.monsteradjusted.Hp}\r\n                                Damage = {this.state.monsteradjusted.Dmg}\r\n                                ImgUrl = \"../static/images/monster.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setmonsterstats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm \r\n                                value = {this.state.value}\r\n                                NameChange = {this.monsterNameChange}\r\n                                NameSubmit = {this.monsterNameSubmit}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </CenterFlexWrapDiv>\r\n                <CenterFlexWrapDiv>\r\n                    <div  className=\"bg-dark m-1 mb-2\">\r\n                        <AttackSection\r\n                            AC = {this.state.heroadjusted.Ac}\r\n                            HitAdj = {this.state.heroadjusted.HitAdj}\r\n                            AttackRoll = {this.heroattackroll}\r\n                            RollTitle = \"Hero Roll for Attack\"\r\n                            Roll = {this.state.heroRoll}\r\n                            DidHit = {this.state.heroDidHit}\r\n                            NextTurn = {this.heroAttackTurn}\r\n                            AttackTurn = {this.state.heroAttackVisible}\r\n                        /> \r\n                    </div>\r\n                    <div className=\"bg-dark m-1 mb-2 col\" xs=\"3\">\r\n                        <div className=\"text-center text-white\">\r\n                            <Button \r\n                                type=\"button\" \r\n                                className=\"m-5 w-50\"  \r\n                                onClick={this.rollforiniative}>\r\n                                Roll for iniative\r\n                            </Button>\r\n                            <Row>\r\n                                <Col className=\"w-50\">\r\n                                    <AttackStatusDisplay\r\n                                        Name = {this.state.heroName}\r\n                                        Initiative = {this.state.heroInitiative}\r\n                                        HP = {this.state.heroadjusted.Hp}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <AttackStatusDisplay\r\n                                        Name = {this.state.monsterName}\r\n                                        Initiative = {this.state.monsterInitiative}\r\n                                        HP = {this.state.monsteradjusted.Hp}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-dark m-1 mb-2\">\r\n                        <AttackSection\r\n                            AC = {this.state.monsteradjusted.Ac}\r\n                            HitAdj = {this.state.monsteradjusted.HitAdj}\r\n                            AttackRoll = {this.monsterattackroll}\r\n                            RollTitle = \"Monster Roll for Attack\"\r\n                            Roll = {this.state.monsterRoll}\r\n                            DidHit = {this.state.monsterDidHit}\r\n                            NextTurn = {this.monsterAttackTurn}\r\n                            AttackTurn = {this.state.monsterAttackVisible}\r\n                        />\r\n                    </div>\r\n                </CenterFlexWrapDiv>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AttackSim;\r\n\r\n"]},"metadata":{},"sourceType":"module"}