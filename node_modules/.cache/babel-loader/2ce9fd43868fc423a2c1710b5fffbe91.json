{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\tvpage.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Card, CardImg, CardBody, CardTitle } from 'reactstrap';\nimport { TvImage, TvTitle } from './jsxstyles';\nimport Layout from '../components/layout';\nimport Layout2 from './tv_info/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar noimage = '/static/images/no-img.png';\nvar Search = '';\n\nvar Searchbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n\n  function Searchbar(props) {\n    var _this;\n\n    _classCallCheck(this, Searchbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searchbar).call(this, props));\n    _this.state = {\n      value: ''\n    };\n    _this.enterSearch = _this.enterSearch.bind(_assertThisInitialized(_this));\n    return _this;\n  } //handles setting state of search value to render tvmaze json api\n  //sets variable search value to state\n\n\n  _createClass(Searchbar, [{\n    key: \"enterSearch\",\n    value: function enterSearch(event) {\n      this.setState({\n        value: event.target.value\n      });\n      Search = event.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"d-flex justify-content-center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"TV Show search by Name:\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.enterSearch //Prevent enter key submit\n        ,\n        onKeyPress: function onKeyPress(event) {\n          if (event.which === 13\n          /* Enter */\n          ) {\n              event.preventDefault();\n            }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"ml-4 btn-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"/tvpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"btn-dark w-100 p-0 m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Click Submit\")))));\n    }\n  }]);\n\n  return Searchbar;\n}(React.Component);\n\nvar TvPage = function TvPage(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"the below content has been imported from\", React.createElement(\"a\", {\n    href: \"https://www.tvmaze.com\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"TVmaze.com\")), React.createElement(Searchbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Layout2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Results for: \", Search), React.createElement(\"div\", {\n    className: \"d-flex flex-wrap justify-content-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"div\", {\n      className: \"p-3 text-center\",\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      className: \"m-4 text-center\",\n      style: TvTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, show.name))), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      className: \"my-2\",\n      style: TvImage,\n      src: show.image ? show.image.medium : noimage,\n      alt: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Link, {\n      href: \"/tvpost?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"btn btn-dark w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Select\"))));\n  }))));\n};\n\nTvPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=' + Search);\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default TvPage;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\tvpage.js"],"names":["React","Button","Form","FormGroup","Label","Input","Card","CardImg","CardBody","CardTitle","TvImage","TvTitle","Layout","Layout2","Link","fetch","noimage","Search","Searchbar","props","state","value","enterSearch","bind","event","setState","target","which","preventDefault","Component","TvPage","shows","map","show","id","name","image","medium","getInitialProps","res","json","data","console","log","length","entry"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Form, FormGroup, Label, Input, Card, CardImg, CardBody, CardTitle } from 'reactstrap'\r\nimport { TvImage, TvTitle } from './jsxstyles'\r\nimport Layout from '../components/layout'\r\nimport Layout2 from './tv_info/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\n\r\nconst noimage = '/static/images/no-img.png';\r\nvar Search = '';\r\n\r\n\r\nclass Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.enterSearch = this.enterSearch.bind(this);\r\n  }\r\n  //handles setting state of search value to render tvmaze json api\r\n  //sets variable search value to state\r\n  enterSearch(event) {\r\n    this.setState({value: event.target.value});\r\n    Search = (event.target.value);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex justify-content-center \">\r\n        <Form inline>\r\n          <FormGroup >\r\n            <Label className=\"mr-sm-2\">TV Show search by Name:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              value={this.state.value} \r\n              onChange={this.enterSearch} \r\n              //Prevent enter key submit\r\n              onKeyPress={event => {\r\n                if (event.which === 13 /* Enter */) {\r\n                  event.preventDefault();\r\n                }\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          {/*due to get initial props async function is only called on page load\r\n            disguised a page link as a search button to call value of search for \r\n            the await fetch api call.*/}\r\n          <Button className=\"ml-4 btn-dark\">\r\n            <Link href=\"/tvpage\">\r\n              <a className=\"btn-dark w-100 p-0 m-0\">Click Submit</a>\r\n            </Link>\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TvPage = props => (\r\n  <Layout>\r\n    <h1 className=\"text-center\">the below content has been imported from \r\n      <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        TVmaze.com\r\n      </a>\r\n    </h1>\r\n    <Searchbar />\r\n    <Layout2>\r\n      <h1>Results for: {Search}</h1>\r\n      <div className=\"d-flex flex-wrap justify-content-left\">\r\n        {props.shows.map(show => (\r\n          <div className=\"p-3 text-center\" key={show.id}>\r\n            <Card>\r\n              <CardTitle \r\n                className=\"m-4 text-center\" \r\n                style={TvTitle}>\r\n                  <b><u>{show.name}</u></b>\r\n              </CardTitle>\r\n              <CardBody>\r\n              <CardImg \r\n                className=\"my-2\" \r\n                style={TvImage} \r\n                src={show.image ? show.image.medium : noimage} \r\n                alt=\"image\" \r\n              />\r\n              </CardBody>\r\n              <Link href={`/tvpost?id=${show.id}`}>\r\n                <a className=\"btn btn-dark w-100\">Select</a>\r\n              </Link>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Layout2>\r\n  </Layout>\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  //tvmaze search api link.  pulls the json info based on the search variable\r\n  //entered by user in the search field.\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + Search);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;"]},"metadata":{},"sourceType":"module"}