{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\tvpost.js\";\nimport React from \"react\";\nimport Layout from '../components/layout';\nimport Layout2 from './tv_info/MyLayout';\nimport { Card, CardImg, CardBody, CardTitle, Row, Col, Button, Table } from 'reactstrap';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { TvImage, TvCast, TvTitle } from './jsxstyles';\nimport fetch from 'isomorphic-unfetch';\nvar noimage = '/static/images/no-img.png';\n\nvar customFilter = function customFilter(_ref) {\n  var fieldName = _ref.fieldName,\n      filter = _ref.filter,\n      _onChange = _ref.onChange;\n  return React.createElement(\"select\", {\n    onChange: function onChange(event) {\n      return _onChange(event.target.value);\n    },\n    style: {\n      width: \"100%\"\n    },\n    value: filter ? filter.value : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Show All\"), data.map(function (item) {\n    return item[fieldName];\n  }).filter(function (item, i, s) {\n    return s.lastIndexOf(item) == i;\n  }).map(function (value) {\n    return React.createElement(\"option\", {\n      key: value,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, value);\n  }));\n};\n\nvar tvPost = function tvPost(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"the below content has been imported from\", React.createElement(\"a\", {\n    href: \"https://www.tvmaze.com\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"TVmaze.com\")), React.createElement(Layout2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"h3 m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.show.name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Type:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.show.type ? props.show.type : 'no data')), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Premiered:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.show.premiered ? props.show.premiered : 'no data')), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"status:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.show.status ? props.show.status : 'no data')), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Rating:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.show.rating.average ? props.show.rating.average : 'no data')), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Genre:\"), \" \\xA0\", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.show.genres.map(function (genres) {\n    return React.createElement(\"span\", {\n      key: props.show.genres,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, genres, \" \\xA0\");\n  })))), React.createElement(Col, {\n    sm: {\n      size: 'auto',\n      offset: 1\n    },\n    className: \"mr-5 mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.show.image ? props.show.image.medium : noimage,\n    alt: \"no image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    className: \"m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Summary:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?p>/g, '').replace(/<[/]?b>/g, '').replace(/<[/]?i>/g, '')))), React.createElement(Row, {\n    className: \"m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Link:\", React.createElement(\"small\", {\n    className: \"ml-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: props.show.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    title: props.show.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.show.name ? props.show.name : 'null')))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Cast:\"), React.createElement(\"div\", {\n    className: \"d-flex flex-wrap justify-content-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, props.show._embedded.cast.map(function (cast) {\n    return React.createElement(\"div\", {\n      key: cast.person.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      className: \"m-4 text-center\",\n      style: TvTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, cast.person.name), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      className: \"p-2\",\n      style: TvImage,\n      src: cast.person.image.medium ? cast.person.image.medium : noimage,\n      alt: \"castimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: TvCast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"As:\", React.createElement(\"small\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, cast.character.name)))), React.createElement(Button, {\n      className: \"btn-dark mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"btn-dark w-100\",\n      href: cast.person.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Actor page\"))));\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Episodes\"), React.createElement(ReactTable, {\n    className: \"Provider-table -striped -highlight center\",\n    data: props.show._embedded.episodes,\n    defaultPageSize: 20,\n    style: {\n      height: \"800px\" // This will force the table body to overflow and scroll, since there is not enough room\n\n    },\n    columns: [{\n      Header: \"Season\",\n      id: \"season\",\n      accessor: function accessor(d) {\n        return d.season;\n      },\n      filterMethod: function filterMethod(filter, row) {\n        return row[filter.id] === filter.value;\n      },\n      Filter: function Filter(_ref2) {\n        var filter = _ref2.filter,\n            onChange = _ref2.onChange;\n        return customFilter({\n          fieldName: 'Type',\n          filter: filter,\n          onChange: onChange\n        });\n      }\n    }, {\n      Header: \"Episode Number\",\n      accessor: \"number\"\n    }, {\n      Header: \"Name\",\n      accessor: \"name\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))));\n};\n\ntvPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id; //pules tvmaze api json based on selected show on the search page.\n\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id, \"?embed[]=episodes&embed[]=cast\"));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(show);\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default tvPost;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\tvpost.js"],"names":["Layout","Layout2","Card","CardImg","CardBody","CardTitle","Row","Col","Button","Table","ReactTable","TvImage","TvCast","TvTitle","fetch","noimage","customFilter","fieldName","filter","onChange","event","target","value","width","data","map","item","i","s","lastIndexOf","tvPost","props","show","name","type","premiered","status","rating","average","genres","size","offset","image","medium","summary","replace","url","_embedded","cast","person","id","character","episodes","height","Header","accessor","d","season","filterMethod","row","Filter","getInitialProps","context","query","res","json","console","log"],"mappings":"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","sourcesContent":["import Layout from '../components/layout'\r\nimport Layout2 from './tv_info/MyLayout'\r\nimport { Card, CardImg, CardBody, CardTitle, Row, Col, Button, Table } from 'reactstrap'\r\nimport ReactTable from \"react-table\"\r\nimport \"react-table/react-table.css\"\r\nimport { TvImage, TvCast, TvTitle } from './jsxstyles'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst noimage = '/static/images/no-img.png'\r\n\r\n\r\nconst customFilter = ({ fieldName, filter, onChange }) => {\r\n  return (\r\n    <select\r\n      onChange={event => onChange(event.target.value)}\r\n      style={{ width: \"100%\" }}\r\n      value={filter ? filter.value : ''}> \r\n      <option value= ''>Show All</option>\r\n      {data\r\n        .map(item => item[fieldName])\r\n        .filter((item, i, s) => s.lastIndexOf(item) == i)\r\n        .map(function (value) {\r\n          return (\r\n            <option key={value} value={value}>\r\n              {value}\r\n            </option>\r\n          );\r\n        })\r\n      }\r\n    </select>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst tvPost = props => (\r\n  <Layout>\r\n    <h1 className=\"text-center\">the below content has been imported from \r\n      <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        TVmaze.com\r\n      </a>\r\n    </h1>\r\n    <Layout2>\r\n      <div className=\"h3 m-3\">\r\n        <Row>\r\n          <Col>\r\n            <h1>{props.show.name}</h1>\r\n            <h3><b>Type:</b> <small>{props.show.type ? props.show.type : 'no data'}</small></h3>\r\n            <h3><b>Premiered:</b> <small>{props.show.premiered ? props.show.premiered : 'no data'}</small></h3>\r\n            <h3><b>status:</b> <small>{props.show.status ? props.show.status : 'no data'}</small></h3>\r\n            <h3><b>Rating:</b> <small>{props.show.rating.average ? props.show.rating.average : 'no data'}</small></h3>\r\n            <h3>\r\n              {/* since tvmaze api json has genre as an imbedded array,\r\n                pulls the data in genres in a key map to list all entries*/}\r\n              <b>Genre:</b> &nbsp;\r\n              <small>\r\n                {props.show.genres.map(genres => (\r\n                  <span key={props.show.genres}>\r\n                  {genres} &nbsp;\r\n                  </span>\r\n               ))} \r\n              </small>\r\n            </h3>\r\n          </Col>\r\n          <Col sm={{ size: 'auto', offset: 1 }} className=\"mr-5 mt-3\">\r\n            <img src={props.show.image ? props.show.image.medium : noimage} alt=\"no image\"/>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"m-3\">\r\n            <h4>Summary:<br /><small>{props.show.summary.replace(/<[/]?p>/g, '').replace(/<[/]?b>/g, '').replace(/<[/]?i>/g, '')}</small></h4>\r\n        </Row>\r\n        <Row className=\"m-3\">\r\n          <h3>Link: \r\n            <small className=\"ml-2\">\r\n              <a href={props.show.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  title={props.show.url}>\r\n              {props.show.name ? props.show.name : 'null'} \r\n              </a>\r\n            </small>\r\n          </h3>\r\n        </Row>\r\n        <h2>Cast:</h2>\r\n        <div className=\"d-flex flex-wrap justify-content-left\">\r\n          {props.show._embedded.cast.map(cast => (\r\n            <div key={cast.person.id}>\r\n              <Card className=\"m-2\">\r\n                <CardTitle className=\"m-4 text-center\" style={TvTitle}>{cast.person.name}</CardTitle>\r\n                <CardBody>\r\n                  <div>\r\n                    <CardImg className=\"p-2\" style={TvImage} src={cast.person.image.medium? cast.person.image.medium: noimage} alt=\"castimage\" />\r\n                  </div>\r\n                  <div className=\"text-center my-2\">\r\n                    <h4 style={TvCast}>As:<small className=\"ml-2\">{cast.character.name}</small></h4>\r\n                  </div>\r\n                </CardBody>\r\n                <Button className=\"btn-dark mt-5\">\r\n                  <a className=\"btn-dark w-100\" \r\n                    href={cast.person.url}\r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"> \r\n                      Actor page\r\n                  </a>\r\n                </Button>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <h1>Episodes</h1>\r\n            <ReactTable\r\n            className= \"Provider-table -striped -highlight center\"\r\n              data = {props.show._embedded.episodes}\r\n              defaultPageSize={20}\r\n              style={{\r\n                height: \"800px\" // This will force the table body to overflow and scroll, since there is not enough room\r\n              }}\r\n              columns= {[\r\n                {\r\n                  Header: \"Season\",\r\n                  id: \"season\",\r\n                  accessor: d => d.season,\r\n                  filterMethod: (filter, row) => {\r\n                    return row[filter.id] === filter.value;\r\n                  },\r\n                  Filter: ({ filter, onChange }) =>\r\n                  customFilter({ fieldName:'Type', filter, onChange })\r\n                },\r\n                {\r\n                  Header: \"Episode Number\",\r\n                  accessor: \"number\"\r\n                },\r\n                  {\r\n                    Header:\"Name\",\r\n                    accessor: \"name\"\r\n                  }\r\n              ]}\r\n              />\r\n              {/*<Table size=\"sm\" className=\"text-center\">\r\n                <tbody>\r\n                  <tr>\r\n                    <th>Season</th>\r\n                    <th>Episode Number</th>\r\n                    <th>Episode Name</th>\r\n                    <th>TVmaze episode page link</th>\r\n                  </tr>\r\n                  {props.show._embedded.episodes.map(episodes => (\r\n                  <tr key={episodes.id}>\r\n                  <td >{episodes.season}</td>\r\n                  <td >{episodes.number}</td>\r\n                  <td >{episodes.name}</td>\r\n                  <td ><a href={episodes.url}>Episode Link</a></td>\r\n                  </tr>\r\n                ))}\r\n                </tbody>\r\n                  </Table>*/}\r\n              \r\n        </div>\r\n        \r\n      </div>\r\n    </Layout2>\r\n  </Layout>\r\n);\r\n\r\ntvPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  //pules tvmaze api json based on selected show on the search page.\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}?embed[]=episodes&embed[]=cast`);\r\n  const show = await res.json();\r\n  \r\n  console.log(show);\r\n\r\n  console.log(`Fetched show: ${show.name}`);\r\n\r\n  return { show };\r\n};\r\n\r\nexport default tvPost;"]},"metadata":{},"sourceType":"module"}