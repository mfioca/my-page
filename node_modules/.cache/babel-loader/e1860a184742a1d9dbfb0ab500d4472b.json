{"ast":null,"code":"var doFilter = function doFilter(item, filter) {\n  var value = filter.value;\n\n  if (!(value instanceof RegExp)) {\n    value = filter.value = new RegExp(value, 'i');\n  }\n\n  return value.test(item[filter.property]);\n};\n\nvar createFilter = function createFilter() {\n  for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n    filters[_key] = arguments[_key];\n  }\n\n  if (typeof filters[0] === 'string') {\n    filters = [{\n      property: filters[0],\n      value: filters[1]\n    }];\n  }\n\n  return function (item) {\n    return filters.everytoLowerCase()(function (filter) {\n      return doFilter(item, filter);\n    });\n  };\n};\n\nexport { createFilter };","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\provider_data\\Filter.js"],"names":["doFilter","item","filter","value","RegExp","test","property","createFilter","filters","everytoLowerCase"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAAA,MACzBC,KADyB,GACfD,MADe,CACzBC,KADyB;;AAG/B,MAAI,EAAEA,KAAK,YAAYC,MAAnB,CAAJ,EAAgC;AAC9BD,IAAAA,KAAK,GAAGD,MAAM,CAACC,KAAP,GAAe,IAAIC,MAAJ,CAAWD,KAAX,EAAkB,GAAlB,CAAvB;AACD;;AAED,SAAOA,KAAK,CAACE,IAAN,CAAWJ,IAAI,CAAEC,MAAM,CAACI,QAAT,CAAf,CAAP;AACD,CARH;;AAUE,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAgB;AAAA,oCAAZC,OAAY;AAAZA,IAAAA,OAAY;AAAA;;AACnC,MAAI,OAAOA,OAAO,CAAC,CAAD,CAAd,KAAsB,QAA1B,EAAoC;AAClCA,IAAAA,OAAO,GAAG,CACR;AACEF,MAAAA,QAAQ,EAAEE,OAAO,CAAC,CAAD,CADnB;AAEEL,MAAAA,KAAK,EAAEK,OAAO,CAAC,CAAD;AAFhB,KADQ,CAAV;AAMD;;AAED,SAAO,UAAAP,IAAI;AAAA,WAAIO,OAAO,CAACC,gBAAR,GAA2B,UAAAP,MAAM;AAAA,aAAIF,QAAQ,CAACC,IAAD,EAAOC,MAAP,CAAZ;AAAA,KAAjC,CAAJ;AAAA,GAAX;AACD,CAXD;;AAaA,SAASK,YAAT","sourcesContent":["const doFilter = (item, filter) => {\r\n    let { value } = filter;\r\n  \r\n    if (!(value instanceof RegExp)) {\r\n      value = filter.value = new RegExp(value, 'i');\r\n    }\r\n  \r\n    return value.test(item[ filter.property ]);\r\n  }\r\n  \r\n  const createFilter = (...filters) => {\r\n    if (typeof filters[0] === 'string') {\r\n      filters = [\r\n        {\r\n          property: filters[0],\r\n          value: filters[1]\r\n        }\r\n      ];\r\n    }\r\n  \r\n    return item => filters.everytoLowerCase()(filter => doFilter(item, filter));\r\n  };\r\n  \r\n  export { createFilter };"]},"metadata":{},"sourceType":"module"}