{"ast":null,"code":"var dirMap = {\n  // greater-than\n  gt: {\n    asc: 1,\n    desc: -1\n  },\n  //less-than\n  lt: {\n    asc: -1,\n    desc: 1\n  }\n};\n\nvar doSort = function doSort(A, B, property) {\n  var direction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ASC';\n  var a = A[property];\n  var b = B[property];\n\n  if (a < b) {\n    return dirMap, lt[direction.toLowerCase()];\n  }\n\n  if (a > b) {\n    return dirMap.gt[direction.toLowerCase()];\n  }\n\n  return 0;\n};\n\nvar createSorter = function createSorter() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'string') {\n    args = [{\n      direction: args[1],\n      property: args[0]\n    }];\n  }\n\n  return function (A, B) {\n    var ret = 0;\n    args.some(function (sorter) {\n      var property = sorter.property,\n          _sorter$direction = sorter.direction,\n          direction = _sorter$direction === void 0 ? 'ASC' : _sorter$direction;\n      var value = doSort(A, B, property, direction);\n\n      if (value === 0) {\n        // they are equal, continue to next sorter if any\n        return false;\n      } else {\n        //they are different, stop at current sorter\n        ret = value;\n        return true;\n      }\n    });\n    return ret;\n  };\n};\n\nexport { createSorter };","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\test_items\\sort.js"],"names":["dirMap","gt","asc","desc","lt","doSort","A","B","property","direction","a","b","toLowerCase","createSorter","args","ret","some","sorter","value"],"mappings":"AAAA,IAAMA,MAAM,GAAG;AACX;AACAC,EAAAA,EAAE,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,IAAI,EAAE,CAAC;AAAjB,GAFO;AAGX;AACAC,EAAAA,EAAE,EAAE;AAAEF,IAAAA,GAAG,EAAE,CAAC,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB;AAJO,CAAf;;AAOA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,QAAP,EAAuC;AAAA,MAAtBC,SAAsB,uEAAV,KAAU;AAClD,MAAMC,CAAC,GAAGJ,CAAC,CAAEE,QAAF,CAAX;AACA,MAAMG,CAAC,GAAGJ,CAAC,CAAEC,QAAF,CAAX;;AAEA,MAAIE,CAAC,GAAGC,CAAR,EAAW;AACP,WAAOX,MAAM,EAACI,EAAE,CAAEK,SAAS,CAACG,WAAV,EAAF,CAAhB;AACH;;AACD,MAAIF,CAAC,GAAGC,CAAR,EAAW;AACP,WAAOX,MAAM,CAACC,EAAP,CAAWQ,SAAS,CAACG,WAAV,EAAX,CAAP;AACH;;AACD,SAAO,CAAP;AACH,CAXD;;AAaA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAa;AAAA,oCAATC,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAC9B,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC7BA,IAAAA,IAAI,GAAG,CACH;AACIL,MAAAA,SAAS,EAAEK,IAAI,CAAC,CAAD,CADnB;AAEIN,MAAAA,QAAQ,EAAEM,IAAI,CAAC,CAAD;AAFlB,KADG,CAAP;AAMH;;AAED,SAAO,UAACR,CAAD,EAAIC,CAAJ,EAAU;AACb,QAAIQ,GAAG,GAAG,CAAV;AAEAD,IAAAA,IAAI,CAACE,IAAL,CAAU,UAAAC,MAAM,EAAG;AAAA,UACPT,QADO,GACwBS,MADxB,CACPT,QADO;AAAA,8BACwBS,MADxB,CACGR,SADH;AAAA,UACGA,SADH,kCACe,KADf;AAEf,UAAMS,KAAK,GAAGb,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,QAAP,EAAiBC,SAAjB,CAApB;;AAEA,UAAIS,KAAK,KAAK,CAAd,EAAiB;AACb;AACA,eAAO,KAAP;AACH,OAHD,MAGO;AACH;AACAH,QAAAA,GAAG,GAAGG,KAAN;AACA,eAAO,IAAP;AACH;AACJ,KAZD;AAcA,WAAOH,GAAP;AACH,GAlBD;AAmBH,CA7BD;;AA+BA,SAASF,YAAT","sourcesContent":["const dirMap = {\r\n    // greater-than\r\n    gt: { asc: 1, desc: -1},\r\n    //less-than\r\n    lt: { asc: -1, desc: 1}\r\n};\r\n\r\nconst doSort = (A, B, property, direction = 'ASC') => {\r\n    const a = A[ property ];\r\n    const b = B[ property ];\r\n\r\n    if (a < b) {\r\n        return dirMap,lt[ direction.toLowerCase() ];\r\n    }\r\n    if (a > b) {\r\n        return dirMap.gt[ direction.toLowerCase() ];\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst createSorter = (...args) => {\r\n    if (typeof args[0] === 'string') {\r\n        args = [\r\n            {\r\n                direction: args[1],\r\n                property: args[0]\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (A, B) => {\r\n        let ret = 0;\r\n\r\n        args.some(sorter =>{\r\n            const { property, direction = 'ASC'} = sorter;\r\n            const value = doSort(A, B, property, direction);\r\n\r\n            if (value === 0) {\r\n                // they are equal, continue to next sorter if any\r\n                return false;\r\n            } else {\r\n                //they are different, stop at current sorter\r\n                ret = value;\r\n                return true;\r\n            }\r\n        })\r\n\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport { createSorter };"]},"metadata":{},"sourceType":"module"}