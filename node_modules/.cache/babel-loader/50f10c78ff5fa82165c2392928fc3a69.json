{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\attacksim.js\";\nimport React from 'react';\nimport { SetConstAdj, SetAcAdj, SetDmgHitAdj, setherostats, setmonsterstats, RollforIniative, AttackRoll, AttackTurn } from './mainfunctions';\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../customComponents';\nimport { Row, Col, Button } from 'reactstrap';\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    var baseHp = 50;\n    var baseArmorClass = 10;\n    var baseDamage = 10;\n    _this.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroNametext: '',\n      heroName: 'Hero',\n      heroInitiative: 0,\n      heroAttackVisible: false,\n      heroRoll: 0,\n      heroDidHit: '',\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterNametext: '',\n      monsterName: 'Monster',\n      monsterInitiative: 0,\n      monsterAttackVisible: false,\n      monsterRoll: 0,\n      monsterDidHit: ''\n    }; //Hero bind function statements\n\n    _this.setherostats = setherostats.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    _this.heroNameSubmit = _this.heroNameSubmit.bind(_assertThisInitialized(_this)); //monster bind function statements\n\n    _this.setmonsterstats = setmonsterstats.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    _this.monsterNameSubmit = _this.monsterNameSubmit.bind(_assertThisInitialized(_this)); //combined hero/monster function statesments\n\n    _this.SetConstAdj = SetConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetAcAdj = SetAcAdj.bind(_assertThisInitialized(_this));\n    _this.SetDmgHitAdj = SetDmgHitAdj.bind(_assertThisInitialized(_this));\n    _this.RollforIniative = RollforIniative.bind(_assertThisInitialized(_this));\n    _this.AttackRoll = AttackRoll.bind(_assertThisInitialized(_this));\n    _this.AttackTurn = AttackTurn.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"heroNameSubmit\",\n    value: function heroNameSubmit(event) {\n      this.setState({\n        heroName: this.state.heroNametext\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameSubmit\",\n    value: function monsterNameSubmit(event) {\n      this.setState({\n        monsterName: this.state.monsterNametext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CenterFlexWrapDiv, {\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Hero Name: \"), React.createElement(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.heroName))), React.createElement(CharacterSheet, {\n        Strength: this.state.herostats.Str,\n        Constitution: this.state.herostats.Const,\n        Dexterity: this.state.herostats.Dext,\n        Hitpoints: this.state.heroHp,\n        Damage: this.state.heroDmg,\n        ImgUrl: \"../static/images/hero.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setherostats(baseHp, baseArmorClass, baseDamage),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(NameForm, {\n        Value: this.state.value,\n        NameChange: this.heroNameChange,\n        NameSubmit: this.heroNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Monster Name: \"), React.createElement(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.state.monsterName)), React.createElement(CharacterSheet, {\n        Strength: this.state.monsterstats.Str,\n        Constitution: this.state.monsterstats.Const,\n        Dexterity: this.state.monsterstats.Dext,\n        Hitpoints: this.state.monsterHp,\n        Damage: this.state.monsterDmg,\n        ImgUrl: \"../static/images/monster.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setmonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(NameForm, {\n        Value: this.state.value,\n        NameChange: this.monsterNameChange,\n        NameSubmit: this.monsterNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })))), React.createElement(CenterFlexWrapDiv, {\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark m-1 p-0 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.heroAc,\n        HitAdj: this.state.heroHitAdj,\n        AttackRoll: this.AttackRoll,\n        RollTitle: \"Hero Roll for Attack\",\n        Roll: this.state.heroRoll,\n        DidHit: this.state.heroDidHit,\n        NextTurn: this.AttackTurn,\n        AttackTurn: this.state.heroAttackVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"bg-dark m-1 mb-2 p-0 col\",\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center m-0 p-0 text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        className: \"m-5 w-50\",\n        onClick: this.RollforIniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Roll for iniative\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(AttackStatusDisplay, {\n        Name: this.state.heroName,\n        Initiative: this.state.heroInitiative,\n        HP: this.state.heroHp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(AttackStatusDisplay, {\n        Name: this.state.monsterName,\n        Initiative: this.state.monsterInitiative,\n        HP: this.state.monsterHp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"bg-dark m-1 p-0 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.monsterAc,\n        HitAdj: this.state.monsterHitAdj,\n        AttackRoll: this.AttackRoll,\n        RollTitle: \"Monster Roll for Attack\",\n        Roll: this.state.monsterRoll,\n        DidHit: this.state.monsterDidHit,\n        NextTurn: this.AttackTurn,\n        AttackTurn: this.state.monsterAttackVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\attacksim.js"],"names":["React","SetConstAdj","SetAcAdj","SetDmgHitAdj","setherostats","setmonsterstats","RollforIniative","AttackRoll","AttackTurn","CharacterSheet","NameForm","AttackSection","CenterFlexWrapDiv","AttackStatusDisplay","Row","Col","Button","AttackSim","props","baseHp","baseArmorClass","baseDamage","state","herostats","Str","Const","Dext","herobase","Hp","ArmorClass","Damage","monsterstats","monsterbase","heroHp","heroAc","heroDmg","heroHitAdj","heroNametext","heroName","heroInitiative","heroAttackVisible","heroRoll","heroDidHit","monsterHp","monsterAc","monsterDmg","monsterHitAdj","monsterNametext","monsterName","monsterInitiative","monsterAttackVisible","monsterRoll","monsterDidHit","bind","heroNameChange","heroNameSubmit","monsterNameChange","monsterNameSubmit","event","setState","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { SetConstAdj, SetAcAdj, SetDmgHitAdj, setherostats, setmonsterstats,\r\n    RollforIniative, AttackRoll, AttackTurn } from './mainfunctions'\r\n\r\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../customComponents'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        const baseHp = 50;\r\n        const baseArmorClass = 10;\r\n        const baseDamage = 10\r\n        \r\n        this.state = { \r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroNametext: '',\r\n            heroName: 'Hero',\r\n            heroInitiative: 0,\r\n            heroAttackVisible: false,\r\n            heroRoll: 0,\r\n            heroDidHit: '',\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterNametext: '',\r\n            monsterName: 'Monster',\r\n            monsterInitiative: 0,\r\n            monsterAttackVisible: false,\r\n            monsterRoll: 0,\r\n            monsterDidHit: '',\r\n        };\r\n\r\n        //Hero bind function statements\r\n        this.setherostats = setherostats.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n        this.heroNameSubmit = this.heroNameSubmit.bind(this);\r\n        \r\n        //monster bind function statements\r\n        this.setmonsterstats = setmonsterstats.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n        this.monsterNameSubmit = this.monsterNameSubmit.bind(this);\r\n\r\n        //combined hero/monster function statesments\r\n        this.SetConstAdj = SetConstAdj.bind(this);\r\n        this.SetAcAdj = SetAcAdj.bind(this);\r\n        this.SetDmgHitAdj = SetDmgHitAdj.bind(this);\r\n        this.RollforIniative = RollforIniative.bind(this);\r\n        this.AttackRoll = AttackRoll.bind(this);\r\n        this.AttackTurn = AttackTurn.bind(this);\r\n        \r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext})\r\n    }\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterNametext : event.target.value});\r\n    }\r\n\r\n    monsterNameSubmit(event) {\r\n        this.setState ({monsterName: this.state.monsterNametext});\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n            <div>\r\n                <CenterFlexWrapDiv className=\"m-0 p-0\"> \r\n                    <Row className=\"w-100\">\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <div>\r\n                               <h5 className=\"mt-5 ml-5\"><b>Hero Name: </b>\r\n                                    <span className=\"text-info ml-5 h3\">\r\n                                        {this.state.heroName}\r\n                                    </span>\r\n                                </h5>\r\n                            </div>\r\n                            <CharacterSheet \r\n                                Strength = {this.state.herostats.Str}\r\n                                Constitution = {this.state.herostats.Const}\r\n                                Dexterity = {this.state.herostats.Dext}\r\n                                Hitpoints = {this.state.heroHp}\r\n                                Damage = {this.state.heroDmg}\r\n                                ImgUrl= \"../static/images/hero.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setherostats(baseHp, baseArmorClass, baseDamage)}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm\r\n                                Value = {this.state.value}\r\n                                NameChange = {this.heroNameChange}\r\n                                NameSubmit = {this.heroNameSubmit}\r\n                            />\r\n                        </Col>\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <h5 className=\"mt-5 ml-5\"><b>Monster Name: </b>\r\n                                <span className=\"text-info ml-5 h3\">\r\n                                    {this.state.monsterName}\r\n                                </span>\r\n                            </h5>\r\n                            <CharacterSheet\r\n                                Strength = {this.state.monsterstats.Str}\r\n                                Constitution = {this.state.monsterstats.Const}\r\n                                Dexterity = {this.state.monsterstats.Dext}\r\n                                Hitpoints = {this.state.monsterHp}\r\n                                Damage = {this.state.monsterDmg}\r\n                                ImgUrl = \"../static/images/monster.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setmonsterstats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm \r\n                                Value = {this.state.value}\r\n                                NameChange = {this.monsterNameChange}\r\n                                NameSubmit = {this.monsterNameSubmit}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </CenterFlexWrapDiv>\r\n                <CenterFlexWrapDiv className=\"m-0 p-0\">\r\n                    <div  className=\"bg-dark m-1 p-0 mb-2\">\r\n                        <AttackSection\r\n                            AC = {this.state.heroAc}\r\n                            HitAdj = {this.state.heroHitAdj}\r\n                            AttackRoll = {this.AttackRoll}\r\n                            RollTitle = \"Hero Roll for Attack\"\r\n                            Roll = {this.state.heroRoll}\r\n                            DidHit = {this.state.heroDidHit}\r\n                            NextTurn = {this.AttackTurn}\r\n                            AttackTurn = {this.state.heroAttackVisible}\r\n                        /> \r\n                    </div>\r\n                    <div className=\"bg-dark m-1 mb-2 p-0 col\" xs=\"3\">\r\n                        <div className=\"text-center m-0 p-0 text-white\">\r\n                            <Button \r\n                                type=\"button\" \r\n                                className=\"m-5 w-50\"  \r\n                                onClick={this.RollforIniative}>\r\n                                Roll for iniative\r\n                            </Button>\r\n                            <Row>\r\n                                <Col className=\"w-50\">\r\n                                    <AttackStatusDisplay\r\n                                        Name = {this.state.heroName}\r\n                                        Initiative = {this.state.heroInitiative}\r\n                                        HP = {this.state.heroHp}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <AttackStatusDisplay\r\n                                        Name = {this.state.monsterName}\r\n                                        Initiative = {this.state.monsterInitiative}\r\n                                        HP = {this.state.monsterHp}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-dark m-1 p-0 mb-2\">\r\n                        <AttackSection\r\n                            AC = {this.state.monsterAc}\r\n                            HitAdj = {this.state.monsterHitAdj}\r\n                            AttackRoll = {this.AttackRoll}\r\n                            RollTitle = \"Monster Roll for Attack\"\r\n                            Roll = {this.state.monsterRoll}\r\n                            DidHit = {this.state.monsterDidHit}\r\n                            NextTurn = {this.AttackTurn}\r\n                            AttackTurn = {this.state.monsterAttackVisible}\r\n                        />\r\n                    </div>\r\n                </CenterFlexWrapDiv>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AttackSim;\r\n\r\n"]},"metadata":{},"sourceType":"module"}