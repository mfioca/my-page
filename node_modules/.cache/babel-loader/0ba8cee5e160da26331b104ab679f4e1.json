{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\provider_data\\\\providerimport.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { createFilter } from './Filter';\n\nvar data = require('./provider.json');\n\nProviderList.propTypes = {\n  filters: [{\n    property: 'Type',\n    value: ''\n  }, {\n    property: 'Region',\n    value: ''\n  }, {\n    property: 'County',\n    value: ''\n  }, {\n    property: 'WCHR',\n    value: 'Yes'\n  }, {\n    property: 'Stretcher',\n    value: ''\n  }]\n};\n\nvar ProviderList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProviderList, _Component);\n\n  function ProviderList(props) {\n    var _this;\n\n    _classCallCheck(this, ProviderList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProviderList).call(this, props));\n    _this.state = {\n      filters: _this.props.filters\n    };\n    return _this;\n  }\n  /*\r\n    static defaultProps = {\r\n      filters: [{\r\n        property: 'Type',\r\n        value: ''\r\n      }, {\r\n        property: 'Region',\r\n        value: ''\r\n      }, {\r\n        property: 'County',\r\n        value: ''\r\n      }, {\r\n        property: 'WCHR',\r\n        value: 'Yes'\r\n      }, {\r\n        property: 'Stretcher',\r\n        value: ''\r\n      }]\r\n    };*/\n\n\n  _createClass(ProviderList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"/provider.json\").then(function (res) {\n        return res.json();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return data ? this.renderData(data) : this.renderLoading();\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData(data) {\n      var filters = this.state.filters;\n\n      if (data && data.length > 0) {\n        if (_Array$isArray(filters) && filters.length) {\n          data = data.filter(createFilter.apply(void 0, _toConsumableArray(filters)));\n        }\n\n        return React.createElement(\"div\", {\n          className: \"Provider-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"Provider-table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Type\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Provider Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Provider Region\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"County\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Ambulatory\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Wheelchair\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Stretcher\")), data.map(function (item) {\n          return React.createElement(\"tr\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, item.Type), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, item.Name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, item.Region), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, item.County), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, item.Amb), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, item.WCHR), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, item.Stretcher));\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"No items found\");\n      }\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }]);\n\n  return ProviderList;\n}(Component);\n\nexport default ProviderList;\n/* codxe used while working on generating page\r\nrender () {\r\n   \r\n    const  {sorter}  = this.state;\r\n \r\n     if (data && data.length > 0) {\r\n       if (Array.isArray(sorter) && sorter.length) {\r\n         data.sort(createSorter(...sorter));\r\n       }\r\n     }\r\n \r\n     return (\r\n       \r\n       <div>\r\n                   \r\n         {\r\n           data.map(item => (\r\n             <div key={item.id}>\r\n               <span>{item.id}</span>&nbsp;&nbsp;\r\n               \r\n               <span><a href={`mailto:${item.email}`}>{item.name}</a></span>;&nbsp; \r\n               <span>{item.company}</span>\r\n             </div>\r\n           ))\r\n         }\r\n       </div>\r\n       \r\n     );\r\n   } \r\n   }\r\n\n\nexport default List;*/","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\provider_data\\providerimport.js"],"names":["React","Component","PropTypes","createFilter","data","require","ProviderList","propTypes","filters","property","value","props","state","fetch","then","res","json","renderData","renderLoading","length","filter","map","item","id","Type","Name","Region","County","Amb","WCHR","Stretcher"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { createFilter } from './Filter';\r\n\r\nvar data = require('./provider.json');\r\n\r\nProviderList.propTypes = {\r\n  filters: [{\r\n    property: 'Type',\r\n    value: ''\r\n  }, {\r\n    property: 'Region',\r\n    value: ''\r\n  }, {\r\n    property: 'County',\r\n    value: ''\r\n  }, {\r\n    property: 'WCHR',\r\n    value: 'Yes'\r\n  }, {\r\n    property: 'Stretcher',\r\n    value: ''\r\n  }]\r\n};\r\n\r\nclass ProviderList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filters: this.props.filters\r\n  };\r\n}\r\n/*\r\n  static defaultProps = {\r\n    filters: [{\r\n      property: 'Type',\r\n      value: ''\r\n    }, {\r\n      property: 'Region',\r\n      value: ''\r\n    }, {\r\n      property: 'County',\r\n      value: ''\r\n    }, {\r\n      property: 'WCHR',\r\n      value: 'Yes'\r\n    }, {\r\n      property: 'Stretcher',\r\n      value: ''\r\n    }]\r\n  };*/\r\n  \r\n  componentDidMount () {\r\n    fetch(`/provider.json`)\r\n      .then(res => res.json());\r\n  }\r\n\r\n  render() {\r\n    return data ? this.renderData(data) : this.renderLoading();\r\n  }\r\n\r\n  renderData(data) {\r\n    const { filters } = this.state;\r\n    if (data && data.length > 0) {\r\n      if (Array.isArray(filters) && filters.length) {\r\n        data = data.filter(createFilter(...filters));\r\n      }\r\n      return (\r\n        <div className=\"Provider-container\">\r\n          <div> \r\n              <table \r\n              \r\n              className=\"Provider-table\">\r\n              <tr>\r\n                <th>Type</th>\r\n                <th>Provider Name</th>\r\n                <th>Provider Region</th>\r\n                <th>County</th>\r\n                <th>Ambulatory</th>\r\n                <th>Wheelchair</th>\r\n                <th>Stretcher</th>\r\n              </tr>\r\n              {data.map(item => (\r\n                <tr key={item.id}>\r\n                  <td>{item.Type}</td>\r\n                  <td>{item.Name}</td>\r\n                  <td>{item.Region}</td>\r\n                  <td>{item.County}</td>\r\n                  <td>{item.Amb}</td>\r\n                  <td>{item.WCHR}</td>\r\n                  <td>{item.Stretcher}</td>\r\n                </tr>\r\n              ))}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>;\r\n    }\r\n  }\r\n\r\n  renderLoading() {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default ProviderList;\r\n\r\n\r\n /* codxe used while working on generating page\r\n render () {\r\n    \r\n     const  {sorter}  = this.state;\r\n  \r\n      if (data && data.length > 0) {\r\n        if (Array.isArray(sorter) && sorter.length) {\r\n          data.sort(createSorter(...sorter));\r\n        }\r\n      }\r\n  \r\n      return (\r\n        \r\n        <div>\r\n                    \r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                <span>{item.id}</span>&nbsp;&nbsp;\r\n                \r\n                <span><a href={`mailto:${item.email}`}>{item.name}</a></span>;&nbsp; \r\n                <span>{item.company}</span>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n        \r\n      );\r\n    } \r\n    }\r\n\r\n\r\nexport default List;*/\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}