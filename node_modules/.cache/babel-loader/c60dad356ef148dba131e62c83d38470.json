{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\github\\\\my-page\\\\pages\\\\DandD\\\\attacksim.js\";\nimport React from 'react';\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj, setherostats, heroattackroll } from './herofunctions';\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj, setmonsterstats, monsterattackroll } from './monsterfunctions';\nimport { Table, Container, Row, Col } from 'reactstrap';\nimport { AboutImg } from '../jsxstyles';\n\nvar CharacterSheet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CharacterSheet, _React$Component);\n\n  function CharacterSheet(props) {\n    var _this;\n\n    _classCallCheck(this, CharacterSheet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CharacterSheet).call(this, props));\n    _this.state = {\n      heroNametext: '',\n      heroName: ''\n    };\n    return _this;\n  }\n\n  _createClass(CharacterSheet, [{\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"heroNameSubmit\",\n    value: function heroNameSubmit(event) {\n      this.setState({\n        heroName: this.state.heroNametext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Name:\"), \" \", this.state.heroName), React.createElement(Table, {\n        borderless: true,\n        size: \"md\",\n        className: \"w-50 m-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" \", this.props.Strength)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", this.props.Constitution)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" \", this.props.Dexterity)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" \", this.props.Hitpoints)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Damage per Hit:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" \", this.props.Damage))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: AboutImg,\n        src: \"../static/images/hero.png\",\n        alt: \"hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: {\n          size: 3,\n          offset: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setherostats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Set Attrubutes\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.heroNameChange,\n        NameSubmit: this.heroNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CharacterSheet;\n}(React.Component);\n\nvar Avatar =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Avatar, _React$Component2);\n\n  function Avatar() {\n    _classCallCheck(this, Avatar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Avatar).apply(this, arguments));\n  }\n\n  _createClass(Avatar, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.avatar === \"hero\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"DnD_Hero Float-right\",\n          src: \"../static/images/hero.png\",\n          alt: \"hero\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }));\n      }\n\n      if (this.props.avatar === \"monster\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"DnD_Monster Float-right\",\n          src: \"../static/images/monster.png\",\n          alt: \"monster\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return Avatar;\n}(React.Component);\n\nvar NameForm =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(NameForm, _React$Component3);\n\n  function NameForm() {\n    _classCallCheck(this, NameForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NameForm).apply(this, arguments));\n  }\n\n  _createClass(NameForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.props.value,\n        onChange: this.props.NameChange //Prevent enter key submit\n        ,\n        onKeyPress: function onKeyPress(event) {\n          if (event.which === 13\n          /* Enter */\n          ) {\n              event.preventDefault();\n            }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.props.NameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return NameForm;\n}(React.Component);\n\nvar AttackSection =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(AttackSection, _React$Component4);\n\n  function AttackSection() {\n    _classCallCheck(this, AttackSection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AttackSection).apply(this, arguments));\n  }\n\n  _createClass(AttackSection, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        alt: \"shield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.props.AC)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.props.HitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.props.AttackRoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.props.RollTitle)), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.props.DidHit));\n    }\n  }]);\n\n  return AttackSection;\n}(React.Component);\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component5) {\n  _inherits(AttackSim, _React$Component5);\n\n  function AttackSim(props) {\n    var _this2;\n\n    _classCallCheck(this, AttackSim);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    _this2.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroNametext: '',\n      heroName: '',\n      heroInitiative: 0,\n      heroRoll: 0,\n      heroDidHit: '',\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterNametext: '',\n      monsterName: '',\n      monsterInitiative: 0,\n      monsterRoll: 0,\n      monsterDidHit: ''\n    }; //Hero bind function statements\n\n    _this2.setherostats = setherostats.bind(_assertThisInitialized(_this2));\n    _this2.SetheroConstAdj = SetheroConstAdj.bind(_assertThisInitialized(_this2));\n    _this2.SetheroacAdj = SetheroacAdj.bind(_assertThisInitialized(_this2));\n    _this2.SetheroDmgAdj = SetheroDmgAdj.bind(_assertThisInitialized(_this2));\n    _this2.SetheroHitAdj = SetheroHitAdj.bind(_assertThisInitialized(_this2));\n    _this2.heroNameChange = _this2.heroNameChange.bind(_assertThisInitialized(_this2));\n    _this2.heroNameSubmit = _this2.heroNameSubmit.bind(_assertThisInitialized(_this2));\n    _this2.heroattackroll = heroattackroll.bind(_assertThisInitialized(_this2)); //monster bind function statements\n\n    _this2.setmonsterstats = setmonsterstats.bind(_assertThisInitialized(_this2));\n    _this2.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this2));\n    _this2.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this2));\n    _this2.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(_assertThisInitialized(_this2));\n    _this2.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this2));\n    _this2.monsterNameChange = _this2.monsterNameChange.bind(_assertThisInitialized(_this2));\n    _this2.monsterNameSubmit = _this2.monsterNameSubmit.bind(_assertThisInitialized(_this2));\n    _this2.monsterattackroll = monsterattackroll.bind(_assertThisInitialized(_this2));\n    _this2.rollforiniative = _this2.rollforiniative.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"heroNameSubmit\",\n    value: function heroNameSubmit(event) {\n      this.setState({\n        heroName: this.state.heroNametext\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameSubmit\",\n    value: function monsterNameSubmit(event) {\n      this.setState({\n        monsterName: this.state.monsterNametext\n      });\n    } //initiative shows what character attacks first\n\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      this.Heroinitiative = Math.floor(Math.random() * 10 + 1);\n      this.Monsterinitiative = Math.floor(Math.random() * 10 + 1); //if hero 1-10 role is lower, hero goes first.\n\n      if (this.Heroinitiative < this.Monsterinitiative) {\n        this.setState({\n          heroInitiative: 'First',\n          monsterInitiative: 'Second'\n        }); //if monster 1-10 role is lower, monster goes first\n      } else if (this.Heroinitiative > this.Monsterinitiative) {\n        this.setState({\n          monsterInitiative: 'First',\n          heroInitiative: 'Second'\n        });\n      } else {\n        //if both have same result, roll again\n        this.setState({\n          heroInitiative: 'ReRoll',\n          monsterInitiative: 'ReRoll'\n        });\n      }\n\n      ; //clears out the hit/miss comments since it is a new round.\n\n      this.setState({\n        heroDidHit: '',\n        monsterDidHit: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"m-5 justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Name: \"), this.state.heroName), React.createElement(CharacterSheet, {\n        Strength: this.state.herostats.Str,\n        Constitution: this.state.herostats.Const,\n        Dexterity: this.state.herostats.Dext,\n        Hitpoints: this.state.heroHp,\n        Damage: this.state.heroDmg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"m-5 justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Name: \"), this.state.heroName), React.createElement(CharacterSheet, {\n        Strength: this.state.herostats.Str,\n        Constitution: this.state.herostats.Const,\n        Dexterity: this.state.herostats.Dext,\n        Hitpoints: this.state.heroHp,\n        Damage: this.state.heroDmg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.heroNameChange,\n        NameSubmit: this.heroNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(AttackSection, {\n        AC: this.state.heroAc,\n        HitAdj: this.state.heroHitAdj,\n        AttackRoll: this.heroattackroll,\n        RollTitle: \"Hero Roll for Attack\",\n        DidHit: this.state.heroDidHit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Initiative DandD_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Roll for iniative\")), React.createElement(\"div\", {\n        className: \"Heroinitiative center Fsize-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Hero \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), \"iniative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, this.state.heroInitiative)), React.createElement(\"div\", {\n        className: \"Monsterinitiative center Fsize-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Monster initiative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, this.state.monsterInitiative)), React.createElement(\"div\", {\n        className: \"HeroHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/herohp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HeroHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, this.state.heroHp)), React.createElement(\"div\", {\n        className: \"MonsterHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/monsterhp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"MonsterHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, this.state.monsterHp))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.monsterAc,\n        HitAdj: this.state.monsterHitAdj,\n        AttackRoll: this.monsterattackroll,\n        RollTitle: \"Monster Roll for Attack\",\n        DidHit: this.state.monsterDidHit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Documents\\github\\my-page\\pages\\DandD\\attacksim.js"],"names":["React","SetheroConstAdj","SetheroHitAdj","SetheroDmgAdj","SetheroacAdj","setherostats","heroattackroll","SetmonsterConstAdj","SetmonsterHitAdj","SetmonsterDmgAdj","SetmonsteracAdj","setmonsterstats","monsterattackroll","Table","Container","Row","Col","AboutImg","CharacterSheet","props","state","heroNametext","heroName","event","setState","target","value","Strength","Constitution","Dexterity","Hitpoints","Damage","size","offset","heroNameChange","heroNameSubmit","Component","Avatar","avatar","NameForm","NameChange","which","preventDefault","NameSubmit","AttackSection","AC","HitAdj","AttackRoll","RollTitle","DidHit","AttackSim","herostats","Str","Const","Dext","herobase","Hp","ArmorClass","monsterstats","monsterbase","heroHp","heroAc","heroDmg","heroHitAdj","heroInitiative","heroRoll","heroDidHit","monsterHp","monsterAc","monsterDmg","monsterHitAdj","monsterNametext","monsterName","monsterInitiative","monsterRoll","monsterDidHit","bind","monsterNameChange","monsterNameSubmit","rollforiniative","Heroinitiative","Math","floor","random","Monsterinitiative"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj, setherostats, heroattackroll } from './herofunctions';\r\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj, setmonsterstats, monsterattackroll } from './monsterfunctions';\r\nimport { Table, Container, Row, Col } from 'reactstrap'\r\nimport { AboutImg } from '../jsxstyles'\r\n\r\n\r\n\r\nclass CharacterSheet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {heroNametext: '',\r\n                        heroName: ''};\r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext})\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"bg-dark\">\r\n                \r\n                <Row>\r\n                    <Col >\r\n                    <p><b>Name:</b> { this.state.heroName }</p>\r\n                <Table borderless size=\"md\" className=\"w-50 m-5\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Strength:</td>\r\n                            <td> { this.props.Strength }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Constitution:</td>\r\n                            <td> { this.props.Constitution }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Dexterity:</td>\r\n                            <td> { this.props.Dexterity }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Hitpoints:</td>\r\n                            <td> { this.props.Hitpoints }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Damage per Hit:</td>\r\n                            <td> { this.props.Damage }</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>  \r\n                </Col>\r\n                <Col >\r\n                <img  style={AboutImg}src=\"../static/images/hero.png\" alt=\"hero\"/>\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"12\" md={{ size: 3, offset: 4 }}>\r\n                <button onClick={ this.setherostats }>Set Attrubutes</button>\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                    <NameForm \r\n                            value = { this.state.value }\r\n                            NameChange = { this.heroNameChange }\r\n                            NameSubmit = { this.heroNameSubmit }\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        if (this.props.avatar === \"hero\") {\r\n            return (\r\n                <div>\r\n                    <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \r\n                </div>\r\n            );\r\n        }\r\n        if (this.props.avatar === \"monster\") {\r\n            return (\r\n                <div>\r\n                    <img className=\"DnD_Monster Float-right\" src=\"../static/images/monster.png\" alt=\"monster\"/>\r\n                </div>\r\n            );\r\n        }  \r\n    }\r\n}\r\n\r\n\r\nclass NameForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <label>\r\n                        Name:\r\n                        <input\r\n                            type=\"text\"\r\n                            maxLength=\"20\"\r\n                            value={ this.props.value }\r\n                            onChange={ this.props.NameChange }\r\n                            //Prevent enter key submit\r\n                            onKeyPress={event => {\r\n                                if (event.which === 13 /* Enter */) {\r\n                                event.preventDefault();\r\n                                }\r\n                            }}\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\" onClick={ this.props.NameSubmit }>Submit</button>\r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass AttackSection extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Attack-section\">\r\n                <div className=\"AC-Icon\">\r\n                    <img src=\"../static/images/acicon.png\" alt=\"shield\"/>\r\n                    <p className=\"AC-Icon-text Fsize-3\">\r\n                        { this.props.AC }\r\n                    </p>\r\n                </div>\r\n                <div className=\"HitAdj-Icon\">\r\n                    <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                    <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                        { this.props.HitAdj }\r\n                    </p>\r\n                </div>\r\n                <div className=\"Attack-roll\">\r\n                    <button  onClick={ this.props.AttackRoll }>\r\n                        { this.props.RollTitle }\r\n                    </button>\r\n                </div>\r\n                <div className=\"Attack-result Fsize-3 center\">\r\n                    { this.props.DidHit }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroNametext: '',\r\n            heroName: '',\r\n            heroInitiative: 0,\r\n            heroRoll: 0,\r\n            heroDidHit: '',\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterNametext: '',\r\n            monsterName: '',\r\n            monsterInitiative: 0,\r\n            monsterRoll: 0,\r\n            monsterDidHit: ''\r\n        };\r\n\r\n        //Hero bind function statements\r\n        this.setherostats = setherostats.bind(this);\r\n        this.SetheroConstAdj = SetheroConstAdj.bind(this);\r\n        this.SetheroacAdj = SetheroacAdj.bind(this);\r\n        this.SetheroDmgAdj = SetheroDmgAdj.bind(this);\r\n        this.SetheroHitAdj = SetheroHitAdj.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n        this.heroNameSubmit = this.heroNameSubmit.bind(this);\r\n        this.heroattackroll = heroattackroll.bind(this);\r\n        //monster bind function statements\r\n        this.setmonsterstats = setmonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n        this.monsterNameSubmit = this.monsterNameSubmit.bind(this);\r\n        this.monsterattackroll = monsterattackroll.bind(this);\r\n\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n    }\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext})\r\n    }\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterNametext : event.target.value});\r\n    }\r\n\r\n    monsterNameSubmit(event) {\r\n        this.setState ({monsterName: this.state.monsterNametext});\r\n    }\r\n\r\n    //initiative shows what character attacks first\r\n    rollforiniative() {\r\n        this.Heroinitiative = Math.floor((Math.random() * 10) + 1);\r\n        this.Monsterinitiative = Math.floor((Math.random() * 10) + 1);\r\n        //if hero 1-10 role is lower, hero goes first.\r\n        if (this.Heroinitiative < this.Monsterinitiative) {\r\n            this.setState ({\r\n                heroInitiative: 'First',\r\n                monsterInitiative: 'Second'\r\n            });\r\n        //if monster 1-10 role is lower, monster goes first\r\n        } else if (this.Heroinitiative > this.Monsterinitiative) {\r\n            this.setState ({\r\n                monsterInitiative: 'First',\r\n                heroInitiative: 'Second'\r\n            });\r\n        } else {\r\n            //if both have same result, roll again\r\n            this.setState ({\r\n                heroInitiative: 'ReRoll',\r\n                monsterInitiative: 'ReRoll'\r\n            })   \r\n        };\r\n        //clears out the hit/miss comments since it is a new round.\r\n        this.setState ({\r\n            heroDidHit: '',\r\n            monsterDidHit: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                \r\n                        <div>\r\n                            <div >\r\n                            <Row>\r\n                                <Col className=\"m-5 justify-content-center\">\r\n                                <p><b>Name: </b>{ this.state.heroName }</p>\r\n                                <CharacterSheet \r\n                                    Strength = { this.state.herostats.Str }\r\n                                    Constitution = { this.state.herostats.Const }\r\n                                    Dexterity = { this.state.herostats.Dext }\r\n                                    Hitpoints = { this.state.heroHp }\r\n                                    Damage = { this.state.heroDmg }\r\n                                />\r\n                                </Col>\r\n                                <Col className=\"m-5 justify-content-center\">\r\n                                <p><b>Name: </b>{ this.state.heroName }</p>\r\n                                <CharacterSheet \r\n                                    Strength = { this.state.herostats.Str }\r\n                                    Constitution = { this.state.herostats.Const }\r\n                                    Dexterity = { this.state.herostats.Dext }\r\n                                    Hitpoints = { this.state.heroHp }\r\n                                    Damage = { this.state.heroDmg }\r\n                                />\r\n                                </Col>\r\n                                </Row>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div >\r\n                            {/*<button onClick={ this.setherostats }>Set Attrubutes</button>*/}\r\n                        </div>\r\n                        <NameForm \r\n                            value = { this.state.value }\r\n                            NameChange = { this.heroNameChange }\r\n                            NameSubmit = { this.heroNameSubmit }\r\n                        />\r\n                    \r\n                    \r\n                    \r\n                \r\n                <AttackSection\r\n                    AC = { this.state.heroAc }\r\n                    HitAdj = { this.state.heroHitAdj }\r\n                    AttackRoll = { this.heroattackroll }\r\n                    RollTitle = \"Hero Roll for Attack\"\r\n                    DidHit = { this.state.heroDidHit }\r\n                />\r\n                \r\n                   \r\n                <div className=\"Attack-section\">    \r\n                    <div className=\"Initiative DandD_button\">\r\n                        <button onClick={ this.rollforiniative }>Roll for iniative</button>\r\n                    </div>\r\n                    <div className=\"Heroinitiative center Fsize-2\">\r\n                        <p>Hero <br/>iniative:</p>\r\n                        <p className=\"Fsize-3\">{ this.state.heroInitiative }</p>\r\n                    </div>\r\n                    <div className=\"Monsterinitiative center Fsize-2\">\r\n                        <p>Monster initiative:</p>\r\n                        <p className=\"Fsize-3\">{ this.state.monsterInitiative }</p>\r\n                    </div>  \r\n                    <div className=\"HeroHP-icon\">\r\n                        <img src=\"../static/images/herohp.png\" alt=\"icon\"/>\r\n                        <p className=\"HeroHP-text Fsize-3 center\">\r\n                            { this.state.heroHp }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"MonsterHP-icon\">\r\n                        <img src=\"../static/images/monsterhp.png\" alt=\"icon\"/>\r\n                        <p className=\"MonsterHP-text Fsize-3 center\">\r\n                            { this.state.monsterHp }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                <AttackSection\r\n                    AC = { this.state.monsterAc }\r\n                    HitAdj = { this.state.monsterHitAdj }\r\n                    AttackRoll = { this.monsterattackroll }\r\n                    RollTitle = \"Monster Roll for Attack\"\r\n                    DidHit = { this.state.monsterDidHit }\r\n                />\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default AttackSim"]},"metadata":{},"sourceType":"module"}