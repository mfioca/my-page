{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\desktop\\\\newtest\\\\my-page\\\\components\\\\sidebar\\\\sidebar.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    width: 200,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_this));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"overlayClicked\",\n    value: function overlayClicked() {\n      if (this.props.open) {\n        this.props.onOpen(false);\n      }\n    }\n  }, {\n    key: \"saveSidebarWidth\",\n    value: function saveSidebarWidth() {\n      var width = this.sidebar.offsetWidth;\n\n      if (width !== this.state.sidebarWidth) {\n        this.setState({\n          sidebarWidth: width\n        });\n      }\n    }\n  }, {\n    key: \"saveSidebarRef\",\n    value: function saveSidebarRef(node) {\n      this.sidebar = node;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n      var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n      var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n      var rootProps = {\n        className: this.props.rootClassName,\n        style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n        role: \"navigation\",\n        id: this.props.rootId\n      };\n      var hasBoxShadow = this.props.shadow && (this.props.open || this.props.docked); // sidebarStyle right/left\n\n      if (this.props.pullRight) {\n        sidebarStyle.right = 0;\n        sidebarStyle.transform = \"translateX(100%)\";\n        sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n        if (hasBoxShadow) {\n          sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n        }\n      } else {\n        sidebarStyle.left = 0;\n        sidebarStyle.transform = \"translateX(-100%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n        if (hasBoxShadow) {\n          sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n        }\n      } // show sidebar\n\n\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n      else if (this.props.open) {\n          // slide open sidebar\n          sidebarStyle.transform = \"translateX(0%)\";\n          sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n          overlayStyle.opacity = 1;\n          overlayStyle.visibility = \"visible\";\n        }\n\n      if (!this.props.transitions) {\n        sidebarStyle.transition = \"none\";\n        sidebarStyle.WebkitTransition = \"none\";\n        contentStyle.transition = \"none\";\n        overlayStyle.transition = \"none\";\n      }\n\n      return React.createElement(\"div\", _extends({}, rootProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.props.sidebarClassName,\n        style: sidebarStyle,\n        ref: this.saveSidebarRef,\n        id: this.props.sidebarId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.props.sidebar), React.createElement(\"div\", {\n        className: this.props.overlayClassName,\n        style: overlayStyle,\n        onClick: this.overlayClicked,\n        id: this.props.overlayId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.props.contentClassName,\n        style: contentStyle,\n        id: this.props.contentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.props.children));\n    }\n  }]);\n\n  return Sidebar;\n}(Component);\n\nSidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n};\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  onOpen: function onOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\nexport default Sidebar;","map":{"version":3,"sources":["C:\\Users\\Mark\\desktop\\newtest\\my-page\\components\\sidebar\\sidebar.js"],"names":["React","Component","PropTypes","defaultStyles","root","position","top","width","overflow","sidebar","zIndex","bottom","transition","WebkitTransition","willChange","overflowY","content","left","right","WebkitOverflowScrolling","overlay","opacity","visibility","backgroundColor","Sidebar","props","state","sidebarWidth","defaultSidebarWidth","overlayClicked","bind","saveSidebarRef","open","onOpen","offsetWidth","setState","node","sidebarStyle","styles","contentStyle","overlayStyle","rootProps","className","rootClassName","style","role","id","rootId","hasBoxShadow","shadow","docked","pullRight","transform","WebkitTransform","boxShadow","transitions","sidebarClassName","sidebarId","overlayClassName","overlayId","contentClassName","contentId","children","propTypes","isRequired","shape","object","string","bool","onSetOpen","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst defaultStyles = {\n  root: {\n  position: \"absolute\",\n\ttop: 0,\n\twidth: 200,\n\toverflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n};\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n    };\n\n    this.overlayClicked = this.overlayClicked.bind(this);\n    this.saveSidebarRef = this.saveSidebarRef.bind(this);\n  }\n\n  overlayClicked() {\n    if (this.props.open) {\n      this.props.onOpen(false);\n    }\n  }\n\n  saveSidebarWidth() {\n    const width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({ sidebarWidth: width });\n    }\n  }\n\n  saveSidebarRef(node) {\n    this.sidebar = node;\n  }\n\n\n  render() {\n    const sidebarStyle = {\n      ...defaultStyles.sidebar,\n      ...this.props.styles.sidebar\n    };\n    const contentStyle = {\n      ...defaultStyles.content,\n      ...this.props.styles.content\n    };\n    const overlayStyle = {\n      ...defaultStyles.overlay,\n      ...this.props.styles.overlay\n    };\n\n    const rootProps = {\n      className: this.props.rootClassName,\n      style: { ...defaultStyles.root, ...this.props.styles.root },\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n\n    const hasBoxShadow =\n      this.props.shadow && (this.props.open || this.props.docked);\n    // sidebarStyle right/left\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = `translateX(0%)`;\n        sidebarStyle.WebkitTransform = `translateX(0%)`;\n      }\n\n      // make space on the left/right side of the content for the sidebar\n      else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = `translateX(0%)`;\n      sidebarStyle.WebkitTransform = `translateX(0%)`;\n\n      // show overlay\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (!this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    return (\n      <div {...rootProps}>\n        <div\n          className={this.props.sidebarClassName}\n          style={sidebarStyle}\n          ref={this.saveSidebarRef}\n          id={this.props.sidebarId}\n        >\n          {this.props.sidebar}\n        </div>\n        <div\n          className={this.props.overlayClassName}\n          style={overlayStyle}\n          onClick={this.overlayClicked}\n          id={this.props.overlayId}\n        />\n        <div\n          className={this.props.contentClassName}\n          style={contentStyle}\n          id={this.props.contentId}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n  }),\n\n  // root component optional class\n  rootClassName: PropTypes.string,\n\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n\n  // content optional class\n  contentClassName: PropTypes.string,\n\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n\n  // root component optional id\n  rootId: PropTypes.string,\n\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n\n  // content optional id\n  contentId: PropTypes.string,\n\n  // overlay optional id\n  overlayId: PropTypes.string\n};\n\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  onOpen: () => {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}