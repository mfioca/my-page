{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\test_items\\\\jsonsearch.js\";\nimport React, { Component } from 'react';\nimport { createFilter } from './Filter';\nimport { createSorter } from './Sort'; //import data from './something.json';\n\nvar data = require('./something.json');\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: data,\n      filters: _this.props.filters,\n      sorters: _this.props.sorter\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLoad\", function (data) {\n      _this.setState({\n        data: _this.parseData(data)\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('/data.json').then(function (res) {\n        return res.json();\n      }).then(this.onLoad);\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(data) {\n      var sorter = this.state.sorter;\n\n      if (data && data.length) {\n        if (_Array$isArray(sorter) && sorter.length) {\n          data.sort(createSorter.apply(void 0, _toConsumableArray(sorter)));\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const { data } = this.state;\n      return data ? this.renderData(data) : this.renderLoading();\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData(data) {\n      if (data && data.length > 0) {\n        var filters = this.state.filters;\n\n        if (_Array$isArray(filters) && filters.length) {\n          data = data.filter(createFilter.apply(void 0, _toConsumableArray(filters)));\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, data.map(function (item) {\n          return React.createElement(\"div\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"mailto:\".concat(item.email),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, item.name), \" \", item.company);\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"No items found\");\n      }\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }]);\n\n  return List;\n}(Component);\n/*\r\nvar test1 = 'name';\r\nvar test2 = 'company';\r\n\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option1: test1,\r\n      option2: test2,\r\n    };\r\n  \r\n  this.state = {\r\n    data,\r\n    \r\n    sorter: this.props.sorter\r\n  };\r\n}\r\n\r\n  static defaultProps = {\r\n    sorter: [{\r\n      property: test1\r\n    }, {\r\n      property: test2\r\n    }]\r\n  };\r\n  \r\n\r\n\r\n  componentDidMount () {\r\n    \r\n    fetch(`/data.json`)\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  \r\n\r\n  render () {\r\n    \r\n     const  {sorter}  = this.state;\r\n  \r\n      if (data && data.length > 0) {\r\n        if (Array.isArray(sorter) && sorter.length) {\r\n          data.sort(createSorter(...sorter));\r\n        }\r\n      }\r\n  \r\n      return (\r\n        \r\n        <div>\r\n                    \r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                {item.id} <br />\r\n                {item.company}\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n        \r\n      );\r\n    } \r\n    }\r\n*/\n\n\n_defineProperty(List, \"defaultProps\", {\n  filters: [{\n    property: 'name',\n    value: ''\n  }, {\n    property: 'company',\n    value: ''\n  }],\n  sorter: [{\n    property: 'company'\n  }, {\n    property: 'name'\n  }]\n});\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\test_items\\jsonsearch.js"],"names":["React","Component","createFilter","createSorter","data","require","List","filters","props","sorters","sorter","setState","parseData","fetch","then","res","json","onLoad","state","length","sort","renderData","renderLoading","filter","map","item","id","email","name","company","property","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { createFilter } from './Filter';\r\nimport { createSorter } from './Sort';\r\n//import data from './something.json';\r\n\r\nvar data = require('./something.json');\r\n\r\nclass List extends Component {\r\n  state = {\r\n    data,\r\n    filters: this.props.filters,\r\n    sorters: this.props.sorter\r\n  }\r\n\r\n  static defaultProps = {\r\n    filters: [{\r\n      property: 'name',\r\n      value: ''\r\n    }, {\r\n      property: 'company',\r\n      value: ''\r\n    }],\r\n\r\n    sorter: [{\r\n      property: 'company'\r\n    }, {\r\n      property: 'name'\r\n    }]\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('/data.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  parseData (data) {\r\n    const { sorter } = this.state;\r\n\r\n    if (data && data.length) {\r\n      if (Array.isArray(sorter) && sorter.length) {\r\n        data.sort(createSorter(...sorter));\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  onLoad = (data) => {\r\n    this.setState({\r\n      data: this.parseData(data)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    //const { data } = this.state;\r\n\r\n    return data ?\r\n      this.renderData(data) :\r\n      this.renderLoading();\r\n  }\r\n\r\n  renderData (data) {\r\n    if (data && data.length > 0) {\r\n      const { filters } = this.state;\r\n\r\n      if (Array.isArray(filters) && filters.length) {\r\n        data = data.filter(createFilter(...filters));\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>;\r\n    }\r\n  }\r\n\r\n  renderLoading () {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n/*\r\nvar test1 = 'name';\r\nvar test2 = 'company';\r\n\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option1: test1,\r\n      option2: test2,\r\n    };\r\n  \r\n  this.state = {\r\n    data,\r\n    \r\n    sorter: this.props.sorter\r\n  };\r\n}\r\n\r\n  static defaultProps = {\r\n    sorter: [{\r\n      property: test1\r\n    }, {\r\n      property: test2\r\n    }]\r\n  };\r\n  \r\n\r\n\r\n  componentDidMount () {\r\n    \r\n    fetch(`/data.json`)\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  \r\n\r\n  render () {\r\n    \r\n     const  {sorter}  = this.state;\r\n  \r\n      if (data && data.length > 0) {\r\n        if (Array.isArray(sorter) && sorter.length) {\r\n          data.sort(createSorter(...sorter));\r\n        }\r\n      }\r\n  \r\n      return (\r\n        \r\n        <div>\r\n                    \r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                {item.id} <br />\r\n                {item.company}\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n        \r\n      );\r\n    } \r\n    }\r\n*/\r\n  \r\nexport default List;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}