{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\attacksim.js\";\nimport React from 'react';\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj, setherostats, heroattackroll, heroAttackTurn } from './herofunctions';\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj, setmonsterstats, monsterattackroll, monsterAttackTurn } from './monsterfunctions';\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../customComponents';\nimport { Row, Col, Button } from 'reactstrap';\n\nfunction setstats() {\n  var test = hero;\n  var test2 = test.stats; //performs a 1-20 roll for every item in the \"herostats\" object/state\n\n  for (var Stat in this.state[test2]) {\n    this.state.test2[Stat] = Math.floor(Math.random() * 20 + 1);\n  }\n\n  ;\n  this.setState({\n    //sets adjusted items based on herostats numbers in the set..adj functions\n    heroadjusted: {\n      Hp: this.state.herobase.Hp + this.SetheroConstAdj(),\n      Ac: this.state.herobase.ArmorClass + this.SetheroacAdj(),\n      Dmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\n      HitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj()\n    }\n  });\n}\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    _this.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroadjusted: {\n        Hp: 0,\n        Ac: 0,\n        Dmg: 0,\n        HitAdj: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsteradjusted: {\n        Hp: 0,\n        Ac: 0,\n        Dmg: 0,\n        HitAdj: 0\n      },\n      heroNametext: '',\n      heroName: 'Hero',\n      heroInitiative: 0,\n      heroAttackVisible: false,\n      heroRoll: 0,\n      heroDidHit: '',\n      monsterNametext: '',\n      monsterName: 'Monster',\n      monsterInitiative: 0,\n      monsterAttackVisible: false,\n      monsterRoll: 0,\n      monsterDidHit: ''\n    }; //Hero bind function statements\n\n    _this.setherostats = setstats.bind(_assertThisInitialized(_this));\n    _this.SetheroConstAdj = SetheroConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroacAdj = SetheroacAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroDmgAdj = SetheroDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroHitAdj = SetheroHitAdj.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    _this.heroNameSubmit = _this.heroNameSubmit.bind(_assertThisInitialized(_this));\n    _this.heroattackroll = heroattackroll.bind(_assertThisInitialized(_this));\n    _this.heroAttackTurn = heroAttackTurn.bind(_assertThisInitialized(_this)); //monster bind function statements\n\n    _this.setmonsterstats = setmonsterstats.bind(_assertThisInitialized(_this));\n    _this.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    _this.monsterNameSubmit = _this.monsterNameSubmit.bind(_assertThisInitialized(_this));\n    _this.monsterattackroll = monsterattackroll.bind(_assertThisInitialized(_this));\n    _this.monsterAttackTurn = monsterAttackTurn.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"heroNameSubmit\",\n    value: function heroNameSubmit(event) {\n      this.setState({\n        heroName: this.state.heroNametext\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterNametext: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameSubmit\",\n    value: function monsterNameSubmit(event) {\n      this.setState({\n        monsterName: this.state.monsterNametext\n      });\n    } //initiative shows what character attacks first\n\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      var heroinit = Math.floor(Math.random() * 10 + 1);\n      var monsterinit = Math.floor(Math.random() * 10 + 1);\n\n      if (heroinit < monsterinit) {\n        this.setState({\n          heroInitiative: 'First',\n          monsterInitiative: 'Second',\n          heroAttackVisible: true //displays attack button\n\n        });\n      } else if (heroinit > monsterinit) {\n        this.setState({\n          monsterInitiative: 'First',\n          heroInitiative: 'Second',\n          monsterAttackVisible: true //displays attack button\n\n        });\n      } else {\n        this.setState({\n          heroInitiative: 'ReRoll',\n          monsterInitiative: 'ReRoll',\n          //hides attck buttons due to reroll\n          heroAttackVisible: false,\n          monsterAttackVisible: false\n        });\n      }\n\n      ; //clears out the hit/miss comments and roll result since it is a new round.\n\n      this.setState({\n        heroDidHit: '',\n        monsterDidHit: '',\n        heroRoll: 0,\n        monsterRoll: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(CenterFlexWrapDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Hero Name: \"), React.createElement(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.state.heroName))), React.createElement(CharacterSheet, {\n        Strength: this.state.herostats.Str,\n        Constitution: this.state.herostats.Const,\n        Dexterity: this.state.herostats.Dext,\n        Hitpoints: this.state.heroadjusted.Hp,\n        Damage: this.state.heroadjusted.Dmg,\n        ImgUrl: \"../static/images/hero.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.heroNameChange,\n        NameSubmit: this.heroNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"m-1 bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Monster Name: \"), React.createElement(\"span\", {\n        className: \"text-info ml-5 h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.state.monsterName)), React.createElement(CharacterSheet, {\n        Strength: this.state.monsterstats.Str,\n        Constitution: this.state.monsterstats.Const,\n        Dexterity: this.state.monsterstats.Dext,\n        Hitpoints: this.state.monsteradjusted.Hp,\n        Damage: this.state.monsteradjusted.Dmg,\n        ImgUrl: \"../static/images/monster.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setmonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(NameForm, {\n        value: this.state.value,\n        NameChange: this.monsterNameChange,\n        NameSubmit: this.monsterNameSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })))), React.createElement(CenterFlexWrapDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark m-1 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.heroadjusted.Ac,\n        HitAdj: this.state.heroadjusted.HitAdj,\n        AttackRoll: this.heroattackroll,\n        RollTitle: \"Hero Roll for Attack\",\n        Roll: this.state.heroRoll,\n        DidHit: this.state.heroDidHit,\n        NextTurn: this.heroAttackTurn,\n        AttackTurn: this.state.heroAttackVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"bg-dark m-1 mb-2 col\",\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        className: \"m-5 w-50\",\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Roll for iniative\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(AttackStatusDisplay, {\n        Name: this.state.heroName,\n        Initiative: this.state.heroInitiative,\n        HP: this.state.heroadjusted.Hp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(AttackStatusDisplay, {\n        Name: this.state.monsterName,\n        Initiative: this.state.monsterInitiative,\n        HP: this.state.monsteradjusted.Hp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"bg-dark m-1 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(AttackSection, {\n        AC: this.state.monsteradjusted.Ac,\n        HitAdj: this.state.monsteradjusted.HitAdj,\n        AttackRoll: this.monsterattackroll,\n        RollTitle: \"Monster Roll for Attack\",\n        Roll: this.state.monsterRoll,\n        DidHit: this.state.monsterDidHit,\n        NextTurn: this.monsterAttackTurn,\n        AttackTurn: this.state.monsterAttackVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\attacksim.js"],"names":["React","SetheroConstAdj","SetheroHitAdj","SetheroDmgAdj","SetheroacAdj","setherostats","heroattackroll","heroAttackTurn","SetmonsterConstAdj","SetmonsterHitAdj","SetmonsterDmgAdj","SetmonsteracAdj","setmonsterstats","monsterattackroll","monsterAttackTurn","CharacterSheet","NameForm","AttackSection","CenterFlexWrapDiv","AttackStatusDisplay","Row","Col","Button","setstats","test","hero","test2","stats","Stat","state","Math","floor","random","setState","heroadjusted","Hp","herobase","Ac","ArmorClass","Dmg","Damage","HitAdj","AttackSim","props","herostats","Str","Const","Dext","monsterstats","monsterbase","monsteradjusted","heroNametext","heroName","heroInitiative","heroAttackVisible","heroRoll","heroDidHit","monsterNametext","monsterName","monsterInitiative","monsterAttackVisible","monsterRoll","monsterDidHit","bind","heroNameChange","heroNameSubmit","monsterNameChange","monsterNameSubmit","rollforiniative","event","target","value","heroinit","monsterinit","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, \r\n    SetheroacAdj, setherostats, heroattackroll, heroAttackTurn \r\n} from './herofunctions'\r\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, \r\n    SetmonsteracAdj, setmonsterstats, monsterattackroll, monsterAttackTurn\r\n} from './monsterfunctions'\r\nimport { CharacterSheet, NameForm, AttackSection, CenterFlexWrapDiv, AttackStatusDisplay } from '../customComponents'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n\r\nfunction setstats() {\r\n    var test = hero\r\n    var test2 = test.stats;\r\n    //performs a 1-20 roll for every item in the \"herostats\" object/state\r\n    for (let Stat in this.state[test2]) {\r\n        this.state.test2[Stat] = Math.floor((Math.random() * 20) + 1);\r\n    };\r\n    this.setState ({\r\n        //sets adjusted items based on herostats numbers in the set..adj functions\r\n        heroadjusted: {\r\n            Hp: this.state.herobase.Hp + this.SetheroConstAdj(),\r\n            Ac: this.state.herobase.ArmorClass + this.SetheroacAdj(),\r\n            Dmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\r\n            HitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj(),\r\n       }\r\n    });\r\n}\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            heroadjusted: {\r\n                Hp: 0,\r\n                Ac: 0,\r\n                Dmg: 0,\r\n                HitAdj: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsteradjusted: {\r\n                Hp: 0,\r\n                Ac: 0,\r\n                Dmg: 0,\r\n                HitAdj: 0\r\n            },\r\n            heroNametext: '',\r\n            heroName: 'Hero',\r\n            heroInitiative: 0,\r\n            heroAttackVisible: false,\r\n            heroRoll: 0,\r\n            heroDidHit: '',\r\n            monsterNametext: '',\r\n            monsterName: 'Monster',\r\n            monsterInitiative: 0,\r\n            monsterAttackVisible: false,\r\n            monsterRoll: 0,\r\n            monsterDidHit: '',\r\n        };\r\n\r\n        //Hero bind function statements\r\n        this.setherostats = setstats.bind(this);\r\n        this.SetheroConstAdj = SetheroConstAdj.bind(this);\r\n        this.SetheroacAdj = SetheroacAdj.bind(this);\r\n        this.SetheroDmgAdj = SetheroDmgAdj.bind(this);\r\n        this.SetheroHitAdj = SetheroHitAdj.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n        this.heroNameSubmit = this.heroNameSubmit.bind(this);\r\n        this.heroattackroll = heroattackroll.bind(this);\r\n        this.heroAttackTurn = heroAttackTurn.bind(this);\r\n        //monster bind function statements\r\n        this.setmonsterstats = setmonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n        this.monsterNameSubmit = this.monsterNameSubmit.bind(this);\r\n        this.monsterattackroll = monsterattackroll.bind(this);\r\n        this.monsterAttackTurn = monsterAttackTurn.bind(this);\r\n\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n        \r\n    }\r\n\r\n    heroNameChange(event) {\r\n            this.setState ({heroNametext : event.target.value});\r\n    }\r\n\r\n    heroNameSubmit(event) {\r\n        this.setState ({heroName: this.state.heroNametext});\r\n    }\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterNametext : event.target.value});\r\n    }\r\n\r\n    monsterNameSubmit(event) {\r\n        this.setState ({monsterName: this.state.monsterNametext});\r\n    }\r\n\r\n    //initiative shows what character attacks first\r\n    rollforiniative() {\r\n        const heroinit = Math.floor((Math.random() * 10) + 1);\r\n        const monsterinit = Math.floor((Math.random() * 10) + 1);\r\n        \r\n        if (heroinit < monsterinit) {\r\n            this.setState ({\r\n                heroInitiative: 'First',\r\n                monsterInitiative: 'Second',\r\n                heroAttackVisible: true  //displays attack button\r\n            });\r\n        } else if (heroinit > monsterinit) {\r\n            this.setState ({\r\n                monsterInitiative: 'First',\r\n                heroInitiative: 'Second',\r\n                monsterAttackVisible: true //displays attack button\r\n            }); \r\n        } else {\r\n            this.setState ({\r\n                heroInitiative: 'ReRoll',\r\n                monsterInitiative: 'ReRoll',\r\n                //hides attck buttons due to reroll\r\n                heroAttackVisible: false,  \r\n                monsterAttackVisible: false\r\n            });\r\n        };\r\n\r\n        //clears out the hit/miss comments and roll result since it is a new round.\r\n        this.setState ({\r\n            heroDidHit: '',\r\n            monsterDidHit: '',\r\n            heroRoll: 0,\r\n            monsterRoll: 0\r\n        });\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n            <div>\r\n                <CenterFlexWrapDiv> \r\n                    <Row className=\"w-100\">\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <div>\r\n                               <h5 className=\"mt-5 ml-5\"><b>Hero Name: </b>\r\n                                    <span className=\"text-info ml-5 h3\">\r\n                                        {this.state.heroName}\r\n                                    </span>\r\n                                </h5>\r\n                            </div>\r\n                            <CharacterSheet\r\n                                Strength = {this.state.herostats.Str}\r\n                                Constitution = {this.state.herostats.Const}\r\n                                Dexterity = {this.state.herostats.Dext}\r\n                                Hitpoints = {this.state.heroadjusted.Hp}\r\n                                Damage = {this.state.heroadjusted.Dmg}\r\n                                ImgUrl= \"../static/images/hero.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setstats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm\r\n                                value = {this.state.value}\r\n                                NameChange = {this.heroNameChange}\r\n                                NameSubmit = {this.heroNameSubmit}\r\n                            />\r\n                        </Col>\r\n                        <Col className=\"m-1 bg-dark text-white\">\r\n                            <h5 className=\"mt-5 ml-5\"><b>Monster Name: </b>\r\n                                <span className=\"text-info ml-5 h3\">\r\n                                    {this.state.monsterName}\r\n                                </span>\r\n                            </h5>\r\n                            <CharacterSheet\r\n                                Strength = {this.state.monsterstats.Str}\r\n                                Constitution = {this.state.monsterstats.Const}\r\n                                Dexterity = {this.state.monsterstats.Dext}\r\n                                Hitpoints = {this.state.monsteradjusted.Hp}\r\n                                Damage = {this.state.monsteradjusted.Dmg}\r\n                                ImgUrl = \"../static/images/monster.png\"\r\n                            />\r\n                            <div className=\"text-center m-3\">\r\n                                <Button onClick={this.setmonsterstats}>Set Attrubutes</Button>\r\n                            </div>\r\n                            <NameForm \r\n                                value = {this.state.value}\r\n                                NameChange = {this.monsterNameChange}\r\n                                NameSubmit = {this.monsterNameSubmit}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </CenterFlexWrapDiv>\r\n                <CenterFlexWrapDiv>\r\n                    <div  className=\"bg-dark m-1 mb-2\">\r\n                        <AttackSection\r\n                            AC = {this.state.heroadjusted.Ac}\r\n                            HitAdj = {this.state.heroadjusted.HitAdj}\r\n                            AttackRoll = {this.heroattackroll}\r\n                            RollTitle = \"Hero Roll for Attack\"\r\n                            Roll = {this.state.heroRoll}\r\n                            DidHit = {this.state.heroDidHit}\r\n                            NextTurn = {this.heroAttackTurn}\r\n                            AttackTurn = {this.state.heroAttackVisible}\r\n                        /> \r\n                    </div>\r\n                    <div className=\"bg-dark m-1 mb-2 col\" xs=\"3\">\r\n                        <div className=\"text-center text-white\">\r\n                            <Button \r\n                                type=\"button\" \r\n                                className=\"m-5 w-50\"  \r\n                                onClick={this.rollforiniative}>\r\n                                Roll for iniative\r\n                            </Button>\r\n                            <Row>\r\n                                <Col className=\"w-50\">\r\n                                    <AttackStatusDisplay\r\n                                        Name = {this.state.heroName}\r\n                                        Initiative = {this.state.heroInitiative}\r\n                                        HP = {this.state.heroadjusted.Hp}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <AttackStatusDisplay\r\n                                        Name = {this.state.monsterName}\r\n                                        Initiative = {this.state.monsterInitiative}\r\n                                        HP = {this.state.monsteradjusted.Hp}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-dark m-1 mb-2\">\r\n                        <AttackSection\r\n                            AC = {this.state.monsteradjusted.Ac}\r\n                            HitAdj = {this.state.monsteradjusted.HitAdj}\r\n                            AttackRoll = {this.monsterattackroll}\r\n                            RollTitle = \"Monster Roll for Attack\"\r\n                            Roll = {this.state.monsterRoll}\r\n                            DidHit = {this.state.monsterDidHit}\r\n                            NextTurn = {this.monsterAttackTurn}\r\n                            AttackTurn = {this.state.monsterAttackVisible}\r\n                        />\r\n                    </div>\r\n                </CenterFlexWrapDiv>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AttackSim;\r\n\r\n"]},"metadata":{},"sourceType":"module"}