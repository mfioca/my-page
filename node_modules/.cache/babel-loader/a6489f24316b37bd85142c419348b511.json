{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\github\\\\my-page\\\\pages\\\\tvpage.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport Layout from '../components/layout';\nimport { TvpageSearchBar } from './jsxstyles';\nimport Layout2 from './tv_info/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar noimage = '/static/images/no-img.png';\nvar Search = '';\n\nvar Searchbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n\n  function Searchbar(props) {\n    var _this;\n\n    _classCallCheck(this, Searchbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searchbar).call(this, props));\n    _this.state = {\n      value: ''\n    };\n    _this.enterSearch = _this.enterSearch.bind(_assertThisInitialized(_this));\n    return _this;\n  } //handles setting state of search value to render tvmaze json api\n  //sets variable search value to state\n\n\n  _createClass(Searchbar, [{\n    key: \"enterSearch\",\n    value: function enterSearch(event) {\n      this.setState({\n        value: event.target.value\n      });\n      Search = event.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Form, {\n        style: TvpageSearchBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Label, {\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"TV Show search by Name:\"), React.createElement(Input, {\n        className: \"w-50\",\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.enterSearch //Prevent enter key submit\n        ,\n        onKeyPress: function onKeyPress(event) {\n          if (event.which === 13\n          /* Enter */\n          ) {\n              event.preventDefault();\n            }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"ml-4 btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/tvpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Click Submit\")))));\n    }\n  }]);\n\n  return Searchbar;\n}(React.Component);\n\nvar TvPage = function TvPage(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"the below content has been imported from \", React.createElement(\"a\", {\n    href: \"https://www.tvmaze.com\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"TVmaze.com\")), React.createElement(Searchbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Layout2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-3150414163\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Results for: \", Search), React.createElement(\"div\", {\n    className: \"jsx-3150414163\" + \" \" + \"tvbox Fsize-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"div\", {\n      key: show.id,\n      className: \"jsx-3150414163\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"jsx-3150414163\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/tvpost?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"jsx-3150414163\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, show.name, React.createElement(\"br\", {\n      className: \"jsx-3150414163\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      className: \"jsx-3150414163\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: show.image ? show.image.medium : noimage,\n      alt: \"no image\",\n      className: \"jsx-3150414163\" + \" \" + \"tvbox-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })))));\n  })), React.createElement(_JSXStyle, {\n    id: \"3150414163\",\n    __self: this\n  }, \"a.jsx-3150414163:link,a.jsx-3150414163:visited{font-size:14px;color:#bbb8b8;}.jsx-3150414163,a.jsx-3150414163:hover{color:black;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFya1xcRG9jdW1lbnRzXFxnaXRodWJcXG15LXBhZ2VcXHBhZ2VzXFx0dnBhZ2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0Z1QixBQUc0QixBQUlMLFlBRWQsR0FMa0IsY0FDbEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxNYXJrXFxEb2N1bWVudHNcXGdpdGh1YlxcbXktcGFnZVxccGFnZXNcXHR2cGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgQ29sLCBCdXR0b24sIEZvcm0sIEZvcm1Hcm91cCwgTGFiZWwsIElucHV0LCBGb3JtVGV4dCB9IGZyb20gJ3JlYWN0c3RyYXAnO1xyXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvbGF5b3V0J1xyXG5pbXBvcnQgeyBUdnBhZ2VTZWFyY2hCYXIgfSBmcm9tICcuL2pzeHN0eWxlcydcclxuaW1wb3J0IExheW91dDIgZnJvbSAnLi90dl9pbmZvL015TGF5b3V0LmpzJ1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXHJcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXHJcblxyXG5cclxuXHJcbmNvbnN0IG5vaW1hZ2UgPSAnL3N0YXRpYy9pbWFnZXMvbm8taW1nLnBuZyc7XHJcbnZhciBTZWFyY2ggPSAnJztcclxuXHJcblxyXG5cclxuY2xhc3MgU2VhcmNoYmFyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHt2YWx1ZTogJyd9O1xyXG4gICAgdGhpcy5lbnRlclNlYXJjaCA9IHRoaXMuZW50ZXJTZWFyY2guYmluZCh0aGlzKTtcclxuICB9XHJcbiAgLy9oYW5kbGVzIHNldHRpbmcgc3RhdGUgb2Ygc2VhcmNoIHZhbHVlIHRvIHJlbmRlciB0dm1hemUganNvbiBhcGlcclxuICAvL3NldHMgdmFyaWFibGUgc2VhcmNoIHZhbHVlIHRvIHN0YXRlXHJcbiAgZW50ZXJTZWFyY2goZXZlbnQpIHtcclxuICAgIHRoaXMuc2V0U3RhdGUoe3ZhbHVlOiBldmVudC50YXJnZXQudmFsdWV9KTtcclxuICAgIFNlYXJjaCA9IChldmVudC50YXJnZXQudmFsdWUpO1xyXG4gIH1cclxuXHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cclxuICAgICAgICB7LyogY3VycmVudGwgZG9lcyBub3QgaGF2ZSBvbiBzdWJtaXQgb3IgZW50ZXJ5IGtleSBmdW5jdGlvbiB0byBwdXNoIGxpbmsgdG8gXHJcbiAgICAgICAgICBwYWdlIGZvciBhcGkgY2FsbCB0byByZW5kZXIqL31cclxuICAgICAgICA8Rm9ybSBzdHlsZT17VHZwYWdlU2VhcmNoQmFyfT5cclxuICAgICAgICAgIDxGb3JtR3JvdXAgcm93PlxyXG4gICAgICAgICAgICA8TGFiZWwgc209ezJ9PlRWIFNob3cgc2VhcmNoIGJ5IE5hbWU6PC9MYWJlbD5cclxuICAgICAgICAgICAgPElucHV0IGNsYXNzTmFtZT1cInctNTBcIlxyXG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS52YWx1ZX0gXHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuZW50ZXJTZWFyY2h9IFxyXG4gICAgICAgICAgICAgIC8vUHJldmVudCBlbnRlciBrZXkgc3VibWl0XHJcbiAgICAgICAgICAgICAgb25LZXlQcmVzcz17ZXZlbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50LndoaWNoID09PSAxMyAvKiBFbnRlciAqLykge1xyXG4gICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIHsvKmR1ZSB0byBnZXQgaW5pdGlhbCBwcm9wcyBhc3luYyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZCBvbiBwYWdlIGxvYWRcclxuICAgICAgICAgICAgZGlzZ3Vpc2VkIGEgcGFnZSBsaW5rIGFzIGEgc2VhcmNoIGJ1dHRvbiB0byBjYWxsIHZhbHVlIG9mIHNlYXJjaCBmb3IgXHJcbiAgICAgICAgICAgIHRoZSBhd2FpdCBmZXRjaCBhcGkgY2FsbC4qL31cclxuICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwibWwtNCBidG4tc2Vjb25kYXJ5XCI+XHJcbiAgICAgICAgICAgIDxhIGhyZWY9XCIvdHZwYWdlXCI+Q2xpY2sgU3VibWl0PC9hPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgPC9Gb3JtR3JvdXA+XHJcbiAgICAgICAgPC9Gb3JtPlxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuY29uc3QgVHZQYWdlID0gcHJvcHMgPT4gKFxyXG4gIDxMYXlvdXQ+XHJcbiAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj50aGUgYmVsb3cgY29udGVudCBoYXMgYmVlbiBpbXBvcnRlZCBmcm9tIDxhIGhyZWY9XCJodHRwczovL3d3dy50dm1hemUuY29tXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPlRWbWF6ZS5jb208L2E+PC9oMT5cclxuICAgICA8U2VhcmNoYmFyIC8+XHJcbiAgICAgPExheW91dDI+XHJcbiAgICAgICAgPGgxPlJlc3VsdHMgZm9yOiB7U2VhcmNofTwvaDE+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInR2Ym94IEZzaXplLTJcIj5cclxuICAgICAgICAgICAgey8qU2VhcmNoIHJlc3VsdHMgZGlzcGxheSBpbmx1Y2luZyBzaG93IG5hbWUgYW5kIGltYWdlLlxyXG4gICAgICAgICAgICAgIHVzZXMgbWFwIGtleSB0byByZW5kZXIgYWxsIHJlc3VsdHMuICovfVxyXG4gICAgICAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxyXG4gICAgICAgICAgICAgIDxkaXYga2V5PXtzaG93LmlkfT5cclxuICAgICAgICAgICAgICAgIDxwPlxyXG4gICAgICAgICAgICAgICAgIDxMaW5rIGFzPXtgL3AvJHtzaG93LmlkfWB9IGhyZWY9e2AvdHZwb3N0P2lkPSR7c2hvdy5pZH1gfT5cclxuICAgICAgICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08YnIgLz48YnIgLz48aW1nIGNsYXNzTmFtZT1cInR2Ym94LWltZ1wiIHNyYz17c2hvdy5pbWFnZSA/IHNob3cuaW1hZ2UubWVkaXVtIDogbm9pbWFnZX0gYWx0PVwibm8gaW1hZ2VcIi8+PC9hPlxyXG4gICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8c3R5bGUganN4PiB7YFxyXG4gICAgICAgIGE6bGluaywgYTp2aXNpdGVkIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICBjb2xvcjogI2JiYjhiODtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGE6aG92ZXIge1xyXG4gICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgYH1cclxuICAgIDwvc3R5bGU+XHJcbiAgICAgIDwvTGF5b3V0Mj5cclxuICA8L0xheW91dD5cclxuKTtcclxuXHJcblR2UGFnZS5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcclxuICAvL3R2bWF6ZSBzZWFyY2ggYXBpIGxpbmsuICBwdWxscyB0aGUganNvbiBpbmZvIGJhc2VkIG9uIHRoZSBzZWFyY2ggdmFyaWFibGVcclxuICAvL2VudGVyZWQgYnkgdXNlciBpbiB0aGUgc2VhcmNoIGZpZWxkLlxyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPScgKyBTZWFyY2gpO1xyXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG5cclxuICBjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFR2UGFnZTsiXX0= */\\n/*@ sourceURL=C:\\\\Users\\\\Mark\\\\Documents\\\\github\\\\my-page\\\\pages\\\\tvpage.js */\")));\n};\n\nTvPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=' + Search);\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default TvPage;","map":{"version":3,"sources":["C:\\Users\\Mark\\Documents\\github\\my-page\\pages\\tvpage.js"],"names":["React","Col","Button","Form","FormGroup","Label","Input","FormText","Layout","TvpageSearchBar","Layout2","Link","fetch","noimage","Search","Searchbar","props","state","value","enterSearch","bind","event","setState","target","which","preventDefault","Component","TvPage","shows","map","show","id","name","image","medium","getInitialProps","res","json","data","console","log","length","entry"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport Layout from '../components/layout'\r\nimport { TvpageSearchBar } from './jsxstyles'\r\nimport Layout2 from './tv_info/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\n\r\n\r\nconst noimage = '/static/images/no-img.png';\r\nvar Search = '';\r\n\r\n\r\n\r\nclass Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.enterSearch = this.enterSearch.bind(this);\r\n  }\r\n  //handles setting state of search value to render tvmaze json api\r\n  //sets variable search value to state\r\n  enterSearch(event) {\r\n    this.setState({value: event.target.value});\r\n    Search = (event.target.value);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        {/* currentl does not have on submit or entery key function to push link to \r\n          page for api call to render*/}\r\n        <Form style={TvpageSearchBar}>\r\n          <FormGroup row>\r\n            <Label sm={2}>TV Show search by Name:</Label>\r\n            <Input className=\"w-50\"\r\n              type=\"text\"\r\n              value={this.state.value} \r\n              onChange={this.enterSearch} \r\n              //Prevent enter key submit\r\n              onKeyPress={event => {\r\n                if (event.which === 13 /* Enter */) {\r\n                  event.preventDefault();\r\n                }\r\n              }}\r\n            />\r\n            {/*due to get initial props async function is only called on page load\r\n            disguised a page link as a search button to call value of search for \r\n            the await fetch api call.*/}\r\n          <Button className=\"ml-4 btn-secondary\">\r\n            <a href=\"/tvpage\">Click Submit</a>\r\n            \r\n          </Button>\r\n          </FormGroup>\r\n        </Form>\r\n        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst TvPage = props => (\r\n  <Layout>\r\n    <h1 className=\"text-center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n     <Searchbar />\r\n     <Layout2>\r\n        <h1>Results for: {Search}</h1>\r\n          <div className=\"tvbox Fsize-2\">\r\n            {/*Search results display inlucing show name and image.\r\n              uses map key to render all results. */}\r\n            {props.shows.map(show => (\r\n              <div key={show.id}>\r\n                <p>\r\n                 <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}<br /><br /><img className=\"tvbox-img\" src={show.image ? show.image.medium : noimage} alt=\"no image\"/></a>\r\n                </Link>\r\n                </p>\r\n              </div>\r\n              ))}\r\n          </div>\r\n          <style jsx> {`\r\n        a:link, a:visited {\r\n            font-size: 14px;\r\n            color: #bbb8b8;\r\n        },\r\n        a:hover {\r\n          color: black;\r\n          \r\n        }\r\n    `}\r\n    </style>\r\n      </Layout2>\r\n  </Layout>\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  //tvmaze search api link.  pulls the json info based on the search variable\r\n  //entered by user in the search field.\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + Search);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;"]},"metadata":{},"sourceType":"module"}