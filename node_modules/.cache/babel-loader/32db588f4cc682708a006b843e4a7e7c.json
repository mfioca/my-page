{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\tvpage.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport CSS from '../components/style.css';\nimport Layout2 from './tv_info/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar API = 'https://api.tvmaze.com/search/shows?q=';\nvar DEFAULT_QUERY = 'Batman';\n\nvar TvPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TvPage, _Component);\n\n  function TvPage(props) {\n    var _this;\n\n    _classCallCheck(this, TvPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TvPage).call(this, props));\n    _this.state = {\n      show: []\n    };\n    return _this;\n  }\n\n  _createClass(TvPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(API + DEFAULT_QUERY).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          show: data.hits\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const { hits } = this.state;\n      //const shows = data.map(entry => entry.show);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Batman TV Shows\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, props.shows.map(function (show) {\n        return React.createElement(\"li\", {\n          key: show.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Link, {\n          as: \"/p/\".concat(show.id),\n          href: \"/tvpost?id=\".concat(show.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, show.name)));\n      })));\n    }\n  }]);\n\n  return TvPage;\n}(Component); //shows: data.map(entry => entry.show)\n\n/*\r\nvar test = '';\r\n\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n  stupid(event) {\r\n    test = this.state.query;\r\n    ReactDOM.render(\r\n      <TvPage />);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n          \r\n      );\r\n  }\r\n} \r\n\r\nconst TvPage = props => (\r\n  <Layout>\r\n    <SearchBar />\r\n      <Layout2>\r\n        <h1>Batman TV Shows</h1>\r\n          <ul>\r\n            {props.shows.map(show => (\r\n              <li key={show.id}>\r\n                <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}</a>\r\n                </Link>\r\n              </li>\r\n              ))}\r\n          </ul>\r\n      </Layout2>\r\n  </Layout>,\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  \r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;\r\n\r\n\r\n/*class SearchBar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n  stupid(event) {\r\n    test = this.state.query;\r\n    ReactDOM.render(\r\n      <TvPage />);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n          \r\n      );\r\n  }\r\n} \r\n\r\n//const TvPage = props => (\r\nclass TvPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getInitialProps = this.getInitialProps.bind(this);\r\n\r\n    this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n    getInitialProps = async function() {\r\n    \r\n      //const Search = test;\r\n      \r\n      const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n      const data = await res.json();\r\n    \r\n      console.log(`Show data fetched. Count: ${data.length}`);\r\n    \r\n      return {\r\n        shows: data.map(entry => entry.show)\r\n      };\r\n    };\r\n\r\n  }\r\n  render() {\r\n    return (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n      <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst TvPage = props => (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n        <SearchBar />\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n  ); \r\n\r\n  \r\n  TvPage.getInitialProps = async function() {\r\n    \r\n    //const Search = test;\r\n    \r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n  };\r\n  \r\n*/\n\n\nexport default TvPage;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\tvpage.js"],"names":["React","Component","Layout","CSS","Layout2","Link","fetch","API","DEFAULT_QUERY","TvPage","props","state","show","then","response","json","data","setState","hits","shows","map","id","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,GAAG,GAAG,wCAAZ;AACA,IAAMC,aAAa,GAAG,QAAtB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAAA;;AAClBN,MAAAA,KAAK,CAACC,GAAG,GAAGC,aAAP,CAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEI,IAAI,CAACE;AAAb,SAAd,CAAJ;AAAA,OAFZ;AAGD;;;6BAEQ;AACP;AACA;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgB,UAAAR,IAAI;AAAA,eACnB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACS,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,eAAQT,IAAI,CAACS,EAAb,CAAR;AAA2B,UAAA,IAAI,uBAAgBT,IAAI,CAACS,EAArB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIT,IAAI,CAACU,IAAT,CADF,CADF,CADmB;AAAA,OAApB,CADH,CAFJ,CADF;AAcD;;;;EAhCkBrB,S,GAmCrB;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNE,eAAeQ,MAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport CSS from '../components/style.css'\r\nimport Layout2 from './tv_info/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst API = 'https://api.tvmaze.com/search/shows?q=';\r\nconst DEFAULT_QUERY = 'Batman';\r\n\r\nclass TvPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(API + DEFAULT_QUERY)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ show: data.hits }));\r\n  }\r\n\r\n  render() {\r\n    //const { hits } = this.state;\r\n    //const shows = data.map(entry => entry.show);\r\n    return (\r\n      <div>\r\n      <h1>Batman TV Shows</h1>\r\n          <ul>\r\n            {props.shows.map(show => (\r\n              <li key={show.id}>\r\n                <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}</a>\r\n                </Link>\r\n              </li>\r\n              ))}\r\n          </ul>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\n//shows: data.map(entry => entry.show)\r\n/*\r\nvar test = '';\r\n\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n  stupid(event) {\r\n    test = this.state.query;\r\n    ReactDOM.render(\r\n      <TvPage />);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n          \r\n      );\r\n  }\r\n} \r\n\r\nconst TvPage = props => (\r\n  <Layout>\r\n    <SearchBar />\r\n      <Layout2>\r\n        <h1>Batman TV Shows</h1>\r\n          <ul>\r\n            {props.shows.map(show => (\r\n              <li key={show.id}>\r\n                <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}</a>\r\n                </Link>\r\n              </li>\r\n              ))}\r\n          </ul>\r\n      </Layout2>\r\n  </Layout>,\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  \r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;\r\n\r\n\r\n/*class SearchBar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n  stupid(event) {\r\n    test = this.state.query;\r\n    ReactDOM.render(\r\n      <TvPage />);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n          \r\n      );\r\n  }\r\n} \r\n\r\n//const TvPage = props => (\r\nclass TvPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getInitialProps = this.getInitialProps.bind(this);\r\n\r\n    this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n    getInitialProps = async function() {\r\n    \r\n      //const Search = test;\r\n      \r\n      const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n      const data = await res.json();\r\n    \r\n      console.log(`Show data fetched. Count: ${data.length}`);\r\n    \r\n      return {\r\n        shows: data.map(entry => entry.show)\r\n      };\r\n    };\r\n\r\n  }\r\n  render() {\r\n    return (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n      <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst TvPage = props => (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n        <SearchBar />\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n  ); \r\n\r\n  \r\n  TvPage.getInitialProps = async function() {\r\n    \r\n    //const Search = test;\r\n    \r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n  };\r\n  \r\n*/\r\n  \r\n  \r\n  export default TvPage;"]},"metadata":{},"sourceType":"module"}