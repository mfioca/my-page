{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { Form, Label, Input } from 'reactstrap';\nimport Layout from '../components/layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { NewTabLink, LeftFlexWrapDiv, TvMazePage, TvMazeCard } from './customComponents';\nvar noimage = '/static/images/no-img.png';\nvar Search = '';\n\nvar Searchbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n\n  function Searchbar(props) {\n    var _this;\n\n    _classCallCheck(this, Searchbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searchbar).call(this, props));\n    _this.state = {\n      value: ''\n    };\n    _this.enterSearch = _this.enterSearch.bind(_assertThisInitialized(_this));\n    return _this;\n  } //handles setting state of search value to render tvmaze json api\n  //sets variable search value to state\n\n\n  _createClass(Searchbar, [{\n    key: \"enterSearch\",\n    value: function enterSearch(event) {\n      this.setState({\n        value: event.target.value\n      });\n      Search = event.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        inline: true,\n        className: \"justify-content-center\"\n      }, React.createElement(Label, {\n        className: \"mr-sm-2\"\n      }, \"TV Show search by Name:\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.enterSearch //Prevent enter key submit\n        ,\n        onKeyPress: function onKeyPress(event) {\n          if (event.which === 13\n          /* Enter */\n          ) {\n              event.preventDefault();\n            }\n        }\n      }), React.createElement(Link, {\n        href: \"/tvpage\"\n      }, React.createElement(\"a\", {\n        className: \"btn btn-dark ml-4\"\n      }, \"Click Submit\")));\n    }\n  }]);\n\n  return Searchbar;\n}(React.Component);\n\nvar TvPage = function TvPage(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", {\n    className: \"text-center\"\n  }, \"the below content has been imported from\", React.createElement(NewTabLink, {\n    Link: \"https://www.tvmaze.com\",\n    Title: \"TvMaze.com\"\n  }, \"Tvmaze.com\")), React.createElement(Searchbar, null), React.createElement(TvMazePage, null, React.createElement(\"h1\", null, \"Results for: \", Search), React.createElement(LeftFlexWrapDiv, null, props.shows.map(function (show) {\n    return React.createElement(\"div\", {\n      className: \"p-3\",\n      key: show.id\n    }, React.createElement(TvMazeCard, {\n      CardStyle: {\n        width: '250px'\n      },\n      Title: React.createElement(\"p\", null, React.createElement(\"b\", null, React.createElement(\"u\", null, show.name))),\n      ImgSrc: show.image ? show.image.medium : noimage,\n      ImgAlt: \"image\",\n      Link: React.createElement(Link, {\n        href: \"/tvpost?id=\".concat(show.id)\n      }, React.createElement(\"a\", {\n        className: \"btn btn-dark w-100\"\n      }, \"Select\"))\n    }));\n  }))));\n};\n\nTvPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=' + Search);\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default TvPage;\n/*\r\n<Card style={{width: '250px'}}>\r\n              <CardTitle \r\n                className=\"my-4 text-center w-100 px-2\" \r\n                style={TvpageStyle.Title}>\r\n                  <b><u>{show.name}</u></b>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <CardImg\r\n                  style={TvpageStyle.Image} \r\n                  src={show.image ? show.image.medium : noimage} \r\n                  alt=\"image\" \r\n                />\r\n                <Link href={`/tvpost?id=${show.id}`}>\r\n                  <a className=\"btn btn-dark w-100\">Select</a>\r\n                </Link>\r\n              </CardBody>\r\n            </Card>\r\n*/","map":null,"metadata":{},"sourceType":"module"}