{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\hero_attacksim.js\";\nimport React from 'react';\nimport { newHero } from './hero';\nimport { HeroHp } from './hero';\nimport { HeroAc } from './hero';\nimport { HeroDmg } from './hero';\nimport { Monster } from './monster';\nexport { MonsteradjStats };\nexport { HeroadjStats }; //import { HeroHitAdj } from './hero'\n\nvar MonsteradjStats = {\n  MonsterHp: 0,\n  MonsterAc: 0,\n  MonsterDmg: 0,\n  MonsterHitAdj: 0\n};\nvar HeroadjStats = {\n  HeroHp: 0,\n  HeroAc: 0,\n  HeroDmg: 0,\n  HeroHitAdj: 0\n};\nvar roll = 0;\nvar didhit = \" \";\n\nvar HeroAttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HeroAttackSim, _React$Component);\n\n  function HeroAttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, HeroAttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeroAttackSim).call(this, props));\n    var didhit = \" \";\n    _this.heroattackroll = _this.heroattackroll.bind(_assertThisInitialized(_this));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(HeroAttackSim, [{\n    key: \"heroattackroll\",\n    value: function heroattackroll() {\n      roll = Math.floor(Math.random() * 20 + 1);\n\n      if (roll >= MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj) {\n        didhit = \"yes\";\n        MonsteradjStats.MonsterHp = MonsteradjStats.MonsterHp - 10;\n\n        if (MonsteradjStats.MonsterHp <= 0) {\n          MonsteradjStats.MonsterHp = \"Monster is dead\";\n        }\n      } else {\n        didhit = \"no\";\n      }\n\n      ;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Refresh stats\"), React.createElement(\"button\", {\n        onClick: this.setherostats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"set hero stats?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"MonsterAC = \", MonsteradjStats.MonsterAc), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Hero Hit Adjustment = \", HeroadjStats.HeroHitAdj), React.createElement(\"button\", {\n        onClick: this.heroattackroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Roll to hit\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Result of attack = \", didhit), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \" Monster hit points = \", MonsteradjStats.MonsterHp));\n    }\n  }]);\n\n  return HeroAttackSim;\n}(React.Component);\n\nexport default HeroAttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\hero_attacksim.js"],"names":["React","newHero","HeroHp","HeroAc","HeroDmg","Monster","MonsteradjStats","HeroadjStats","MonsterHp","MonsterAc","MonsterDmg","MonsterHitAdj","HeroHitAdj","roll","didhit","HeroAttackSim","props","heroattackroll","bind","refresh","Math","floor","random","forceUpdate","setherostats","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,eAAT;AACA,SAASC,YAAT,G,CACA;;AAEA,IAAID,eAAe,GAAG;AAClBE,EAAAA,SAAS,EAAE,CADO;AAElBC,EAAAA,SAAS,EAAE,CAFO;AAGlBC,EAAAA,UAAU,EAAE,CAHM;AAIlBC,EAAAA,aAAa,EAAE;AAJG,CAAtB;AAOA,IAAIJ,YAAY,GAAG;AACfL,EAAAA,MAAM,EAAE,CADO;AAEfC,EAAAA,MAAM,EAAE,CAFO;AAGfC,EAAAA,OAAO,EAAE,CAHM;AAIfQ,EAAAA,UAAU,EAAE;AAJG,CAAnB;AASA,IAAIC,IAAI,GAAG,CAAX;AAEA,IAAIC,MAAM,GAAG,GAAb;;IAIMC,a;;;;;AACF,yBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AACA,QAAMF,MAAM,GAAG,GAAf;AACA,UAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,+BAAf;AAJgB;AAKnB;;;;qCAEgB;AACbL,MAAAA,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,EAAjB,GAAuB,CAAlC,CAAP;;AACA,UAAIT,IAAI,IAAKP,eAAe,CAACG,SAAhB,GAA4BF,YAAY,CAACK,UAAtD,EAAmE;AAC/DE,QAAAA,MAAM,GAAG,KAAT;AACAR,QAAAA,eAAe,CAACE,SAAhB,GAA6BF,eAAe,CAACE,SAAhB,GAA4B,EAAzD;;AACA,YAAIF,eAAe,CAACE,SAAhB,IAA6B,CAAjC,EAAqC;AACjCF,UAAAA,eAAe,CAACE,SAAhB,GAA4B,iBAA5B;AACH;AACJ,OAND,MAMO;AACHM,QAAAA,MAAM,GAAG,IAAT;AACH;;AAAA;AAED,WAAKS,WAAL;AACH;;;8BAES;AACN,WAAKA,WAAL;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKJ,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiBlB,eAAe,CAACG,SAAjC,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA2BF,YAAY,CAACK,UAAxC,CAJJ,EAKI;AAAQ,QAAA,OAAO,EAAE,KAAKK,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBH,MAAxB,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA2BR,eAAe,CAACE,SAA3C,CATJ,CADJ;AAaH;;;;EAzCuBR,KAAK,CAACyB,S;;AA4ClC,eAAeV,aAAf","sourcesContent":["import React from 'react'\r\nimport { newHero } from './hero'\r\nimport { HeroHp } from './hero'\r\nimport { HeroAc } from './hero'\r\nimport { HeroDmg } from './hero'\r\nimport { Monster } from './monster'\r\nexport { MonsteradjStats}\r\nexport { HeroadjStats }\r\n//import { HeroHitAdj } from './hero'\r\n\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n}\r\n\r\n\r\n\r\nvar roll = 0;\r\n\r\nvar didhit = \" \";\r\n\r\n\r\n\r\nclass HeroAttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        const didhit = \" \";\r\n        this.heroattackroll = this.heroattackroll.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    heroattackroll() {\r\n        roll = Math.floor((Math.random() * 20) + 1);\r\n        if (roll >= (MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj)) {\r\n            didhit = \"yes\";\r\n            MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n            if (MonsteradjStats.MonsterHp <= 0 ) {\r\n                MonsteradjStats.MonsterHp = \"Monster is dead\";\r\n            }\r\n        } else {\r\n            didhit = \"no\";\r\n        };\r\n        \r\n        this.forceUpdate();\r\n    }\r\n\r\n    refresh() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.refresh}>Refresh stats</button>\r\n                <button onClick={this.setherostats}>set hero stats?</button>\r\n                <p>MonsterAC = { MonsteradjStats.MonsterAc }</p>\r\n                <p>Hero Hit Adjustment = { HeroadjStats.HeroHitAdj }</p>\r\n                <button onClick={this.heroattackroll}>\r\n                    Roll to hit\r\n                </button>\r\n                <p>Result of attack = { didhit }</p>\r\n                <p> Monster hit points = { MonsteradjStats.MonsterHp }</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeroAttackSim"]},"metadata":{},"sourceType":"module"}