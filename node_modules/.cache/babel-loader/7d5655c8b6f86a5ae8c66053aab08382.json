{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nexport { setherostats, SetheroDmgAdj, SetheroHitAdj, heroattackroll, heroAttackTurn }; //sets hero Armorclass based on dexterity stat number.\n\nfunction SetheroacAdj() {\n  if (this.state.herostats.Dext == 1 || this.state.herostats.Dext == 2) {\n    return -5;\n  }\n\n  if (this.state.herostats.Dext == 3) {\n    return -4;\n  }\n\n  if (this.state.herostats.Dext == 4) {\n    return -3;\n  }\n\n  if (this.state.herostats.Dext == 5) {\n    return -2;\n  }\n\n  if (this.state.herostats.Dext == 6) {\n    return -1;\n  }\n\n  if (this.state.herostats.Dext >= 7 && this.state.herostats.Dext <= 14) {\n    return 0;\n  }\n\n  if (this.state.herostats.Dext == 15) {\n    return 1;\n  }\n\n  if (this.state.herostats.Dext == 16) {\n    return 2;\n  }\n\n  if (this.state.herostats.Dext == 17) {\n    return 3;\n  }\n\n  if (this.state.herostats.Dext == 18 || this.state.herostats.Dext == 19) {\n    return 4;\n  }\n\n  if (this.state.herostats.Dext == 20) {\n    return 5;\n  }\n} //sets hero damage based on strength stat number.\n\n\nfunction SetheroDmgAdj() {\n  if (this.state.herostats.Str == 1) {\n    return -4;\n  }\n\n  if (this.state.herostats.Str == 2 || this.state.herostats.Str == 3) {\n    return -3;\n  }\n\n  if (this.state.herostats.Str == 4 || this.state.herostats.Str == 5) {\n    return -2;\n  }\n\n  if (this.state.herostats.Str == 6 || this.state.herostats.Str == 7) {\n    return -1;\n  }\n\n  if (this.state.herostats.Str >= 8 && this.state.herostats.Str <= 16) {\n    return 0;\n  }\n\n  if (this.state.herostats.Str == 17) {\n    return 1;\n  }\n\n  if (this.state.herostats.Str == 18) {\n    return 2;\n  }\n\n  if (this.state.herostats.Str == 19) {\n    return 3;\n  }\n\n  if (this.state.herostats.Str == 20) {\n    return 4;\n  }\n} //sets hero hit adjustment based on strength stat number.\n\n\nfunction SetheroHitAdj() {\n  if (this.state.herostats.Str == 1) {\n    return -4;\n  }\n\n  if (this.state.herostats.Str == 2 || this.state.herostats.Str == 3) {\n    return -3;\n  }\n\n  if (this.state.herostats.Str == 4 || this.state.herostats.Str == 5) {\n    return -2;\n  }\n\n  if (this.state.herostats.Str == 6 || this.state.herostats.Str == 7) {\n    return -1;\n  }\n\n  if (this.state.herostats.Str >= 8 && this.state.herostats.Str <= 16) {\n    return 0;\n  }\n\n  if (this.state.herostats.Str == 17) {\n    return 1;\n  }\n\n  if (this.state.herostats.Str == 18) {\n    return 2;\n  }\n\n  if (this.state.herostats.Str == 19) {\n    return 3;\n  }\n\n  if (this.state.herostats.Str == 20) {\n    return 4;\n  }\n} //sets stats including base role 1-20 than applies above functions.\n\n\nfunction setherostats() {\n  //performs a 1-20 roll for every item in the \"herostats\" object/state\n  for (var Stat in this.state.herostats) {\n    this.state.herostats[Stat] = Math.floor(Math.random() * 20 + 1);\n  }\n\n  ;\n  this.setState({\n    //sets adjusted items based on herostats numbers in the set..adj functions\n    heroHp: this.state.herobase.Hp + this.SetConstAdj(this.state.herostats.Const),\n    heroAc: this.state.herobase.ArmorClass + this.SetAcAdj(herostats.Dext),\n    heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\n    heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj()\n  });\n}\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\n\n\nfunction heroattackroll() {\n  var attackroll = _parseInt(Math.random() * 20 + 1);\n\n  var adjattackroll = attackroll + this.state.heroHitAdj;\n  var critstrike = this.state.heroDmg * 2;\n\n  if (attackroll < 20 && adjattackroll >= this.state.monsterAc) {\n    this.setState({\n      heroDidHit: 'Hit',\n      heroRoll: adjattackroll\n    }); //performs check to see if the monster hp after hero damange is 0 or lower\n\n    if (this.state.monsterHp - this.state.heroDmg <= 0) {\n      this.setState({\n        monsterHp: 'Dead',\n        heroRoll: adjattackroll // if yes, monster is dead\n\n      });\n    } else {\n      this.setState({\n        monsterHp: this.state.monsterHp - this.state.heroDmg\n      });\n    }\n  } else if (attackroll === 20) {\n    this.setState({\n      heroDidHit: 'Hit',\n      heroRoll: 'Crit Strike'\n    });\n\n    if (this.state.monsterHp - critstrike <= 0) {\n      this.setState({\n        monsterHp: 'Dead',\n        heroRoll: 'Crit Strike' // if yes, monster is dead\n\n      });\n    } else {\n      this.setState({\n        monsterHp: this.state.monsterHp - critstrike\n      });\n    }\n  } else {\n    this.setState({\n      heroDidHit: 'Miss',\n      heroRoll: adjattackroll\n    });\n  }\n\n  ;\n}\n\n;\n/*function to determine if the attack button should be displayed. Function is\r\ncalled when the attack button is pressed in attackSection (Attackbutton() ) \r\nif monster dead or hero goes 2nd, attack button should not be visible */\n\nfunction heroAttackTurn() {\n  if (this.state.monsterHp === 'Dead' || this.state.heroInitiative === 'Second') {\n    this.setState(function (state) {\n      return {\n        heroAttackVisible: !state.heroAttackVisible\n      };\n    });\n  } else {\n    //if hero goes first, makes sure attack button on monster area is hidden \n    //and displays attack button for hero.\n    this.setState(function (state) {\n      return {\n        monsterAttackVisible: !state.monsterAttackVisible,\n        heroAttackVisible: !state.heroAttackVisible\n      };\n    });\n  }\n}\n\n;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\herofunctions.js"],"names":["setherostats","SetheroDmgAdj","SetheroHitAdj","heroattackroll","heroAttackTurn","SetheroacAdj","state","herostats","Dext","Str","Stat","Math","floor","random","setState","heroHp","herobase","Hp","SetConstAdj","Const","heroAc","ArmorClass","SetAcAdj","heroDmg","Damage","heroHitAdj","HitAdj","attackroll","adjattackroll","critstrike","monsterAc","heroDidHit","heroRoll","monsterHp","heroInitiative","heroAttackVisible","monsterAttackVisible"],"mappings":"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","sourcesContent":["\r\n\r\nexport { setherostats, SetheroDmgAdj, SetheroHitAdj, heroattackroll, heroAttackTurn \r\n}\r\n\r\n\r\n//sets hero Armorclass based on dexterity stat number.\r\nfunction SetheroacAdj() {\r\n    if (this.state.herostats.Dext == 1 || this.state.herostats.Dext == 2) {\r\n        return -5;\r\n    }\r\n    if (this.state.herostats.Dext == 3) {\r\n        return -4;\r\n    }\r\n    if (this.state.herostats.Dext == 4) {\r\n        return -3;\r\n    }\r\n    if (this.state.herostats.Dext == 5) {\r\n        return -2;\r\n    }\r\n    if (this.state.herostats.Dext == 6) {\r\n        return -1;\r\n    }\r\n    if (this.state.herostats.Dext >= 7 && this.state.herostats.Dext <= 14) {\r\n        return 0;\r\n    }\r\n    if (this.state.herostats.Dext == 15) {\r\n        return 1;\r\n    }\r\n    if (this.state.herostats.Dext == 16) {\r\n        return 2;\r\n    }\r\n    if (this.state.herostats.Dext == 17) {\r\n        return 3;\r\n    }\r\n    if (this.state.herostats.Dext == 18 || this.state.herostats.Dext == 19) {\r\n        return 4;\r\n    }\r\n    if (this.state.herostats.Dext == 20) {\r\n        return 5;\r\n    }\r\n}\r\n\r\n//sets hero damage based on strength stat number.\r\nfunction SetheroDmgAdj() {\r\n    if (this.state.herostats.Str == 1) {\r\n        return -4;\r\n    }\r\n    if (this.state.herostats.Str == 2 || this.state.herostats.Str == 3) {\r\n        return -3;\r\n    }\r\n    if (this.state.herostats.Str == 4 || this.state.herostats.Str == 5) {\r\n        return -2;\r\n    }\r\n    if (this.state.herostats.Str == 6 || this.state.herostats.Str == 7) {\r\n        return -1;\r\n    }\r\n    if (this.state.herostats.Str >= 8 && this.state.herostats.Str <= 16) {\r\n        return 0;\r\n    }\r\n    if (this.state.herostats.Str == 17 ) {\r\n        return 1;\r\n    }\r\n    if (this.state.herostats.Str == 18 ) {\r\n        return 2;\r\n    }\r\n    if (this.state.herostats.Str == 19 ) {\r\n        return 3;\r\n    }\r\n    if (this.state.herostats.Str == 20 ) {\r\n        return 4;\r\n    }\r\n}\r\n\r\n//sets hero hit adjustment based on strength stat number.\r\nfunction SetheroHitAdj() {\r\n    if (this.state.herostats.Str == 1) {\r\n        return -4;\r\n    }\r\n    if (this.state.herostats.Str == 2 || this.state.herostats.Str == 3) {\r\n        return -3;\r\n    }\r\n    if (this.state.herostats.Str == 4 || this.state.herostats.Str == 5) {\r\n        return -2;\r\n    }\r\n    if (this.state.herostats.Str == 6 || this.state.herostats.Str == 7) {\r\n        return -1;\r\n    }\r\n    if (this.state.herostats.Str >= 8 && this.state.herostats.Str <= 16) {\r\n        return 0;\r\n    }\r\n    if (this.state.herostats.Str == 17 ) {\r\n        return 1;\r\n    }\r\n    if (this.state.herostats.Str == 18 ) {\r\n        return 2;\r\n    }\r\n    if (this.state.herostats.Str == 19 ) {\r\n        return 3;\r\n    }\r\n    if (this.state.herostats.Str == 20 ) {\r\n        return 4;\r\n    }\r\n}\r\n\r\n//sets stats including base role 1-20 than applies above functions.\r\nfunction setherostats() {\r\n    //performs a 1-20 roll for every item in the \"herostats\" object/state\r\n    for (let Stat in this.state.herostats) {\r\n        this.state.herostats[Stat] = Math.floor((Math.random() * 20) + 1);\r\n    };\r\n    this.setState ({\r\n        //sets adjusted items based on herostats numbers in the set..adj functions\r\n        heroHp: this.state.herobase.Hp + this.SetConstAdj(this.state.herostats.Const),\r\n        heroAc: this.state.herobase.ArmorClass + this.SetAcAdj(herostats.Dext),\r\n        heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\r\n        heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj(),\r\n    });\r\n}\r\n\r\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\r\nfunction heroattackroll() {\r\n    let attackroll = (parseInt((Math.random() * 20) + 1));\r\n    let adjattackroll = attackroll + (this.state.heroHitAdj); \r\n    let critstrike = (this.state.heroDmg * 2);\r\n    \r\n    if (attackroll < 20 && adjattackroll >= this.state.monsterAc ) {\r\n        this.setState(\r\n            {\r\n                heroDidHit: 'Hit', heroRoll: adjattackroll\r\n            }\r\n        );\r\n        //performs check to see if the monster hp after hero damange is 0 or lower\r\n        if ((this.state.monsterHp - this.state.heroDmg) <= 0) {\r\n            this.setState (\r\n                {\r\n                    monsterHp: 'Dead', heroRoll: adjattackroll  // if yes, monster is dead\r\n                }\r\n            ) \r\n        } else {\r\n            this.setState (\r\n                {\r\n                    monsterHp: this.state.monsterHp - this.state.heroDmg\r\n                }\r\n            )\r\n        }\r\n    } else if (attackroll === 20) {\r\n        this.setState(\r\n            {\r\n                heroDidHit: 'Hit', heroRoll: 'Crit Strike'\r\n            }\r\n        );\r\n        if ((this.state.monsterHp - critstrike) <= 0) {\r\n            this.setState (\r\n                {\r\n                    monsterHp: 'Dead', heroRoll: 'Crit Strike'  // if yes, monster is dead\r\n                }\r\n            ) \r\n        } else {\r\n            this.setState (\r\n                {\r\n                    monsterHp: this.state.monsterHp - critstrike\r\n                }\r\n            )\r\n        }\r\n    } else {\r\n        this.setState (\r\n            {\r\n                heroDidHit: 'Miss', heroRoll: adjattackroll\r\n            }\r\n        );\r\n    };\r\n};\r\n\r\n\r\n/*function to determine if the attack button should be displayed. Function is\r\ncalled when the attack button is pressed in attackSection (Attackbutton() ) \r\nif monster dead or hero goes 2nd, attack button should not be visible */ \r\nfunction heroAttackTurn() {\r\n    if (this.state.monsterHp === 'Dead'  || this.state.heroInitiative === 'Second') {\r\n        this.setState(state => (\r\n            {\r\n                heroAttackVisible: !state.heroAttackVisible\r\n            }\r\n        ));\r\n    } else {\r\n        //if hero goes first, makes sure attack button on monster area is hidden \r\n        //and displays attack button for hero.\r\n        this.setState(state => (\r\n            {\r\n                monsterAttackVisible: !state.monsterAttackVisible, \r\n                heroAttackVisible: !state.heroAttackVisible\r\n            }\r\n        ));\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}