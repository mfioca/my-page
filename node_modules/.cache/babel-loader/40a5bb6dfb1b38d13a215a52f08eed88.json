{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\tvpost.js\";\nimport React from \"react\";\nimport Layout from '../components/layout';\nimport Layout2 from './tv_info/MyLayout';\nimport { Card, CardImg, CardBody, CardTitle, Row, Col, Button } from 'reactstrap';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { TvImage, TvCast, TvTitle } from './jsxstyles';\nimport fetch from 'isomorphic-unfetch';\nvar noimage = '/static/images/no-img.png';\n\nvar tvPost = function tvPost(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"the below content has been imported from\", React.createElement(\"a\", {\n    href: \"https://www.tvmaze.com\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"TVmaze.com\")), React.createElement(Layout2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"h3 m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.show.name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Type:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.show.type ? props.show.type : 'no data')), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Premiered:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.show.premiered ? props.show.premiered : 'no data')), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"status:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.show.status ? props.show.status : 'no data')), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Rating:\"), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.show.rating.average)), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Genre:\"), \" \\xA0\", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.show.genres.map(function (value, index) {\n    return React.createElement(\"span\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, value, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  })))), React.createElement(Col, {\n    sm: {\n      size: 'auto',\n      offset: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-center mr-5 mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.show.image ? props.show.image.medium : noimage,\n    alt: \"no image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    className: \"m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Summary:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?p>/g, '').replace(/<[/]?b>/g, '').replace(/<[/]?i>/g, '')))), React.createElement(Row, {\n    className: \"m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Link:\", React.createElement(\"small\", {\n    className: \"ml-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: props.show.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    title: props.show.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.show.name ? props.show.name : 'null')))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Cast:\"), React.createElement(\"div\", {\n    className: \"d-flex flex-wrap justify-content-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.show._embedded.cast.map(function (cast) {\n    return React.createElement(\"div\", {\n      key: cast.person.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      className: \"m-4 text-center\",\n      style: TvTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, cast.person.name), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      className: \"p-2\",\n      style: TvImage,\n      src: cast.character.image === null && cast.person.image.medium || cast.character.image.medium,\n      alt: \"castimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: TvCast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"As:\", React.createElement(\"small\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, cast.character.name)))), React.createElement(Button, {\n      className: \"btn-dark mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"btn-dark w-100\",\n      href: cast.person.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Actor page\"))));\n  })), React.createElement(\"div\", {\n    className: \"mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Episodes:\"), React.createElement(ReactTable, {\n    className: \"-striped -highlight\",\n    data: props.show._embedded.episodes,\n    defaultPageSize: 20,\n    style: {\n      height: \"600px\",\n      fontSize: \"14px\"\n    },\n    filterable: true,\n    defaultFilterMethod: function defaultFilterMethod(filter, row) {\n      return String(row[filter.id]) === filter.value;\n    },\n    columns: [{\n      Header: \"Season\",\n      id: \"season\",\n      accessor: function accessor(d) {\n        return d.season;\n      },\n      maxWidth: 110,\n      style: {\n        'textAlign': 'center'\n      },\n      Filter: function Filter(_ref) {\n        var filter = _ref.filter,\n            _onChange = _ref.onChange;\n        return React.createElement(\"select\", {\n          onChange: function onChange(event) {\n            return _onChange(event.target.value);\n          },\n          style: {\n            width: \"100%\"\n          },\n          value: filter ? filter.value : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Show All\"), props.show._embedded.episodes.map(function (item) {\n          return item.season;\n        }).filter(function (item, i, s) {\n          return s.lastIndexOf(item) == i;\n        }).map(function (value) {\n          return React.createElement(\"option\", {\n            key: value,\n            value: value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, value);\n        }));\n      }\n    }, {\n      Header: \"Episode #\",\n      accessor: \"number\",\n      maxWidth: 80,\n      style: {\n        'textAlign': 'center'\n      }\n    }, {\n      Header: \"Name\",\n      id: \"name\",\n      accessor: function accessor(d) {\n        return React.createElement(\"a\", {\n          href: d.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, d.name);\n      },\n      minWidth: 70,\n      style: {\n        'whiteSpace': 'unset',\n        'textAlign': 'center'\n      }\n    }, {\n      Header: \"Air Date\",\n      id: \"airdate\",\n      accessor: function accessor(d) {\n        return d.airdate;\n      },\n      maxWidth: 120,\n      style: {\n        'whiteSpace': 'unset',\n        'textAlign': 'center'\n      }\n    }, {\n      Header: \"Summary\",\n      id: \"summary\",\n      accessor: function accessor(d) {\n        return d.summary != null && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, d.summary.replace(/<[/]?p>/g, ''));\n      },\n      style: {\n        'whiteSpace': 'unset'\n      }\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })))));\n};\n\ntvPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id; //pules tvmaze api json based on selected show on the search page.\n\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id, \"?embed[]=episodes&embed[]=cast&embed[]=seasons\"));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(show);\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default tvPost;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\tvpost.js"],"names":["Layout","Layout2","Card","CardImg","CardBody","CardTitle","Row","Col","Button","ReactTable","TvImage","TvCast","TvTitle","fetch","noimage","tvPost","props","show","name","type","premiered","status","rating","average","genres","map","value","index","size","offset","image","medium","summary","replace","url","_embedded","cast","person","id","character","episodes","height","fontSize","filter","row","String","Header","accessor","d","season","maxWidth","style","Filter","onChange","event","target","width","item","i","s","lastIndexOf","minWidth","airdate","getInitialProps","context","query","res","json","console","log"],"mappings":"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","sourcesContent":["import Layout from '../components/layout'\r\nimport Layout2 from './tv_info/MyLayout'\r\nimport { Card, CardImg, CardBody, CardTitle, Row, Col, Button } from 'reactstrap'\r\nimport ReactTable from \"react-table\"\r\nimport \"react-table/react-table.css\"\r\nimport { TvImage, TvCast, TvTitle } from './jsxstyles'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst noimage = '/static/images/no-img.png'\r\n\r\n\r\nconst tvPost = props => (\r\n  <Layout>\r\n    <h1 className=\"text-center\">the below content has been imported from \r\n      <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        TVmaze.com\r\n      </a>\r\n    </h1>\r\n    <Layout2>\r\n      <div className=\"h3 m-3\">\r\n        <Row>\r\n          <Col>\r\n            <h1>{props.show.name}</h1>\r\n            <h3><b>Type:</b> <small>{props.show.type ? props.show.type : 'no data'}</small></h3>\r\n            <h3><b>Premiered:</b> <small>{props.show.premiered ? props.show.premiered : 'no data'}</small></h3>\r\n            <h3><b>status:</b> <small>{props.show.status ? props.show.status : 'no data'}</small></h3>\r\n            <h3><b>Rating:</b> <small>{props.show.rating.average}</small></h3>\r\n            <h3>\r\n              {/* since tvmaze api json has genre as an imbedded array,\r\n                pulls the data in genres in a key map to list all entries*/}\r\n              <b>Genre:</b> &nbsp;\r\n              <small>\r\n                {\r\n                  props.show.genres.map((value, index) => {\r\n                    return <span key={index}>{value} <br /></span>\r\n                  })\r\n                }\r\n                {/*{props.show.genres.map(genres => (\r\n                  <span key={props.show.genres}>\r\n                    {genres} &nbsp;\r\n                  </span>\r\n                ))} */}\r\n              </small>\r\n            </h3>\r\n          </Col>\r\n          <Col sm={{ size: 'auto', offset: 1 }}>\r\n            <div className=\"text-center mr-5 mt-2\">\r\n              <img src={props.show.image ? props.show.image.medium : noimage} alt=\"no image\"/>\r\n            </div>\r\n          </Col>\r\n          {/* className=\"mr-5 mt-3\" */}\r\n        </Row>\r\n        <Row className=\"m-3\">\r\n          <h4>Summary:<br />\r\n            <small>\r\n              {props.show.summary\r\n                .replace(/<[/]?p>/g, '')\r\n                .replace(/<[/]?b>/g, '')\r\n                .replace(/<[/]?i>/g, '')\r\n              }\r\n            </small>\r\n          </h4>\r\n        </Row>\r\n        <Row className=\"m-3\">\r\n          <h3>Link: \r\n            <small className=\"ml-2\">\r\n              <a href={props.show.url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                title={props.show.url}>\r\n              {props.show.name ? props.show.name : 'null'} \r\n              </a>\r\n            </small>\r\n          </h3>\r\n        </Row>\r\n        <h2>Cast:</h2>\r\n        <div className=\"d-flex flex-wrap justify-content-left\">\r\n          {props.show._embedded.cast.map(cast => (\r\n            <div key={cast.person.id}>\r\n              <Card className=\"m-2\">\r\n                <CardTitle \r\n                  className=\"m-4 text-center\" \r\n                  style={TvTitle}>\r\n                    {cast.person.name}\r\n                </CardTitle>\r\n                <CardBody>\r\n                  <div>\r\n                    <CardImg \r\n                      className=\"p-2\" \r\n                      style={TvImage} \r\n                      src={\r\n                        cast.character.image === null \r\n                        && cast.person.image.medium  \r\n                        || cast.character.image.medium\r\n                      } \r\n                      alt=\"castimage\" \r\n                    />\r\n                  </div>\r\n                  <div className=\"text-center my-2\">\r\n                    <h4 style={TvCast}>As:<small className=\"ml-2\">{cast.character.name}</small></h4>\r\n                  </div>\r\n                </CardBody>\r\n                <Button className=\"btn-dark mt-3\">\r\n                  <a className=\"btn-dark w-100\" \r\n                    href={cast.person.url}\r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"> \r\n                      Actor page\r\n                  </a>\r\n                </Button>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <h1>Episodes:</h1>\r\n          <ReactTable\r\n            className= \"-striped -highlight\"\r\n            data= {props.show._embedded.episodes}\r\n            defaultPageSize={20}\r\n            style={{\r\n              height: \"600px\",\r\n              fontSize: \"14px\",\r\n            }}\r\n            filterable\r\n            defaultFilterMethod={(filter, row) =>\r\n              String(row[filter.id]) === filter.value}\r\n            columns= {[\r\n              {\r\n                Header: \"Season\",\r\n                id: \"season\",\r\n                accessor: d => d.season,\r\n                maxWidth: 110,\r\n                style: {'textAlign': 'center'},\r\n                Filter: ({ filter, onChange }) => {\r\n                  return (\r\n                    <select\r\n                      onChange={event => onChange(event.target.value)}\r\n                      style={{ width: \"100%\"}}\r\n                      value={filter ? filter.value : ''}> \r\n                      <option value= ''>Show All</option>\r\n                      {props.show._embedded.episodes\r\n                        .map(item => item.season)\r\n                        .filter((item, i, s) => s.lastIndexOf(item) == i)\r\n                        .map(function (value) {\r\n                          return (\r\n                            <option key={value} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          );\r\n                        })\r\n                      }\r\n                    </select>\r\n                  );\r\n                }\r\n              },\r\n              {\r\n                Header: \"Episode #\",\r\n                accessor: \"number\",\r\n                maxWidth: 80,\r\n                style: {'textAlign': 'center'}\r\n              },\r\n              {\r\n                Header:\"Name\",\r\n                id: \"name\",\r\n                accessor: d =>\r\n                <a href={d.url} target=\"_blank\" rel=\"noopener noreferrer\">{d.name}</a>, \r\n                minWidth: 70,\r\n                style: { 'whiteSpace': 'unset', 'textAlign': 'center' },\r\n              },\r\n              {\r\n                Header:\"Air Date\",\r\n                id: \"airdate\",\r\n                accessor: d => d.airdate,\r\n                maxWidth: 120,\r\n                style: { 'whiteSpace': 'unset', 'textAlign': 'center' },\r\n              },\r\n              {\r\n                Header:\"Summary\",\r\n                id: \"summary\",\r\n                accessor: d => \r\n                d.summary != null && <span>{d.summary.replace(/<[/]?p>/g, '')}</span>,\r\n                style: { 'whiteSpace': 'unset' },\r\n              }\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout2>\r\n  </Layout>\r\n);\r\n\r\ntvPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  //pules tvmaze api json based on selected show on the search page.\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}?embed[]=episodes&embed[]=cast&embed[]=seasons`);\r\n  const show = await res.json();\r\n  \r\n  console.log(show);\r\n\r\n  console.log(`Fetched show: ${show.name}`);\r\n\r\n  return { show };\r\n};\r\n\r\nexport default tvPost;"]},"metadata":{},"sourceType":"module"}