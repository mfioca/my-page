{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\test_items\\\\jsonsearch.js\";\nimport React, { Component } from 'react';\nimport { createFilter } from './Filter';\nimport { createSorter } from './Sort';\n\nvar data = require('./something.json');\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onLoad\", function (data) {\n      _this.setState({\n        data: _this.parseData(data)\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('/data.json').then(function (res) {\n        return res.json();\n      }).then(this.onLoad);\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(response) {\n      return response.data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, data.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"mailto:\".concat(item.email),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, item.name), \" \", item.company);\n      }));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n/*\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('./something.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  parseData (response) {\r\n    return response;\r\n  }\r\n\r\n  onLoad = (newdata) => {\r\n    this.setState({\r\n      newdata: this.parseData(newdata)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    \r\n    return newdata ?\r\n      this.renderData(newdata) :\r\n      this.renderLoading()\r\n  }\r\n\r\n  renderData (newdata) {\r\n    if (newdata && newdata.length) {\r\n      return (\r\n        <div>\r\n          {\r\n            newdata.map(item => (\r\n              <div key={item.id}>\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>\r\n    }\r\n  }\r\n\r\n  renderLoading () {\r\n    return <div>Loading...</div>\r\n  }\r\n}\r\n*/\n\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\test_items\\jsonsearch.js"],"names":["React","Component","createFilter","createSorter","data","require","List","setState","parseData","fetch","then","res","json","onLoad","response","map","item","id","email","name","company"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,YAAT,QAA6B,QAA7B;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAApB;;IAEMC,I;;;;;;;;;;;;;;;;;;6DAWK,UAACF,IAAD,EAAU;AACjB,YAAKG,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAE,MAAKI,SAAL,CAAeJ,IAAf;AADM,OAAd;AAGD,K;;;;;;;wCAdoB;AACnBK,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,KAAKG,MAFb;AAGD;;;8BAEUC,Q,EAAU;AACnB,aAAOA,QAAQ,CAACV,IAAhB;AACD;;;6BAOQ;AACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQA,IAAI,CAACW,GAAL,CAAS,UAAAC,IAAI;AAAA,eACX;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,mBAAYD,IAAI,CAACE,KAAjB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCF,IAAI,CAACG,IAAvC,CADF,OACoDH,IAAI,CAACI,OADzD,CADW;AAAA,OAAb,CAFR;AASD;;;;EA1BgBpB,KAAK,CAACC,S;AAmCzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,eAAeK,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { createFilter } from './Filter';\r\nimport { createSorter } from './Sort';\r\n\r\nconst data = require('./something.json');\r\n\r\nclass List extends React.Component {\r\n  componentDidMount () {\r\n    fetch('/data.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  parseData (response) {\r\n    return response.data;\r\n  }\r\n\r\n  onLoad = (data) => {\r\n    this.setState({\r\n      data: this.parseData(data)\r\n    });\r\n  }\r\n  render() {\r\n    <div>\r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('./something.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  parseData (response) {\r\n    return response;\r\n  }\r\n\r\n  onLoad = (newdata) => {\r\n    this.setState({\r\n      newdata: this.parseData(newdata)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    \r\n    return newdata ?\r\n      this.renderData(newdata) :\r\n      this.renderLoading()\r\n  }\r\n\r\n  renderData (newdata) {\r\n    if (newdata && newdata.length) {\r\n      return (\r\n        <div>\r\n          {\r\n            newdata.map(item => (\r\n              <div key={item.id}>\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>\r\n    }\r\n  }\r\n\r\n  renderLoading () {\r\n    return <div>Loading...</div>\r\n  }\r\n}\r\n*/\r\nexport default List;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}