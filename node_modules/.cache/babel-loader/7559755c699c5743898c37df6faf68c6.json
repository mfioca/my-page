{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Layout from '../components/layout';\nimport Layout2 from './tv_info/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nvar noimage = '/static/images/no-img.png';\n\nvar tvPost = function tvPost(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", {\n    className: \"text-center\"\n  }, \"the below content has been imported from\", React.createElement(\"a\", {\n    href: \"https://www.tvmaze.com\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"TVmaze.com\")), React.createElement(Layout2, null, React.createElement(\"div\", {\n    className: \"h3\"\n  }, React.createElement(\"h1\", null, props.show.name), React.createElement(\"h3\", null, React.createElement(\"b\", null, \"Type:\"), \" \", React.createElement(\"small\", null, props.show.type ? props.show.type : 'no data')), React.createElement(\"h3\", null, React.createElement(\"b\", null, \"Premiered:\"), \" \", React.createElement(\"small\", null, props.show.premiered ? props.show.premiered : 'no data')), React.createElement(\"h3\", null, React.createElement(\"b\", null, \"status:\"), \" \", React.createElement(\"small\", null, props.show.status ? props.show.status : 'no data')), React.createElement(\"h3\", null, React.createElement(\"b\", null, \"Rating:\"), \" \", React.createElement(\"small\", null, props.show.rating.average ? props.show.average : 'no data')), React.createElement(\"h3\", null, React.createElement(\"b\", null, \"Genre:\"), \" \\xA0\", React.createElement(\"small\", null, props.show.genres.map(function (genre) {\n    return React.createElement(\"span\", {\n      key: props.show.genres\n    }, genre, \" \\xA0\");\n  }))), React.createElement(\"img\", {\n    src: props.show.image ? props.show.image.medium : noimage,\n    alt: \"no image\"\n  }), React.createElement(\"h4\", null, React.createElement(\"small\", null, props.show.summary.replace(/<[/]?p>/g, '').replace(/<[/]?b>/g, '').replace(/<[/]?i>/g, ''))), React.createElement(\"h3\", null, \"Link:\", React.createElement(\"small\", null, React.createElement(\"a\", {\n    href: props.show.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    title: props.show.url\n  }, props.show.name ? props.show.name : 'null'))))));\n};\n\ntvPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id; //pules tvmaze api json based on selected show on the search page.\n\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(show);\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default tvPost;","map":null,"metadata":{},"sourceType":"module"}