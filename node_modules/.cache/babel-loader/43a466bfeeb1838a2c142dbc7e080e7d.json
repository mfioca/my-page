{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\test_items\\\\jsonsearch.js\";\nimport React, { Component } from 'react';\nimport { createFilter } from './Filter';\nimport { createSorter } from './Sort';\n\nvar data = require('./something.json');\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      sorters: _this.props.sorters\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLoad\", function (data) {\n      _this.setState({\n        data: _this.parseData(data)\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('/data.json').then(function (res) {\n        return res.json();\n      }).then(this.onLoad);\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(response) {\n      var sorters = this.state.sorters;\n\n      if (data && data.length) {\n        if (_Array$isArray(sorters) && sorters.length) {\n          data.sort(createSorter.apply(void 0, _toConsumableArray(sorters)));\n        }\n      }\n\n      return data.sort;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const { data } = this.state;\n      return data ? this.renderData(data) : this.renderLoading();\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData(data) {\n      if (data && data.length) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, data.map(function (item) {\n          return React.createElement(\"div\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"mailto:\".concat(item.email),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, item.name), \" \", item.company);\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"No items found\");\n      }\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\test_items\\jsonsearch.js"],"names":["React","Component","createFilter","createSorter","data","require","List","sorters","props","setState","parseData","fetch","then","res","json","onLoad","response","state","length","sort","renderData","renderLoading","map","item","id","email","name","company"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,YAAT,QAA6B,QAA7B;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;IAEMC,I;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWD;AADd,K;;6DAsBC,UAACH,IAAD,EAAU;AACjB,YAAKK,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE,MAAKM,SAAL,CAAeN,IAAf;AADM,OAAd;AAGD,K;;;;;;;wCAtBoB;AACnBO,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,KAAKG,MAFb;AAGD;;;8BAEUC,Q,EAAU;AAAA,UACXT,OADW,GACC,KAAKU,KADN,CACXV,OADW;;AAGnB,UAAIH,IAAI,IAAIA,IAAI,CAACc,MAAjB,EAAyB;AACvB,YAAI,eAAcX,OAAd,KAA0BA,OAAO,CAACW,MAAtC,EAA8C;AAC5Cd,UAAAA,IAAI,CAACe,IAAL,CAAUhB,YAAY,MAAZ,4BAAgBI,OAAhB,EAAV;AACD;AACF;;AAED,aAAOH,IAAI,CAACe,IAAZ;AACD;;;6BAQS;AACR;AAEA,aAAOf,IAAI,GACT,KAAKgB,UAAL,CAAgBhB,IAAhB,CADS,GAET,KAAKiB,aAAL,EAFF;AAGD;;;+BAEWjB,I,EAAM;AAChB,UAAIA,IAAI,IAAIA,IAAI,CAACc,MAAjB,EAAyB;AACvB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEId,IAAI,CAACkB,GAAL,CAAS,UAAAC,IAAI;AAAA,iBACX;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,IAAI,mBAAYD,IAAI,CAACE,KAAjB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCF,IAAI,CAACG,IAAvC,CADF,OACoDH,IAAI,CAACI,OADzD,CADW;AAAA,SAAb,CAFJ,CADF;AAWD,OAZD,MAYO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;AACF;;;oCAEgB;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;;;EAzDgB1B,S;;AA2DnB,eAAeK,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { createFilter } from './Filter';\r\nimport { createSorter } from './Sort';\r\n\r\nvar data = require('./something.json');\r\n\r\nclass List extends Component {\r\n  state = {\r\n    sorters: this.props.sorters\r\n  };\r\n\r\n  componentDidMount () {\r\n    fetch('/data.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  parseData (response) {\r\n    const { sorters } = this.state;\r\n\r\n    if (data && data.length) {\r\n      if (Array.isArray(sorters) && sorters.length) {\r\n        data.sort(createSorter(...sorters));\r\n      }\r\n    }\r\n\r\n    return data.sort;\r\n  }\r\n\r\n  onLoad = (data) => {\r\n    this.setState({\r\n      data: this.parseData(data)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    //const { data } = this.state;\r\n\r\n    return data ?\r\n      this.renderData(data) :\r\n      this.renderLoading()\r\n  }\r\n\r\n  renderData (data) {\r\n    if (data && data.length) {\r\n      return (\r\n        <div>\r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>\r\n    }\r\n  }\r\n\r\n  renderLoading () {\r\n    return <div>Loading...</div>\r\n  }\r\n}\r\nexport default List;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}