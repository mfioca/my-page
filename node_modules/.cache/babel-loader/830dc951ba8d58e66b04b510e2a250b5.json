{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\attacksim.js\";\nimport React from 'react';\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj } from './herofunctions';\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj } from './monsterfunctions'; //export { MonsteradjStats}\n//export { HeroadjStats }\n\n/*\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n} */\n\nvar Heroroll = 0;\nvar Monsterroll = 0;\nvar Herodidhit = \" \";\nvar Monsterdidhit = \" \";\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\n\nfunction heroattackroll() {\n  if (Heroroll >= MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj) {\n    Herodidhit = \"HIT\";\n    MonsteradjStats.MonsterHp = MonsteradjStats.MonsterHp - 10;\n\n    if (MonsteradjStats.MonsterHp <= 0) {\n      MonsteradjStats.MonsterHp = \"Dead\";\n    }\n  } else {\n    Herodidhit = \"MISS\";\n  }\n\n  ;\n}\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\n\n\nfunction Monsterattackroll() {\n  if (Monsterroll >= HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj) {\n    Monsterdidhit = \"HIT\";\n    HeroadjStats.HeroHp = HeroadjStats.HeroHp - 10;\n\n    if (HeroadjStats.HeroHp <= 0) {\n      HeroadjStats.HeroHp = \"Dead\";\n    }\n  } else {\n    Monsterdidhit = \"MISS\";\n  }\n\n  ;\n}\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    _this.heroinitiative = 0;\n    _this.monsterinitiative = 0;\n    _this.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Name: '',\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroName: '',\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterName: ''\n    };\n    _this.setherostats = _this.setherostats.bind(_assertThisInitialized(_this));\n    _this.SetheroConstAdj = SetheroConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroacAdj = SetheroacAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroDmgAdj = SetheroDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroHitAdj = SetheroHitAdj.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    _this.setMonsterstats = _this.setMonsterstats.bind(_assertThisInitialized(_this));\n    _this.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    _this.heroattack = _this.heroattack.bind(_assertThisInitialized(_this));\n    _this.Monsterattack = _this.Monsterattack.bind(_assertThisInitialized(_this));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"setherostats\",\n    value: function setherostats() {\n      for (var key in this.state.herostats) {\n        this.state.herostats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ; //calls functions in hero_functions to adjust stats in\n      //heroadjstats variable in the attacksim.js\n\n      this.setState({\n        heroHp: this.state.herobase.Hp + this.SetheroConstAdj(),\n        heroAC: this.state.herobase.ArmorClass + this.SetheroacAdj(),\n        heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\n        heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj()\n      });\n    }\n  }, {\n    key: \"setMonsterstats\",\n    value: function setMonsterstats() {\n      for (var key in this.state.monsterstats) {\n        this.state.monsterstats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ;\n      this.setState({\n        monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\n        monsterAc: this.state.monsterbase.ArmorClass + this.SetmonsteracAdj(),\n        monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\n        monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj()\n      });\n    }\n  }, {\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroName: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterName: event.target.value\n      });\n    }\n  }, {\n    key: \"heroattack\",\n\n    /*hero attack roll, radomly generates number between 1 to 20.  Then\r\n    calls the hero attack roll function to determine successful attack.*/\n    value: function heroattack() {\n      Heroroll = Math.floor(Math.random() * 20 + 1);\n      heroattackroll();\n      this.forceUpdate();\n    }\n    /*monster attack roll, randomly generates number between 1 to 20.  Then \r\n    calls the monster attack roll function to determine successful attack. */\n\n  }, {\n    key: \"Monsterattack\",\n    value: function Monsterattack() {\n      Monsterroll = Math.floor(Math.random() * 20 + 1);\n      Monsterattackroll();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.forceUpdate();\n    }\n    /*initiative role to determine if hero or monster attacks first.  sets \r\n    variable for initiative to determine first attack.  Who ever has lower \r\n    number goes first, on equal role, alerts that a reroll is necessary. */\n\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      this.heroinitiative = Math.floor(Math.random() * 10 + 1);\n      this.monsterinitiative = Math.floor(Math.random() * 10 + 1);\n\n      if (this.heroinitiative < this.monsterinitiative) {\n        this.heroinitiative = \"First\";\n        this.monsterinitiative = \"Second\";\n      } else if (this.heroinitiative > this.monsterinitiative) {\n        this.monsterinitiative = \"First\";\n        this.heroinitiative = \"Second\";\n      } else {\n        this.heroinitiative = \"ReRoll\";\n        this.monsterinitiative = \"ReRoll\";\n      }\n\n      Herodidhit = \" \";\n      Monsterdidhit = \" \";\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeroBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Name: \"), this.state.heroName), React.createElement(\"table\", {\n        className: \"DandDstat_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \" \", this.state.herostats.Str)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \" \", this.state.herostats.Const)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \" \", this.state.herostats.Dext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \" \", this.state.heroHp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Damage per hit:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \" \", this.state.heroDmg)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"DnD_Hero Float-right\",\n        src: \"../static/images/hero.png\",\n        alt: \"hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setherostats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.heroNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"Monster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MonsterBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Name: \"), this.state.monsterName), React.createElement(\"table\", {\n        className: \"DandDstat_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Str)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Const)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Dext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \" \", this.state.monsterHp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Base Damage:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \" \", this.state.monsterDmg)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"DnD_Monster Float-right\",\n        src: \"../static/images/monster.png\",\n        alt: \"monster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setMonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.monsterNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        alt: \"shield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, HeroadjStats.HeroAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, HeroadjStats.HeroHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.heroattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Hero Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, Herodidhit)), React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"StatRefresh DandD_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Refresh stats\")), React.createElement(\"div\", {\n        className: \"Initiative DandD_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Roll for iniative\")), React.createElement(\"div\", {\n        className: \"Heroinitiative center Fsize-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Hero \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), \"iniative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, this.heroinitiative)), React.createElement(\"div\", {\n        className: \"Monsterinitiative center Fsize-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Monster initiative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, this.monsterinitiative)), React.createElement(\"div\", {\n        className: \"HeroHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/herohp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HeroHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, HeroadjStats.HeroHp)), React.createElement(\"div\", {\n        className: \"MonsterHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/monsterhp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"MonsterHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, MonsteradjStats.MonsterHp))), React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        alt: \"shield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, MonsteradjStats.MonsterAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, MonsteradjStats.MonsterHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.Monsterattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Monster Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, Monsterdidhit)));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\attacksim.js"],"names":["React","SetheroConstAdj","SetheroHitAdj","SetheroDmgAdj","SetheroacAdj","SetmonsterConstAdj","SetmonsterHitAdj","SetmonsterDmgAdj","SetmonsteracAdj","Heroroll","Monsterroll","Herodidhit","Monsterdidhit","heroattackroll","MonsteradjStats","MonsterAc","HeroadjStats","HeroHitAdj","MonsterHp","Monsterattackroll","HeroAc","MonsterHitAdj","HeroHp","AttackSim","props","heroinitiative","monsterinitiative","state","herostats","Str","Const","Dext","herobase","Hp","ArmorClass","Damage","HitAdj","monsterstats","monsterbase","Name","heroHp","heroAc","heroDmg","heroHitAdj","heroName","monsterHp","monsterAc","monsterDmg","monsterHitAdj","monsterName","setherostats","bind","heroNameChange","setMonsterstats","monsterNameChange","heroattack","Monsterattack","refresh","rollforiniative","key","Math","floor","random","setState","heroAC","event","target","value","forceUpdate","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj } from './herofunctions'\r\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj } from './monsterfunctions'\r\n//export { MonsteradjStats}\r\n//export { HeroadjStats }\r\n\r\n/*\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n} */\r\n\r\nvar Heroroll = 0;\r\nvar Monsterroll = 0;\r\n\r\nvar Herodidhit = \" \";\r\nvar Monsterdidhit = \" \";\r\n\r\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\r\n\r\nfunction heroattackroll() {\r\n    if (Heroroll >= (MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj)) {\r\n        Herodidhit = \"HIT\";\r\n        MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n        if (MonsteradjStats.MonsterHp <= 0 ) {\r\n            MonsteradjStats.MonsterHp = \"Dead\";\r\n        }\r\n    } else {\r\n        Herodidhit = \"MISS\";\r\n    };\r\n}\r\n\r\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\r\n\r\nfunction Monsterattackroll() {\r\n    if (Monsterroll >= (HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj)) {\r\n        Monsterdidhit = \"HIT\";\r\n        HeroadjStats.HeroHp = (HeroadjStats.HeroHp - 10);\r\n        if (HeroadjStats.HeroHp <= 0 ) {\r\n            HeroadjStats.HeroHp = \"Dead\";\r\n        }\r\n    } else {\r\n        Monsterdidhit = \"MISS\";\r\n    };\r\n}\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.heroinitiative = 0;\r\n        this.monsterinitiative = 0;\r\n        this.state = { \r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Name: '',\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroName: '',\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterName: ''\r\n        };\r\n\r\n        this.setherostats = this.setherostats.bind(this);\r\n        this.SetheroConstAdj = SetheroConstAdj.bind(this);\r\n        this.SetheroacAdj = SetheroacAdj.bind(this);\r\n        this.SetheroDmgAdj = SetheroDmgAdj.bind(this);\r\n        this.SetheroHitAdj = SetheroHitAdj.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n\r\n        this.setMonsterstats = this.setMonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n\r\n\r\n        this.heroattack = this.heroattack.bind(this);\r\n        this.Monsterattack = this.Monsterattack.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n        \r\n    }\r\n\r\n    setherostats() {\r\n        for (let key in this.state.herostats) {\r\n            this.state.herostats[key] = Math.floor((Math.random() * 20) + 1);\r\n        };\r\n        //calls functions in hero_functions to adjust stats in\r\n        //heroadjstats variable in the attacksim.js\r\n        this.setState ({\r\n            heroHp: this.state.herobase.Hp + this.SetheroConstAdj(),\r\n            heroAC: this.state.herobase.ArmorClass + this.SetheroacAdj(),\r\n            heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\r\n            heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj(),\r\n        });\r\n    };\r\n\r\n    setMonsterstats() {\r\n        for (let key in this.state.monsterstats) {\r\n            this.state.monsterstats[key] = Math.floor((Math.random() * 20) + 1);\r\n        };\r\n        this.setState ({\r\n            monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\r\n            monsterAc: this.state.monsterbase.ArmorClass + this.SetmonsteracAdj(),\r\n            monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\r\n            monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj(),\r\n        });\r\n    };\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroName : event.target.value});\r\n    };\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterName : event.target.value});\r\n    };\r\n\r\n    /*hero attack roll, radomly generates number between 1 to 20.  Then\r\n    calls the hero attack roll function to determine successful attack.*/\r\n\r\n    heroattack() {\r\n        Heroroll = Math.floor((Math.random() * 20) + 1);\r\n        heroattackroll();\r\n        this.forceUpdate();\r\n    }\r\n    \r\n    /*monster attack roll, randomly generates number between 1 to 20.  Then \r\n    calls the monster attack roll function to determine successful attack. */\r\n\r\n    Monsterattack() {\r\n        Monsterroll = Math.floor((Math.random() * 20) + 1);\r\n        Monsterattackroll();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    refresh() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    /*initiative role to determine if hero or monster attacks first.  sets \r\n    variable for initiative to determine first attack.  Who ever has lower \r\n    number goes first, on equal role, alerts that a reroll is necessary. */\r\n\r\n    rollforiniative() {\r\n        this.heroinitiative = Math.floor((Math.random() * 10) + 1);\r\n        this.monsterinitiative = Math.floor((Math.random() * 10) + 1);\r\n        if (this.heroinitiative < this.monsterinitiative) {\r\n            this.heroinitiative = \"First\";\r\n            this.monsterinitiative = \"Second\";\r\n        } else if (this.heroinitiative > this.monsterinitiative) {\r\n            this.monsterinitiative = \"First\";\r\n            this.heroinitiative = \"Second\"\r\n        } else {\r\n            this.heroinitiative = \"ReRoll\";\r\n            this.monsterinitiative = \"ReRoll\";\r\n        }\r\n        Herodidhit = \" \";\r\n        Monsterdidhit = \" \";\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Hero\">\r\n                <div className=\"HeroBox\">\r\n                    <div>\r\n                    <p><b>Name: </b>{ this.state.heroName }</p>\r\n                        <table className=\"DandDstat_table\">\r\n                            <tr>\r\n                                <td>Strength:</td>\r\n                                <td> { this.state.herostats.Str }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Constitution:</td>\r\n                                <td> { this.state.herostats.Const }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dexterity:</td>\r\n                                <td> { this.state.herostats.Dext }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Hitpoints:</td>\r\n                                <td> { this.state.heroHp }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Damage per hit:</td>\r\n                                <td> { this.state.heroDmg }</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \r\n                    </div>\r\n                </div>\r\n                <div className=\"Stats-roll align-center\">\r\n                    <button onClick={ this.setherostats }>Set Attrubutes</button>\r\n                </div>\r\n                <div>\r\n                    <form>\r\n                        <label>\r\n                            Name:\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength=\"20\"\r\n                                value={this.state.value}\r\n                                onChange={this.heroNameChange}\r\n                            />\r\n                        </label>\r\n                    </form> \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Monster\">\r\n                <div className=\"MonsterBox\">\r\n                    <div>\r\n                        <p><b>Name: </b>{ this.state.monsterName }</p>\r\n                        <table className=\"DandDstat_table\">\r\n                            <tr>\r\n                                <td>Strength:</td>\r\n                                <td> { this.state.monsterstats.Str }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Constitution:</td>\r\n                                <td> { this.state.monsterstats.Const }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dexterity:</td>\r\n                                <td> { this.state.monsterstats.Dext }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Hitpoints:</td>\r\n                                <td> { this.state.monsterHp }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Base Damage:</td>\r\n                                <td> { this.state.monsterDmg }</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <img className=\"DnD_Monster Float-right\" src=\"../static/images/monster.png\" alt=\"monster\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Stats-roll align-center\">\r\n                    <button onClick={this.setMonsterstats}>Set Attrubutes</button>\r\n                </div>\r\n                <div>\r\n                    <form>\r\n                        <label>\r\n                            Name:\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength=\"20\"\r\n                                value={this.state.value}\r\n                                onChange={this.monsterNameChange}\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n                {/*displays hero stats and attack information */}\r\n                <div className=\"Attack-section\">\r\n                    <div className=\"AC-Icon\">\r\n                        <img src=\"../static/images/acicon.png\" alt=\"shield\"/>\r\n                        <p className=\"AC-Icon-text Fsize-3\">\r\n                            { HeroadjStats.HeroAc }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"HitAdj-Icon\">\r\n                        <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                        <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                            { HeroadjStats.HeroHitAdj }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"Attack-roll\">\r\n                        <button  onClick={this.heroattack}>\r\n                            Hero Roll for Attack\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"Attack-result Fsize-3 center\">\r\n                        { Herodidhit }\r\n                    </div>\r\n                </div>\r\n                  {/*main field to control attack simulation placed between\r\n                     hero info and monster info */}  \r\n                <div className=\"Attack-section\">    \r\n                    <div className=\"StatRefresh DandD_button\">\r\n                        <button onClick={this.refresh}>Refresh stats</button>\r\n                    </div>\r\n                    <div className=\"Initiative DandD_button\">\r\n                        <button onClick={this.rollforiniative}>Roll for iniative</button>\r\n                    </div>\r\n                    <div className=\"Heroinitiative center Fsize-2\">\r\n                        <p>Hero <br/>iniative:</p>\r\n                        <p className=\"Fsize-3\">{this.heroinitiative}</p>\r\n                    </div>\r\n                    <div className=\"Monsterinitiative center Fsize-2\">\r\n                        <p>Monster initiative:</p>\r\n                        <p className=\"Fsize-3\">{this.monsterinitiative}</p>\r\n                    </div>  \r\n                    <div className=\"HeroHP-icon\">\r\n                        <img src=\"../static/images/herohp.png\" alt=\"icon\"/>\r\n                        <p className=\"HeroHP-text Fsize-3 center\">\r\n                            { HeroadjStats.HeroHp }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"MonsterHP-icon\">\r\n                        <img src=\"../static/images/monsterhp.png\" alt=\"icon\"/>\r\n                        <p className=\"MonsterHP-text Fsize-3 center\">\r\n                            { MonsteradjStats.MonsterHp }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {/*displays Monster stats and attack information */}\r\n                <div className=\"Attack-section\">\r\n                    <div className=\"AC-Icon\">\r\n                        <img src=\"../static/images/acicon.png\" alt=\"shield\" />\r\n                        <p className=\"AC-Icon-text Fsize-3\">\r\n                            { MonsteradjStats.MonsterAc }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"HitAdj-Icon\">\r\n                        <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                        <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                            { MonsteradjStats.MonsterHitAdj }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"Attack-roll\">\r\n                        <button onClick={this.Monsterattack}>\r\n                            Monster Roll for Attack\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"Attack-result Fsize-3 center\">\r\n                        { Monsterdidhit }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AttackSim"]},"metadata":{},"sourceType":"module"}