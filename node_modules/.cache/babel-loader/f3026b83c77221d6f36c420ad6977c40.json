{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\test_items\\\\jsonsearch.js\";\nimport React, { Component } from 'react';\nimport { createFilter } from './Filter';\nimport { createSorter } from './Sort'; //import data from './something.json';\n\nvar data = require('./something.json');\n\nvar sorters = {\n  property: 'name'\n};\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('/data.json').then(function (res) {\n        return res.json();\n      }).then(this.onLoad);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var sorters = sorters.sorters;\n\n      if (data && data.length > 0) {\n        if (_Array$isArray(sorters) && sorters.length > 0) {\n          data.sort(createSorter.apply(void 0, _toConsumableArray(sorters)));\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, data.map(function (item) {\n          return React.createElement(\"div\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, item.id, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }), item.company, React.createElement(\"a\", {\n            href: \"mailto:\".concat(item.email),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, item.name), \" \", item.company);\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"No items found\");\n      }\n    }\n  }]);\n\n  return List;\n}(Component);\n\n_defineProperty(List, \"defaultProps\", {\n  filters: [{\n    property: 'company',\n    value: 'Qualcore'\n  }, {\n    property: 'name',\n    value: ''\n  }],\n  sorters: [{\n    property: 'company'\n  }, {\n    property: 'name'\n  }]\n});\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\test_items\\jsonsearch.js"],"names":["React","Component","createFilter","createSorter","data","require","sorters","property","List","fetch","then","res","json","onLoad","length","sort","map","item","id","company","email","name","filters","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,YAAT,QAA6B,QAA7B,C,CACA;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AAEA,IAAMC,OAAO,GAAG;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAhB;;IAEMC,I;;;;;;;;;;;;;wCAqBiB;AACnBC,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,KAAKG,MAFb;AAGD;;;6BAIS;AAAA,UAEAP,OAFA,GAEYA,OAFZ,CAEAA,OAFA;;AAIR,UAAIF,IAAI,IAAIA,IAAI,CAACU,MAAL,GAAc,CAA1B,EAA6B;AAC3B,YAAI,eAAcR,OAAd,KAA0BA,OAAO,CAACQ,MAAR,GAAiB,CAA/C,EAAkD;AAChDV,UAAAA,IAAI,CAACW,IAAL,CAAUZ,YAAY,MAAZ,4BAAgBG,OAAhB,EAAV;AACD;;AAGD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEIF,IAAI,CAACY,GAAL,CAAS,UAAAC,IAAI;AAAA,iBACX;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAACC,EADR,OACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGD,IAAI,CAACE,OAFR,EAGE;AAAG,YAAA,IAAI,mBAAYF,IAAI,CAACG,KAAjB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCH,IAAI,CAACI,IAAvC,CAHF,OAGoDJ,IAAI,CAACE,OAHzD,CADW;AAAA,SAAb,CAFJ,CADF;AAaD,OAnBD,MAmBO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;AACF;;;;EAvDgBlB,S;;gBAAbO,I,kBAIkB;AACpBc,EAAAA,OAAO,EAAE,CAAC;AACRf,IAAAA,QAAQ,EAAE,SADF;AAERgB,IAAAA,KAAK,EAAE;AAFC,GAAD,EAGN;AACDhB,IAAAA,QAAQ,EAAE,MADT;AAEDgB,IAAAA,KAAK,EAAE;AAFN,GAHM,CADW;AASpBjB,EAAAA,OAAO,EAAE,CAAC;AACRC,IAAAA,QAAQ,EAAE;AADF,GAAD,EAEN;AACDA,IAAAA,QAAQ,EAAE;AADT,GAFM;AATW,C;;AAuDxB,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { createFilter } from './Filter';\r\nimport { createSorter } from './Sort';\r\n//import data from './something.json';\r\n\r\nvar data = require('./something.json');\r\n\r\nconst sorters = {property: 'name'}\r\n\r\nclass List extends Component {\r\n  \r\n  \r\n  \r\n  static defaultProps = {\r\n    filters: [{\r\n      property: 'company',\r\n      value: 'Qualcore'\r\n    }, {\r\n      property: 'name',\r\n      value: ''\r\n    }],\r\n\r\n    sorters: [{\r\n      property: 'company'\r\n    }, {\r\n      property: 'name'\r\n    }]\r\n  }\r\n\r\n\r\n  componentDidMount () {\r\n    fetch('/data.json')\r\n      .then(res => res.json())\r\n      .then(this.onLoad);\r\n  }\r\n\r\n  \r\n\r\n  render () {\r\n    \r\n    const  {sorters}  = sorters;\r\n\r\n    if (data && data.length > 0) {\r\n      if (Array.isArray(sorters) && sorters.length > 0) {\r\n        data.sort(createSorter(...sorters));\r\n      }\r\n    \r\n\r\n      return (\r\n        <div>\r\n          {\r\n            data.map(item => (\r\n              <div key={item.id}>\r\n                {item.id} <br />\r\n                {item.company}\r\n                <a href={`mailto:${item.email}`}>{item.name}</a> {item.company}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No items found</div>\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default List;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}