{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\hero_attacksim.js\";\nimport React from 'react';\nimport { Monster } from './monster';\nexport { MonsteradjStats };\nexport { HeroadjStats }; //import { HeroHitAdj } from './hero'\n\nvar MonsteradjStats = {\n  MonsterHp: 0,\n  MonsterAc: 0,\n  MonsterDmg: 0,\n  MonsterHitAdj: 0\n};\nvar HeroadjStats = {\n  HeroHp: 0,\n  HeroAc: 0,\n  HeroDmg: 0,\n  HeroHitAdj: 0\n};\nvar Heroroll = 0;\nvar Monsterroll = 0;\nvar Herodidhit = \" \";\nvar Monsterdidhit = \" \";\n\nfunction heroattackroll() {\n  //Heroroll = Math.floor((Math.random() * 20) + 1);\n  if (Heroroll >= MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj) {\n    Herodidhit = \"yes\";\n    MonsteradjStats.MonsterHp = MonsteradjStats.MonsterHp - 10;\n\n    if (MonsteradjStats.MonsterHp <= 0) {\n      MonsteradjStats.MonsterHp = \"Monster is dead\";\n    }\n  } else {\n    Herodidhit = \"no\";\n  }\n\n  ;\n}\n\nfunction Monsterattackroll() {\n  if (Monsterroll >= HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj) {\n    Monsterdidhit = \"yes\";\n    HeroadjStats.HeroHp = HeroadjStats.HeroHp - 10;\n\n    if (HeroadjStats.HeroHp <= 0) {\n      HeroadjStats.HeroHp = \"Hero is dead\";\n    }\n  } else {\n    Monsterdidhit = \"no\";\n  }\n\n  ;\n}\n\nvar HeroAttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HeroAttackSim, _React$Component);\n\n  function HeroAttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, HeroAttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeroAttackSim).call(this, props));\n    _this.heroinitiative = 0;\n    _this.monsterinitiative = 0;\n    _this.state = {\n      showHeroattack: false\n    };\n    _this.heroattack = _this.heroattack.bind(_assertThisInitialized(_this));\n    _this.state = {\n      showMonsterattack: false\n    };\n    _this.Monsterattack = _this.Monsterattack.bind(_assertThisInitialized(_this));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this));\n    _this.reverseattackbutton = _this.reverseattackbutton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(HeroAttackSim, [{\n    key: \"heroattack\",\n    value: function heroattack() {\n      Heroroll = Math.floor(Math.random() * 20 + 1);\n      heroattackroll();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"Monsterattack\",\n    value: function Monsterattack() {\n      Monsterroll = Math.floor(Math.random() * 20 + 1);\n      Monsterattackroll();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.forceUpdate();\n    }\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      this.heroinitiative = Math.floor(Math.random() * 10 + 1);\n      this.monsterinitiative = Math.floor(Math.random() * 10 + 1);\n\n      if (this.heroinitiative < this.monsteriniative) {\n        this.setState(function (prevState) {\n          return {\n            showHeroattack: !prevState.showHeroattack\n          };\n        });\n      } else if (this.heroinitiative > this.monsterinitiative) {\n        this.setState(function (prevState) {\n          return {\n            showMonsterattack: !prevState.showMonsterattack\n          };\n        });\n      } else {\n        this.heroinitiative = \"ReRoll\";\n        this.monsterinitiative = \"ReRoll\";\n      }\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DandD_attack\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Attack-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"MonsterAC = \", MonsteradjStats.MonsterAc), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Hero Hit Adjustment = \", HeroadjStats.HeroHitAdj), React.createElement(\"p\", {\n        className: \"pointer\",\n        onClick: this.heroattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.showHeroattack ? 'Roll to hit' : ' '), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Result of attack = \", Herodidhit)), React.createElement(\"div\", {\n        className: \"Attack-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"Reset_stat-button\",\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Refresh stats\"), React.createElement(\"button\", {\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Roll for iniative\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Hero iniative = \", this.heroinitiative), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Monster iniative = \", this.monsterinitiative), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" Hero hit points = \", HeroadjStats.HeroHp), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" Monster hit points = \", MonsteradjStats.MonsterHp)), React.createElement(\"div\", {\n        className: \"Attack-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"HeroAC = \", HeroadjStats.HeroAc), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Monster Hit Adjustment = \", MonsteradjStats.MonsterHitAdj), React.createElement(\"p\", {\n        className: \"pointer\",\n        onClick: this.Monsterattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, this.state.showMonsterattack ? 'Roll to hit' : ' '), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Result of attack = \", Monsterdidhit))));\n    }\n  }]);\n\n  return HeroAttackSim;\n}(React.Component);\n\nexport default HeroAttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\hero_attacksim.js"],"names":["React","Monster","MonsteradjStats","HeroadjStats","MonsterHp","MonsterAc","MonsterDmg","MonsterHitAdj","HeroHp","HeroAc","HeroDmg","HeroHitAdj","Heroroll","Monsterroll","Herodidhit","Monsterdidhit","heroattackroll","Monsterattackroll","HeroAttackSim","props","heroinitiative","monsterinitiative","state","showHeroattack","heroattack","bind","showMonsterattack","Monsterattack","refresh","rollforiniative","reverseattackbutton","Math","floor","random","forceUpdate","monsteriniative","setState","prevState","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Monster } from './monster'\r\nexport { MonsteradjStats}\r\nexport { HeroadjStats }\r\n\r\n//import { HeroHitAdj } from './hero'\r\n\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n}\r\n\r\n\r\n\r\nvar Heroroll = 0;\r\nvar Monsterroll = 0;\r\n\r\nvar Herodidhit = \" \";\r\nvar Monsterdidhit = \" \";\r\n\r\n\r\nfunction heroattackroll() {\r\n    //Heroroll = Math.floor((Math.random() * 20) + 1);\r\n    if (Heroroll >= (MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj)) {\r\n        Herodidhit = \"yes\";\r\n        MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n        if (MonsteradjStats.MonsterHp <= 0 ) {\r\n            MonsteradjStats.MonsterHp = \"Monster is dead\";\r\n        }\r\n    } else {\r\n        Herodidhit = \"no\";\r\n    };\r\n}\r\n\r\nfunction Monsterattackroll() {\r\n    if (Monsterroll >= (HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj)) {\r\n        Monsterdidhit = \"yes\";\r\n        HeroadjStats.HeroHp = (HeroadjStats.HeroHp - 10);\r\n        if (HeroadjStats.HeroHp <= 0 ) {\r\n            HeroadjStats.HeroHp = \"Hero is dead\";\r\n        }\r\n    } else {\r\n        Monsterdidhit = \"no\";\r\n    };\r\n}\r\n\r\n\r\nclass HeroAttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.heroinitiative = 0;\r\n        this.monsterinitiative = 0;\r\n        this.state = {showHeroattack: false}\r\n        this.heroattack = this.heroattack.bind(this);\r\n        this.state = {showMonsterattack: false}\r\n        this.Monsterattack = this.Monsterattack.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n        this.reverseattackbutton = this.reverseattackbutton.bind(this);\r\n        \r\n    }\r\n\r\n    heroattack() {\r\n        Heroroll = Math.floor((Math.random() * 20) + 1);\r\n        heroattackroll();\r\n        this.forceUpdate();\r\n    }\r\n    Monsterattack() {\r\n        Monsterroll = Math.floor((Math.random() * 20) + 1);\r\n        Monsterattackroll();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    refresh() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    rollforiniative() {\r\n        this.heroinitiative = Math.floor((Math.random() * 10) + 1);\r\n        this.monsterinitiative = Math.floor((Math.random() * 10) + 1);\r\n        if (this.heroinitiative < this.monsteriniative) {\r\n            this.setState(prevState => ({\r\n                showHeroattack: !prevState.showHeroattack\r\n            }));\r\n        } else if (this.heroinitiative > this.monsterinitiative) {\r\n            this.setState(prevState => ({\r\n                showMonsterattack: !prevState.showMonsterattack\r\n            }));\r\n        } else {\r\n            this.heroinitiative = \"ReRoll\";\r\n            this.monsterinitiative = \"ReRoll\";\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"DandD_attack\">    \r\n                    <div className=\"Attack-container\">\r\n                        \r\n                        <p>MonsterAC = { MonsteradjStats.MonsterAc }</p>\r\n                        <p>Hero Hit Adjustment = { HeroadjStats.HeroHitAdj }</p>\r\n                        <p className=\"pointer\" onClick={this.heroattack}>\r\n                        {this.state.showHeroattack ? 'Roll to hit' : ' '}\r\n                        </p>\r\n                        <p>Result of attack = { Herodidhit }</p>\r\n                        \r\n                    </div>\r\n                    <div className=\"Attack-container\">\r\n                    <button className=\"Reset_stat-button\" onClick={this.refresh}>Refresh stats</button>\r\n                    <button onClick={this.rollforiniative}>Roll for iniative</button>\r\n                    <p>Hero iniative = {this.heroinitiative}</p>\r\n                    <p>Monster iniative = {this.monsterinitiative}</p>\r\n                    <p> Hero hit points = { HeroadjStats.HeroHp }</p>\r\n                    <p> Monster hit points = { MonsteradjStats.MonsterHp }</p>\r\n                    </div>\r\n                    <div className=\"Attack-container\">\r\n                        <p>HeroAC = { HeroadjStats.HeroAc }</p>\r\n                        <p>Monster Hit Adjustment = { MonsteradjStats.MonsterHitAdj }</p>\r\n                        <p className=\"pointer\" onClick={this.Monsterattack}>\r\n                        {this.state.showMonsterattack ? 'Roll to hit' : ' '}\r\n                        </p>\r\n                    <p>Result of attack = { Monsterdidhit }</p>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default HeroAttackSim"]},"metadata":{},"sourceType":"module"}