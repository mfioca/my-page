{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\tvpage.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport CSS from '../components/style.css';\nimport Layout2 from './tv_info/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar test = '';\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n    _this.state = {\n      query: test\n    };\n    _this.onInputChange = _this.onInputChange.bind(_assertThisInitialized(_this));\n    _this.stupid = _this.stupid.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"onInputChange\",\n    value: function onInputChange(event) {\n      this.setState({\n        query: event.target.value\n      });\n      test = this.state.query;\n    }\n  }, {\n    key: \"stupid\",\n    value: function stupid(event) {\n      test = this.state.query;\n      ReactDOM.render(React.createElement(TvPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.getInitialPorps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Search:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nvar TvPage = function TvPage(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Layout2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Batman TV Shows\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/tvpost?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, show.name)));\n  }))));\n};\n\nTvPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var _test, id, res, data;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _test = test, id = _test.id;\n          _context.next = 3;\n          return fetch('https://api.tvmaze.com/search/shows?q=' + test);\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default TvPage;\n/*class SearchBar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n  stupid(event) {\r\n    test = this.state.query;\r\n    ReactDOM.render(\r\n      <TvPage />);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n          \r\n      );\r\n  }\r\n} \r\n\r\n//const TvPage = props => (\r\nclass TvPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getInitialProps = this.getInitialProps.bind(this);\r\n\r\n    this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n    getInitialProps = async function() {\r\n    \r\n      //const Search = test;\r\n      \r\n      const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n      const data = await res.json();\r\n    \r\n      console.log(`Show data fetched. Count: ${data.length}`);\r\n    \r\n      return {\r\n        shows: data.map(entry => entry.show)\r\n      };\r\n    };\r\n\r\n  }\r\n  render() {\r\n    return (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n      <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst TvPage = props => (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n        <SearchBar />\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n  ); \r\n\r\n  \r\n  TvPage.getInitialProps = async function() {\r\n    \r\n    //const Search = test;\r\n    \r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n  };\r\n  \r\n*/\n//export default TvPage;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\tvpage.js"],"names":["React","Component","Layout","CSS","Layout2","Link","fetch","test","SearchBar","props","state","query","onInputChange","bind","stupid","event","setState","target","value","ReactDOM","render","getInitialPorps","TvPage","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport CSS from '../components/style.css'\r\nimport Layout2 from './tv_info/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\n\r\n\r\n\r\nvar test = '';\r\n\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n  stupid(event) {\r\n    test = this.state.query;\r\n    ReactDOM.render(\r\n      <TvPage />);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n          \r\n      );\r\n  }\r\n} \r\n\r\nconst TvPage = props => (\r\n  <Layout>\r\n    <SearchBar />\r\n      <Layout2>\r\n        <h1>Batman TV Shows</h1>\r\n          <ul>\r\n            {props.shows.map(show => (\r\n              <li key={show.id}>\r\n                <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}</a>\r\n                </Link>\r\n              </li>\r\n              ))}\r\n          </ul>\r\n      </Layout2>\r\n  </Layout>\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  const { id } = test;\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;\r\n\r\n\r\n/*class SearchBar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n  stupid(event) {\r\n    test = this.state.query;\r\n    ReactDOM.render(\r\n      <TvPage />);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n          \r\n      );\r\n  }\r\n} \r\n\r\n//const TvPage = props => (\r\nclass TvPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getInitialProps = this.getInitialProps.bind(this);\r\n\r\n    this.state = {query: test};\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.stupid = this.stupid.bind(this);\r\n  }\r\n\r\n  onInputChange(event) {\r\n      this.setState({query: event.target.value});\r\n      test = this.state.query;\r\n      \r\n  }\r\n\r\n    getInitialProps = async function() {\r\n    \r\n      //const Search = test;\r\n      \r\n      const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n      const data = await res.json();\r\n    \r\n      console.log(`Show data fetched. Count: ${data.length}`);\r\n    \r\n      return {\r\n        shows: data.map(entry => entry.show)\r\n      };\r\n    };\r\n\r\n  }\r\n  render() {\r\n    return (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n      <div className=\"search-bar\">\r\n              <form onSubmit={this.getInitialPorps}>\r\n                <label>\r\n                  Search:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.onInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n              \r\n          </div>\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst TvPage = props => (\r\n    <Layout>\r\n      <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n        <SearchBar />\r\n        <Layout2>\r\n          <h1>{test} TV Shows</h1>\r\n            <ul>\r\n              {props.shows.map(show => (\r\n                <li key={show.id}>\r\n                  <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                    <a>{show.name}</a>\r\n                  </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </Layout2>\r\n    </Layout>\r\n  ); \r\n\r\n  \r\n  TvPage.getInitialProps = async function() {\r\n    \r\n    //const Search = test;\r\n    \r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=' + test);\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n  };\r\n  \r\n*/\r\n  \r\n  \r\n  //export default TvPage;"]},"metadata":{},"sourceType":"module"}