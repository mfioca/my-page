{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\hero_attacksim.js\";\nimport React from 'react';\nexport { MonsteradjStats };\nexport { HeroadjStats };\nvar MonsteradjStats = {\n  MonsterHp: 0,\n  MonsterAc: 0,\n  MonsterDmg: 0,\n  MonsterHitAdj: 0\n};\nvar HeroadjStats = {\n  HeroHp: 0,\n  HeroAc: 0,\n  HeroDmg: 0,\n  HeroHitAdj: 0\n};\nvar Heroroll = 0;\nvar Monsterroll = 0;\nvar Herodidhit = \" \";\nvar Monsterdidhit = \" \";\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\n\nfunction heroattackroll() {\n  if (Heroroll >= MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj) {\n    Herodidhit = \"HIT\";\n    MonsteradjStats.MonsterHp = MonsteradjStats.MonsterHp - 10;\n\n    if (MonsteradjStats.MonsterHp <= 0) {\n      MonsteradjStats.MonsterHp = \"Dead\";\n    }\n  } else {\n    Herodidhit = \"MISS\";\n  }\n\n  ;\n}\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\n\n\nfunction Monsterattackroll() {\n  if (Monsterroll >= HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj) {\n    Monsterdidhit = \"HIT\";\n    HeroadjStats.HeroHp = HeroadjStats.HeroHp - 10;\n\n    if (HeroadjStats.HeroHp <= 0) {\n      HeroadjStats.HeroHp = \"Dead\";\n    }\n  } else {\n    Monsterdidhit = \"MISS\";\n  }\n\n  ;\n}\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    _this.heroinitiative = 0;\n    _this.monsterinitiative = 0;\n    _this.heroattack = _this.heroattack.bind(_assertThisInitialized(_this));\n    _this.Monsterattack = _this.Monsterattack.bind(_assertThisInitialized(_this));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /*hero attack roll, radomly generates number between 1 to 20.  Then\r\n  calls the hero attack roll function to determine successful attack.*/\n\n\n  _createClass(AttackSim, [{\n    key: \"heroattack\",\n    value: function heroattack() {\n      Heroroll = Math.floor(Math.random() * 20 + 1);\n      heroattackroll();\n      this.forceUpdate();\n    }\n    /*monster attack roll, randomly generates number between 1 to 20.  Then \r\n    calls the monster attack roll function to determine successful attack. */\n\n  }, {\n    key: \"Monsterattack\",\n    value: function Monsterattack() {\n      Monsterroll = Math.floor(Math.random() * 20 + 1);\n      Monsterattackroll();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.forceUpdate();\n    }\n    /*initiative role to determine if hero or monster attacks first.  sets \r\n    variable for initiative to determine first attack.  Who ever has lower \r\n    number goes first, on equal role, alerts that a reroll is necessary. */\n\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      this.heroinitiative = Math.floor(Math.random() * 10 + 1);\n      this.monsterinitiative = Math.floor(Math.random() * 10 + 1);\n\n      if (this.heroinitiative < this.monsterinitiative) {\n        this.heroinitiative = \"First\";\n        this.monsterinitiative = \"Second\";\n      } else if (this.heroinitiative > this.monsterinitiative) {\n        this.monsterinitiative = \"First\";\n        this.heroinitiative = \"Second\";\n      } else {\n        this.heroinitiative = \"ReRoll\";\n        this.monsterinitiative = \"ReRoll\";\n      }\n\n      Herodidhit = \" \";\n      Monsterdidhit = \" \";\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DandD_attack\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Attack-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, HeroadjStats.HeroAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, HeroadjStats.HeroHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.heroattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, Herodidhit))), React.createElement(\"div\", {\n        className: \"Attack-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Float-left DandD_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Refresh stats\")), React.createElement(\"div\", {\n        className: \"Float-right DandD_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Roll for iniative\")), React.createElement(\"div\", {\n        className: \"Heroinitiative center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Hero iniative \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), this.heroinitiative)), React.createElement(\"div\", {\n        className: \"Monsterinitiative center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Monster initiative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.monsterinitiative))), React.createElement(\"div\", {\n        className: \"HeroHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/herohp.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HeroHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, HeroadjStats.HeroHp)), React.createElement(\"div\", {\n        className: \"MonsterHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/monsterhp.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"MonsterHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, MonsteradjStats.MonsterHp)))), React.createElement(\"div\", {\n        className: \"Attack-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, MonsteradjStats.MonsterAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, MonsteradjStats.MonsterHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.Monsterattack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, Monsterdidhit)))));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\hero_attacksim.js"],"names":["React","MonsteradjStats","HeroadjStats","MonsterHp","MonsterAc","MonsterDmg","MonsterHitAdj","HeroHp","HeroAc","HeroDmg","HeroHitAdj","Heroroll","Monsterroll","Herodidhit","Monsterdidhit","heroattackroll","Monsterattackroll","AttackSim","props","heroinitiative","monsterinitiative","heroattack","bind","Monsterattack","refresh","rollforiniative","Math","floor","random","forceUpdate","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nexport { MonsteradjStats}\r\nexport { HeroadjStats }\r\n\r\n\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n}\r\n\r\nvar Heroroll = 0;\r\nvar Monsterroll = 0;\r\n\r\nvar Herodidhit = \" \";\r\nvar Monsterdidhit = \" \";\r\n\r\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\r\n\r\nfunction heroattackroll() {\r\n    if (Heroroll >= (MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj)) {\r\n        Herodidhit = \"HIT\";\r\n        MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n        if (MonsteradjStats.MonsterHp <= 0 ) {\r\n            MonsteradjStats.MonsterHp = \"Dead\";\r\n        }\r\n    } else {\r\n        Herodidhit = \"MISS\";\r\n    };\r\n}\r\n\r\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\r\n\r\nfunction Monsterattackroll() {\r\n    if (Monsterroll >= (HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj)) {\r\n        Monsterdidhit = \"HIT\";\r\n        HeroadjStats.HeroHp = (HeroadjStats.HeroHp - 10);\r\n        if (HeroadjStats.HeroHp <= 0 ) {\r\n            HeroadjStats.HeroHp = \"Dead\";\r\n        }\r\n    } else {\r\n        Monsterdidhit = \"MISS\";\r\n    };\r\n}\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.heroinitiative = 0;\r\n        this.monsterinitiative = 0;\r\n        this.heroattack = this.heroattack.bind(this);\r\n        this.Monsterattack = this.Monsterattack.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n    }\r\n\r\n    /*hero attack roll, radomly generates number between 1 to 20.  Then\r\n    calls the hero attack roll function to determine successful attack.*/\r\n\r\n    heroattack() {\r\n        Heroroll = Math.floor((Math.random() * 20) + 1);\r\n        heroattackroll();\r\n        this.forceUpdate();\r\n    }\r\n    \r\n    /*monster attack roll, randomly generates number between 1 to 20.  Then \r\n    calls the monster attack roll function to determine successful attack. */\r\n\r\n    Monsterattack() {\r\n        Monsterroll = Math.floor((Math.random() * 20) + 1);\r\n        Monsterattackroll();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    refresh() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    /*initiative role to determine if hero or monster attacks first.  sets \r\n    variable for initiative to determine first attack.  Who ever has lower \r\n    number goes first, on equal role, alerts that a reroll is necessary. */\r\n\r\n    rollforiniative() {\r\n        this.heroinitiative = Math.floor((Math.random() * 10) + 1);\r\n        this.monsterinitiative = Math.floor((Math.random() * 10) + 1);\r\n        if (this.heroinitiative < this.monsterinitiative) {\r\n            this.heroinitiative = \"First\";\r\n            this.monsterinitiative = \"Second\";\r\n        } else if (this.heroinitiative > this.monsterinitiative) {\r\n            this.monsterinitiative = \"First\";\r\n            this.heroinitiative = \"Second\"\r\n        } else {\r\n            this.heroinitiative = \"ReRoll\";\r\n            this.monsterinitiative = \"ReRoll\";\r\n        }\r\n        Herodidhit = \" \";\r\n        Monsterdidhit = \" \";\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"DandD_attack\">    \r\n                    <div className=\"Attack-container\">\r\n                        <div className=\"Attack-section\">\r\n                            <div className=\"AC-Icon\">\r\n                                <img src=\"../static/images/acicon.png\" />\r\n                                <p className=\"AC-Icon-text Fsize-3\">\r\n                                    { HeroadjStats.HeroAc }\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"HitAdj-Icon\">\r\n                                <img src=\"../static/images/hitadjust.png\" />\r\n                                <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                                    { HeroadjStats.HeroHitAdj }\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"Attack-roll\">\r\n                                <button  onClick={this.heroattack}>\r\n                                    Roll for Attack\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"Attack-result Fsize-3 center\">\r\n                                { Herodidhit }\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n    \r\n                    <div className=\"Attack-container\">\r\n                        <div className=\"Attack-section\">    \r\n                            <div>\r\n                                <div className=\"Float-left DandD_button\">\r\n                                <button onClick={this.refresh}>Refresh stats</button>\r\n                                </div>\r\n                                <div className=\"Float-right DandD_button\">\r\n                                <button onClick={this.rollforiniative}>Roll for iniative</button>\r\n                                </div>\r\n                                <div className=\"Heroinitiative center\">\r\n                                    <p>Hero iniative <br /> <br />\r\n                                    {this.heroinitiative}</p>\r\n                                </div>\r\n                                <div className=\"Monsterinitiative center\">\r\n                                    <p>Monster initiative:</p>\r\n                                    <p className=\"Fsize-3\">{this.monsterinitiative}</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"HeroHP-icon\">\r\n                                <img src=\"../static/images/herohp.png\" />\r\n                            \r\n                                <p className=\"HeroHP-text Fsize-3 center\">\r\n                                    { HeroadjStats.HeroHp }\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"MonsterHP-icon\">\r\n                                <img src=\"../static/images/monsterhp.png\" />\r\n                            \r\n                                <p className=\"MonsterHP-text Fsize-3 center\">\r\n                                    { MonsteradjStats.MonsterHp }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"Attack-container\">\r\n                        <div className=\"Attack-section\">\r\n                        \r\n                            <div className=\"AC-Icon\">\r\n                                <img src=\"../static/images/acicon.png\" />\r\n                                <p className=\"AC-Icon-text Fsize-3\">\r\n                                    { MonsteradjStats.MonsterAc }\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"HitAdj-Icon\">\r\n                                <img src=\"../static/images/hitadjust.png\" />\r\n                                <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                                    { MonsteradjStats.MonsterHitAdj }\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            <div className=\"Attack-roll\">\r\n                                <button onClick={this.Monsterattack}>\r\n                                    Roll for Attack\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"Attack-result\">\r\n                                { Monsterdidhit }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default AttackSim"]},"metadata":{},"sourceType":"module"}