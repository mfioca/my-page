{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nexport { MonsteradjStats };\nexport { HeroadjStats };\nvar MonsteradjStats = {\n  MonsterHp: 0,\n  MonsterAc: 0,\n  MonsterDmg: 0,\n  MonsterHitAdj: 0\n};\nvar HeroadjStats = {\n  HeroHp: 0,\n  HeroAc: 0,\n  HeroDmg: 0,\n  HeroHitAdj: 0\n};\nvar Heroroll = 0;\nvar Monsterroll = 0;\nvar Herodidhit = \" \";\nvar Monsterdidhit = \" \";\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\n\nfunction heroattackroll() {\n  if (Heroroll >= MonsteradjStats.MonsterAc + HeroadjStats.HeroHitAdj) {\n    Herodidhit = \"HIT\";\n    MonsteradjStats.MonsterHp = MonsteradjStats.MonsterHp - 10;\n\n    if (MonsteradjStats.MonsterHp <= 0) {\n      MonsteradjStats.MonsterHp = \"Dead\";\n    }\n  } else {\n    Herodidhit = \"MISS\";\n  }\n\n  ;\n}\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\n\n\nfunction Monsterattackroll() {\n  if (Monsterroll >= HeroadjStats.HeroAc + MonsteradjStats.MonsterHitAdj) {\n    Monsterdidhit = \"HIT\";\n    HeroadjStats.HeroHp = HeroadjStats.HeroHp - 10;\n\n    if (HeroadjStats.HeroHp <= 0) {\n      HeroadjStats.HeroHp = \"Dead\";\n    }\n  } else {\n    Monsterdidhit = \"MISS\";\n  }\n\n  ;\n}\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props));\n    _this.heroinitiative = 0;\n    _this.monsterinitiative = 0;\n    _this.heroattack = _this.heroattack.bind(_assertThisInitialized(_this));\n    _this.Monsterattack = _this.Monsterattack.bind(_assertThisInitialized(_this));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /*hero attack roll, radomly generates number between 1 to 20.  Then\r\n  calls the hero attack roll function to determine successful attack.*/\n\n\n  _createClass(AttackSim, [{\n    key: \"heroattack\",\n    value: function heroattack() {\n      Heroroll = Math.floor(Math.random() * 20 + 1);\n      heroattackroll();\n      this.forceUpdate();\n    }\n    /*monster attack roll, randomly generates number between 1 to 20.  Then \r\n    calls the monster attack roll function to determine successful attack. */\n\n  }, {\n    key: \"Monsterattack\",\n    value: function Monsterattack() {\n      Monsterroll = Math.floor(Math.random() * 20 + 1);\n      Monsterattackroll();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.forceUpdate();\n    }\n    /*initiative role to determine if hero or monster attacks first.  sets \r\n    variable for initiative to determine first attack.  Who ever has lower \r\n    number goes first, on equal role, alerts that a reroll is necessary. */\n\n  }, {\n    key: \"rollforiniative\",\n    value: function rollforiniative() {\n      this.heroinitiative = Math.floor(Math.random() * 10 + 1);\n      this.monsterinitiative = Math.floor(Math.random() * 10 + 1);\n\n      if (this.heroinitiative < this.monsterinitiative) {\n        this.heroinitiative = \"First\";\n        this.monsterinitiative = \"Second\";\n      } else if (this.heroinitiative > this.monsterinitiative) {\n        this.monsterinitiative = \"First\";\n        this.heroinitiative = \"Second\";\n      } else {\n        this.heroinitiative = \"ReRoll\";\n        this.monsterinitiative = \"ReRoll\";\n      }\n\n      Herodidhit = \" \";\n      Monsterdidhit = \" \";\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"DandD_attack\"\n      }, React.createElement(\"div\", {\n        className: \"Attack-container\"\n      }, React.createElement(\"div\", {\n        className: \"Attack-section\"\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\"\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\"\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\"\n      }, HeroadjStats.HeroAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\"\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\"\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\"\n      }, HeroadjStats.HeroHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\"\n      }, React.createElement(\"button\", {\n        onClick: this.heroattack\n      }, \"Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\"\n      }, Herodidhit))), React.createElement(\"div\", {\n        className: \"Attack-container\"\n      }, React.createElement(\"div\", {\n        className: \"Attack-section\"\n      }, React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"StatRefresh DandD_button\"\n      }, React.createElement(\"button\", {\n        onClick: this.refresh\n      }, \"Refresh stats\")), React.createElement(\"div\", {\n        className: \"Initiative DandD_button\"\n      }, React.createElement(\"button\", {\n        onClick: this.rollforiniative\n      }, \"Roll for iniative\")), React.createElement(\"div\", {\n        className: \"Heroinitiative center Fsize-2\"\n      }, React.createElement(\"p\", null, \"Hero \", React.createElement(\"br\", null), \"iniative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\"\n      }, this.heroinitiative)), React.createElement(\"div\", {\n        className: \"Monsterinitiative center Fsize-2\"\n      }, React.createElement(\"p\", null, \"Monster initiative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\"\n      }, this.monsterinitiative))), React.createElement(\"div\", {\n        className: \"HeroHP-icon\"\n      }, React.createElement(\"img\", {\n        src: \"../static/images/herohp.png\"\n      }), React.createElement(\"p\", {\n        className: \"HeroHP-text Fsize-3 center\"\n      }, HeroadjStats.HeroHp)), React.createElement(\"div\", {\n        className: \"MonsterHP-icon\"\n      }, React.createElement(\"img\", {\n        src: \"../static/images/monsterhp.png\"\n      }), React.createElement(\"p\", {\n        className: \"MonsterHP-text Fsize-3 center\"\n      }, MonsteradjStats.MonsterHp)))), React.createElement(\"div\", {\n        className: \"Attack-container\"\n      }, React.createElement(\"div\", {\n        className: \"Attack-section\"\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\"\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\"\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\"\n      }, MonsteradjStats.MonsterAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\"\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\"\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\"\n      }, MonsteradjStats.MonsterHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\"\n      }, React.createElement(\"button\", {\n        onClick: this.Monsterattack\n      }, \"Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\"\n      }, Monsterdidhit)))));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":null,"metadata":{},"sourceType":"module"}