{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\tvpage.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport CSS from '../components/style.css';\nimport Layout2 from './tv_info/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar Search = '';\n\nvar Searchbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n\n  function Searchbar(props) {\n    var _this;\n\n    _classCallCheck(this, Searchbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searchbar).call(this, props));\n    _this.state = {\n      value: ''\n    };\n    _this.enterSearch = _this.enterSearch.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Searchbar, [{\n    key: \"enterSearch\",\n    value: function enterSearch(event) {\n      this.setState({\n        value: event.target.value\n      });\n      Search = event.target.value;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      Search = event.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Tvpagesearch-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.enterSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"/tvpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Searchbar;\n}(React.Component);\n\nvar TvPage = function TvPage(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"the below content has been imported from \", React.createElement(\"a\", {\n    href: \"https://www.tvmaze.com\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"TVmaze.com\")), React.createElement(Searchbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Layout2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Results for: \", Search), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/tvpost?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, show.name)));\n  }))));\n};\n\nTvPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=' + Search);\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default TvPage;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\tvpage.js"],"names":["React","Component","Layout","CSS","Layout2","Link","fetch","Search","Searchbar","props","state","value","enterSearch","bind","handleSubmit","event","setState","target","TvPage","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport CSS from '../components/style.css'\r\nimport Layout2 from './tv_info/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\n\r\nvar Search = '';\r\n\r\n\r\nclass Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.enterSearch = this.enterSearch.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  enterSearch(event) {\r\n    this.setState({value: event.target.value});\r\n    Search = (event.target.value);\r\n  }\r\n\r\n  handleSubmit() {\r\n    Search = (event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tvpagesearch-bar\">\r\n        <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" value={this.state.value} onChange={this.enterSearch} />\r\n        </label>\r\n        \r\n        \r\n        \r\n        \r\n      </form>\r\n      <button>\r\n      <Link href=\"/tvpage\">\r\n        <a>Submit</a>\r\n      </Link>\r\n      </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst TvPage = props => (\r\n  <Layout>\r\n    <h1 className=\"center\">the below content has been imported from <a href=\"https://www.tvmaze.com\" target=\"_blank\" rel=\"noopener noreferrer\">TVmaze.com</a></h1>\r\n     <Searchbar />\r\n     <Layout2>\r\n        <h1>Results for: {Search}</h1>\r\n        \r\n          <ul>\r\n            {props.shows.map(show => (\r\n              <li key={show.id}>\r\n                <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}</a>\r\n                </Link>\r\n              </li>\r\n              ))}\r\n            </ul>\r\n          \r\n          {/*<div className=\"tvbox\">\r\n            {props.shows.map(show => (\r\n              \r\n              <div key={show.id}>\r\n                <p>\r\n                 <Link as={`/p/${show.id}`} href={`/tvpost?id=${show.id}`}>\r\n                  <a>{show.name}<br /><img src={show.image.medium} /></a>\r\n                </Link>\r\n                </p>\r\n              </div>\r\n              ))}\r\n          </div>*/}\r\n      </Layout2>\r\n  </Layout>\r\n);\r\n\r\nTvPage.getInitialProps = async function() {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=' + Search);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default TvPage;"]},"metadata":{},"sourceType":"module"}