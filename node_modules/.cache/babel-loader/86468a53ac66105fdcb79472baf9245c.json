{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\monster.js\";\nimport React from 'react';\nimport { SetConstAdj } from './monsterfunctions';\nimport { setHitAdj } from './monsterfunctions';\nimport { setDmgAdj } from './monsterfunctions';\nimport { setacAdj } from './monsterfunctions';\nimport { MonsteradjStats } from './attacksim';\nexport { newMonster };\nvar newMonster = {\n  Str: 0,\n  Const: 0,\n  Dext: 0,\n  BaseHitPoints: 50,\n  BaseArmorClass: 10,\n  BaseDamage: 10,\n  BaseHitAdj: 0\n};\n\nvar Monster =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Monster, _React$Component);\n\n  function Monster(props) {\n    var _this;\n\n    _classCallCheck(this, Monster);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Monster).call(this, props));\n    _this.state = {\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      Name: ''\n    };\n    _this.setMonsterstats = _this.setMonsterstats.bind(_assertThisInitialized(_this));\n    _this.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterDmgAdj = setmonsterDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Monster, [{\n    key: \"setMonsterstats\",\n    value: function setMonsterstats() {\n      for (var key in this.state.monsterstats) {\n        this.state.monsterstats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ;\n      this.setState({\n        monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\n        monsterAc: this.monsterbase.ArmorClass + this.SetmonsteracAdj(),\n        monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\n        monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj()\n      });\n    } //displays name as entered into the name field. currently is\n    //a live event rather than on submit event.\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        Name: event.target.value\n      });\n    }\n    /*\r\n    setMonsterstats() {\r\n        //random number 1-20 to set newmonster stats\r\n        newMonster.Str = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Const = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Dext = Math.floor((Math.random() * 20) + 1);\r\n        //calls the adjusted functions in monster_functions to set adjusted monster\r\n        //stats in the attacksim.js\r\n        MonsteradjStats.MonsterHp = (newMonster.BaseHitPoints) + (SetConstAdj());\r\n        MonsteradjStats.MonsterAc = (newMonster.BaseArmorClass) + (setacAdj());\r\n        MonsteradjStats.MonsterDmg = (newMonster.BaseDamage) + (setDmgAdj());\r\n        MonsteradjStats.MonsterHitAdj = (newMonster.BaseHitAdj) + (setHitAdj());\r\n        //sets new state for each variable\r\n        this.setState({\r\n            str: newMonster.Str,\r\n            const: newMonster.Const,\r\n            dext: newMonster.Dext,\r\n            hp: MonsteradjStats.MonsterHp,\r\n            dmg: MonsteradjStats.MonsterDmg\r\n        });\r\n    } */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Monster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MonsterBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Name: \"), this.state.Name), React.createElement(\"table\", {\n        className: \"DandDstat_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Str)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Const)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Dext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \" \", this.state.monsterHp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Base Damage:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" \", this.state.monsterDmg)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"DnD_Monster Float-right\",\n        src: \"../static/images/monster.png\",\n        alt: \"monster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setMonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Monster;\n}(React.Component);\n\nexport default Monster;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\monster.js"],"names":["React","SetConstAdj","setHitAdj","setDmgAdj","setacAdj","MonsteradjStats","newMonster","Str","Const","Dext","BaseHitPoints","BaseArmorClass","BaseDamage","BaseHitAdj","Monster","props","state","monsterstats","monsterbase","Hp","ArmorClass","Damage","HitAdj","monsterHp","monsterAc","monsterDmg","monsterHitAdj","Name","setMonsterstats","bind","SetmonsterConstAdj","SetmonsteracAdj","SetmonsterDmgAdj","setmonsterDmgAdj","SetmonsterHitAdj","key","Math","floor","random","setState","event","target","value","handleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { SetConstAdj } from './monsterfunctions';\r\nimport { setHitAdj } from './monsterfunctions';\r\nimport { setDmgAdj } from './monsterfunctions';\r\nimport { setacAdj } from './monsterfunctions';\r\nimport { MonsteradjStats } from './attacksim';\r\nexport { newMonster }\r\n\r\n\r\nvar newMonster = {\r\n    Str: 0,\r\n    Const: 0,\r\n    Dext: 0,\r\n    BaseHitPoints: 50,\r\n    BaseArmorClass: 10,\r\n    BaseDamage: 10,\r\n    BaseHitAdj: 0\r\n};\r\n\r\nclass Monster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            Name: ''\r\n        };\r\n        this.setMonsterstats = this.setMonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = setmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n    }\r\n\r\n    setMonsterstats() {\r\n        for (let key in this.state.monsterstats) {\r\n            this.state.monsterstats[key] = Math.floor((Math.random() * 20) + 1);\r\n        };\r\n        this.setState ({\r\n            monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\r\n            monsterAc: this.monsterbase.ArmorClass + this.SetmonsteracAdj(),\r\n            monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\r\n            monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj(),\r\n        });\r\n    }\r\n    //displays name as entered into the name field. currently is\r\n    //a live event rather than on submit event.\r\n    handleChange(event) {\r\n        this.setState({Name: event.target.value});\r\n    }\r\n\r\n    /*\r\n    setMonsterstats() {\r\n        //random number 1-20 to set newmonster stats\r\n        newMonster.Str = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Const = Math.floor((Math.random() * 20) + 1);\r\n        newMonster.Dext = Math.floor((Math.random() * 20) + 1);\r\n        //calls the adjusted functions in monster_functions to set adjusted monster\r\n        //stats in the attacksim.js\r\n        MonsteradjStats.MonsterHp = (newMonster.BaseHitPoints) + (SetConstAdj());\r\n        MonsteradjStats.MonsterAc = (newMonster.BaseArmorClass) + (setacAdj());\r\n        MonsteradjStats.MonsterDmg = (newMonster.BaseDamage) + (setDmgAdj());\r\n        MonsteradjStats.MonsterHitAdj = (newMonster.BaseHitAdj) + (setHitAdj());\r\n        //sets new state for each variable\r\n        this.setState({\r\n            str: newMonster.Str,\r\n            const: newMonster.Const,\r\n            dext: newMonster.Dext,\r\n            hp: MonsteradjStats.MonsterHp,\r\n            dmg: MonsteradjStats.MonsterDmg\r\n        });\r\n    } */\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Monster\">\r\n                <div className=\"MonsterBox\">\r\n                    <div>\r\n                        <p><b>Name: </b>{ this.state.Name }</p>\r\n                        <table className=\"DandDstat_table\">\r\n                            <tr>\r\n                                <td>Strength:</td>\r\n                                <td> { this.state.monsterstats.Str }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Constitution:</td>\r\n                                <td> { this.state.monsterstats.Const }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dexterity:</td>\r\n                                <td> { this.state.monsterstats.Dext }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Hitpoints:</td>\r\n                                <td> { this.state.monsterHp }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Base Damage:</td>\r\n                                <td> { this.state.monsterDmg }</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <img className=\"DnD_Monster Float-right\" src=\"../static/images/monster.png\" alt=\"monster\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Stats-roll align-center\">\r\n                    <button onClick={this.setMonsterstats}>Set Attrubutes</button>\r\n                </div>\r\n                <div>\r\n                    <form>\r\n                        <label>\r\n                            Name:\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength=\"20\"\r\n                                value={this.state.value}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Monster;"]},"metadata":{},"sourceType":"module"}