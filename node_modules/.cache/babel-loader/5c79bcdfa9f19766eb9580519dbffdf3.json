{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Desktop\\\\newtest\\\\my-page\\\\pages\\\\DandD\\\\attacksim.js\";\nimport React from 'react';\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj } from './herofunctions';\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj } from './monsterfunctions'; //export { MonsteradjStats}\n//export { HeroadjStats }\n\n/*\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n} */\n//var Heroroll = 0;\n//var Monsterroll = 0;\n//var Herodidhit = \" \";\n//var Monsterdidhit = \" \";\n\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\n\nfunction heroattackroll() {\n  this.setState({\n    heroroll: Math.floor(Math.random() * 20 + 1)\n  });\n\n  if (this.state.heroroll >= this.state.monsterAc + this.state.heroAc) {\n    this.setState({\n      herodidhit: 'HIT',\n      monsterHp: this.state.monsterHp - this.state.heroDmg\n    });\n\n    if (this.state.monsterHp <= 0) {\n      this.setState({\n        monsterHp: 'Dead'\n      });\n    }\n  } else {\n    this.setState({\n      herodidhit: 'Miss'\n    });\n  }\n  /*\r\n      MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n      if (MonsteradjStats.MonsterHp <= 0 ) {\r\n          MonsteradjStats.MonsterHp = \"Dead\";\r\n      }\r\n  } else {\r\n      Herodidhit = \"MISS\";\r\n  }; */\n\n}\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\n\n\nfunction monsterattackroll() {\n  this.setState({\n    monsterroll: Math.floor(Math.random() * 20 + 1)\n  });\n\n  if (this.state.monsterroll >= this.state.heroAc + this.state.monsterHitAdj) {\n    this.setState({\n      monsterdidhit: 'Hit',\n      heroHp: this.state.heroHp - this.state.monsterDmg\n    });\n\n    if (this.state.heroHp <= 0) {\n      this.setState({\n        heroHp: 'Dead'\n      });\n    }\n  } else {\n    this.setState({\n      monsterdidhit: 'Miss'\n    });\n  }\n}\n\n;\n\nvar AttackSim =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttackSim, _React$Component);\n\n  function AttackSim(props) {\n    var _this;\n\n    _classCallCheck(this, AttackSim);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackSim).call(this, props)); //this.heroinitiative = 0;\n    //this.monsterinitiative = 0;\n\n    _this.state = {\n      herostats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      herobase: {\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      monsterstats: {\n        Str: 0,\n        Const: 0,\n        Dext: 0\n      },\n      monsterbase: {\n        Name: '',\n        Hp: 50,\n        ArmorClass: 10,\n        Damage: 10,\n        HitAdj: 0\n      },\n      heroHp: 0,\n      heroAc: 0,\n      heroDmg: 0,\n      heroHitAdj: 0,\n      heroName: '',\n      heroinitiative: 0,\n      heroroll: 0,\n      herodidhit: 0,\n      monsterHp: 0,\n      monsterAc: 0,\n      monsterDmg: 0,\n      monsterHitAdj: 0,\n      monsterName: '',\n      monsterinitiative: 0,\n      monsterroll: 0,\n      monsterdidhit: ''\n    };\n    _this.setherostats = _this.setherostats.bind(_assertThisInitialized(_this));\n    _this.SetheroConstAdj = SetheroConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroacAdj = SetheroacAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroDmgAdj = SetheroDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetheroHitAdj = SetheroHitAdj.bind(_assertThisInitialized(_this));\n    _this.heroNameChange = _this.heroNameChange.bind(_assertThisInitialized(_this));\n    _this.setMonsterstats = _this.setMonsterstats.bind(_assertThisInitialized(_this));\n    _this.SetmonsterConstAdj = SetmonsterConstAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsteracAdj = SetmonsteracAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(_assertThisInitialized(_this));\n    _this.SetmonsterHitAdj = SetmonsterHitAdj.bind(_assertThisInitialized(_this));\n    _this.monsterNameChange = _this.monsterNameChange.bind(_assertThisInitialized(_this));\n    _this.heroattackroll = heroattackroll.bind(_assertThisInitialized(_this));\n    _this.monsterattackroll = monsterattackroll.bind(_assertThisInitialized(_this));\n    _this.rollforiniative = _this.rollforiniative.bind(_assertThisInitialized(_this)); //this.heroattack = this.heroattack.bind(this);\n    //this.monsterattack = this.monsterattack.bind(this);\n\n    /*this.refresh = this.refresh.bind(this);\r\n    this.rollforiniative = this.rollforiniative.bind(this);\r\n    */\n\n    return _this;\n  }\n\n  _createClass(AttackSim, [{\n    key: \"setherostats\",\n    value: function setherostats() {\n      for (var key in this.state.herostats) {\n        this.state.herostats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ; //calls functions in hero_functions to adjust stats in\n      //heroadjstats variable in the attacksim.js\n\n      this.setState({\n        heroHp: this.state.herobase.Hp + this.SetheroConstAdj(),\n        heroAc: this.state.herobase.ArmorClass + this.SetheroacAdj(),\n        heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\n        heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj()\n      });\n    }\n  }, {\n    key: \"setMonsterstats\",\n    value: function setMonsterstats() {\n      for (var key in this.state.monsterstats) {\n        this.state.monsterstats[key] = Math.floor(Math.random() * 20 + 1);\n      }\n\n      ;\n      this.setState({\n        monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\n        monsterAc: this.state.monsterbase.ArmorClass + this.SetmonsteracAdj(),\n        monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\n        monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj()\n      });\n    }\n  }, {\n    key: \"heroNameChange\",\n    value: function heroNameChange(event) {\n      this.setState({\n        heroName: event.target.value\n      });\n    }\n  }, {\n    key: \"monsterNameChange\",\n    value: function monsterNameChange(event) {\n      this.setState({\n        monsterName: event.target.value\n      });\n    }\n  }, {\n    key: \"rollforiniative\",\n\n    /*hero attack roll, radomly generates number between 1 to 20.  Then\r\n    calls the hero attack roll function to determine successful attack.*/\n\n    /*monster attack roll, randomly generates number between 1 to 20.  Then \r\n    calls the monster attack roll function to determine successful attack. */\n\n    /*initiative role to determine if hero or monster attacks first.  sets \r\n    variable for initiative to determine first attack.  Who ever has lower \r\n    number goes first, on equal role, alerts that a reroll is necessary. */\n    value: function rollforiniative() {\n      this.Heroinitiative = Math.floor(Math.random() * 10 + 1);\n      this.Monsterinitiative = Math.floor(Math.random() * 10 + 1);\n\n      if (this.Heroinitiative < this.Honsterinitiative) {\n        this.setState({\n          heroinitiative: 'First',\n          monsterinitiative: 'Second'\n        }); //this.heroinitiative = \"First\";\n        //this.monsterinitiative = \"Second\";\n      } else if (this.Heroinitiative > this.Monsterinitiative) {\n        this.setState({\n          monsterinitiative: 'First',\n          heroinitiative: 'Second'\n        }); //this.monsterinitiative = \"First\";\n        //this.heroinitiative = \"Second\"\n      } else {\n        this.setState({\n          heroinitiative: 'ReRoll',\n          monsterinitiative: 'ReRoll'\n        }); //this.heroinitiative= 'ReRoll';\n        //this.monsterinitiative= 'ReRoll';\n      }\n\n      ;\n      this.setState({\n        herodidhit: '',\n        monsterdidhit: ''\n      }); //this.herodidhit = '';\n      //this.monsterdidhit = '';\n      //this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeroBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Name: \"), this.state.heroName), React.createElement(\"table\", {\n        className: \"DandDstat_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \" \", this.state.herostats.Str)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \" \", this.state.herostats.Const)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \" \", this.state.herostats.Dext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \" \", this.state.heroHp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Damage per hit:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \" \", this.state.heroDmg)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"DnD_Hero Float-right\",\n        src: \"../static/images/hero.png\",\n        alt: \"hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setherostats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.heroNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"Monster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MonsterBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Name: \"), this.state.monsterName), React.createElement(\"table\", {\n        className: \"DandDstat_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Strength:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Str)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Constitution:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Const)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Dexterity:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \" \", this.state.monsterstats.Dext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Hitpoints:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \" \", this.state.monsterHp)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Base Damage:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \" \", this.state.monsterDmg)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"DnD_Monster Float-right\",\n        src: \"../static/images/monster.png\",\n        alt: \"monster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"Stats-roll align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setMonsterstats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Set Attrubutes\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        maxLength: \"20\",\n        value: this.state.value,\n        onChange: this.monsterNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        alt: \"shield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, this.state.heroAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, this.state.heroHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.heroattackroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Hero Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, this.state.herodidhit)), React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Initiative DandD_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.rollforiniative,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Roll for iniative\")), React.createElement(\"div\", {\n        className: \"Heroinitiative center Fsize-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Hero \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), \"iniative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, this.heroinitiative)), React.createElement(\"div\", {\n        className: \"Monsterinitiative center Fsize-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"Monster initiative:\"), React.createElement(\"p\", {\n        className: \"Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, this.monsterinitiative)), React.createElement(\"div\", {\n        className: \"HeroHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/herohp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HeroHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, this.state.heroHp)), React.createElement(\"div\", {\n        className: \"MonsterHP-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/monsterhp.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"MonsterHP-text Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, this.state.monsterHp))), React.createElement(\"div\", {\n        className: \"Attack-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AC-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/acicon.png\",\n        alt: \"shield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"AC-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, this.state.monsterAc)), React.createElement(\"div\", {\n        className: \"HitAdj-Icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../static/images/hitadjust.png\",\n        alt: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"HitAdj-Icon-text Fsize-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, this.state.monsterHitAdj)), React.createElement(\"div\", {\n        className: \"Attack-roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.monsterattackroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"Monster Roll for Attack\")), React.createElement(\"div\", {\n        className: \"Attack-result Fsize-3 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, this.state.monsterdidhit)));\n    }\n  }]);\n\n  return AttackSim;\n}(React.Component);\n\nexport default AttackSim;","map":{"version":3,"sources":["C:\\Users\\Mark\\Desktop\\newtest\\my-page\\pages\\DandD\\attacksim.js"],"names":["React","SetheroConstAdj","SetheroHitAdj","SetheroDmgAdj","SetheroacAdj","SetmonsterConstAdj","SetmonsterHitAdj","SetmonsterDmgAdj","SetmonsteracAdj","heroattackroll","setState","heroroll","Math","floor","random","state","monsterAc","heroAc","herodidhit","monsterHp","heroDmg","monsterattackroll","monsterroll","monsterHitAdj","monsterdidhit","heroHp","monsterDmg","AttackSim","props","herostats","Str","Const","Dext","herobase","Hp","ArmorClass","Damage","HitAdj","monsterstats","monsterbase","Name","heroHitAdj","heroName","heroinitiative","monsterName","monsterinitiative","setherostats","bind","heroNameChange","setMonsterstats","monsterNameChange","rollforiniative","key","event","target","value","Heroinitiative","Monsterinitiative","Honsterinitiative","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { SetheroConstAdj, SetheroHitAdj, SetheroDmgAdj, SetheroacAdj } from './herofunctions'\r\nimport { SetmonsterConstAdj, SetmonsterHitAdj, SetmonsterDmgAdj, SetmonsteracAdj } from './monsterfunctions'\r\n//export { MonsteradjStats}\r\n//export { HeroadjStats }\r\n\r\n/*\r\nvar MonsteradjStats = {\r\n    MonsterHp: 0,\r\n    MonsterAc: 0,\r\n    MonsterDmg: 0,\r\n    MonsterHitAdj: 0\r\n}\r\n\r\nvar HeroadjStats = {\r\n    HeroHp: 0,\r\n    HeroAc: 0,\r\n    HeroDmg: 0,\r\n    HeroHitAdj: 0\r\n} */\r\n\r\n//var Heroroll = 0;\r\n//var Monsterroll = 0;\r\n\r\n//var Herodidhit = \" \";\r\n//var Monsterdidhit = \" \";\r\n\r\n/* determins if the hero successfully hits the monster.  adjusts for monster\r\narmor class and hero hit adjustment.  on successful attack role, applies damage\r\nto monster hp and if hp reaches zero alerts that monster is dead */\r\n\r\nfunction heroattackroll() {\r\n    this.setState ({heroroll: Math.floor((Math.random() * 20) + 1)});\r\n    if (this.state.heroroll >= (this.state.monsterAc + this.state.heroAc)) {\r\n        this.setState ({\r\n            herodidhit: 'HIT',\r\n            monsterHp: (this.state.monsterHp - this.state.heroDmg)\r\n        });\r\n        if (this.state.monsterHp <= 0) {\r\n            this.setState ({monsterHp: 'Dead'});\r\n        }\r\n    } else {\r\n        this.setState ({herodidhit: 'Miss'});\r\n    }\r\n\r\n\r\n    /*\r\n        MonsteradjStats.MonsterHp = (MonsteradjStats.MonsterHp - 10);\r\n        if (MonsteradjStats.MonsterHp <= 0 ) {\r\n            MonsteradjStats.MonsterHp = \"Dead\";\r\n        }\r\n    } else {\r\n        Herodidhit = \"MISS\";\r\n    }; */\r\n}\r\n\r\n/* determins if the monster successfully hits the hero.  adjusts for hero\r\narmor class andmonster hit adjustment.  on successful attack role, applies damage\r\nto hero hp and if hp reaches zero alerts that hero is dead */\r\n\r\nfunction monsterattackroll() {\r\n    this.setState ({monsterroll: Math.floor((Math.random() * 20) + 1)});\r\n    if (this.state.monsterroll >= (this.state.heroAc + this.state.monsterHitAdj )) {\r\n        this.setState({\r\n            monsterdidhit: 'Hit',\r\n            heroHp: (this.state.heroHp - this.state.monsterDmg)\r\n        });\r\n        if (this.state.heroHp <= 0) {\r\n            this.setState ({heroHp: 'Dead'})\r\n        }\r\n    } else {\r\n        this.setState ({monsterdidhit: 'Miss'});\r\n    }\r\n};\r\n\r\n\r\nclass AttackSim extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        //this.heroinitiative = 0;\r\n        //this.monsterinitiative = 0;\r\n        this.state = { \r\n            herostats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            herobase: {\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            monsterstats: {\r\n                Str: 0,\r\n                Const: 0,\r\n                Dext: 0\r\n            },\r\n            monsterbase: {\r\n                Name: '',\r\n                Hp: 50,\r\n                ArmorClass: 10,\r\n                Damage: 10,\r\n                HitAdj: 0\r\n            },\r\n            heroHp: 0,\r\n            heroAc: 0,\r\n            heroDmg: 0,\r\n            heroHitAdj: 0,\r\n            heroName: '',\r\n            heroinitiative: 0,\r\n            heroroll: 0,\r\n            herodidhit: 0,\r\n            monsterHp: 0,\r\n            monsterAc: 0,\r\n            monsterDmg: 0,\r\n            monsterHitAdj: 0,\r\n            monsterName: '',\r\n            monsterinitiative: 0,\r\n            monsterroll: 0,\r\n            monsterdidhit: '',\r\n\r\n        };\r\n\r\n        this.setherostats = this.setherostats.bind(this);\r\n        this.SetheroConstAdj = SetheroConstAdj.bind(this);\r\n        this.SetheroacAdj = SetheroacAdj.bind(this);\r\n        this.SetheroDmgAdj = SetheroDmgAdj.bind(this);\r\n        this.SetheroHitAdj = SetheroHitAdj.bind(this);\r\n        this.heroNameChange = this.heroNameChange.bind(this);\r\n\r\n        this.setMonsterstats = this.setMonsterstats.bind(this);\r\n        this.SetmonsterConstAdj = SetmonsterConstAdj.bind(this);\r\n        this.SetmonsteracAdj = SetmonsteracAdj.bind(this);\r\n        this.SetmonsterDmgAdj = SetmonsterDmgAdj.bind(this);\r\n        this.SetmonsterHitAdj = SetmonsterHitAdj.bind(this);\r\n        this.monsterNameChange = this.monsterNameChange.bind(this);\r\n\r\n\r\n        this.heroattackroll = heroattackroll.bind(this);\r\n        this.monsterattackroll = monsterattackroll.bind(this);\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n        //this.heroattack = this.heroattack.bind(this);\r\n        //this.monsterattack = this.monsterattack.bind(this);\r\n        /*this.refresh = this.refresh.bind(this);\r\n        this.rollforiniative = this.rollforiniative.bind(this);\r\n        */\r\n    }\r\n\r\n    setherostats() {\r\n        for (let key in this.state.herostats) {\r\n            this.state.herostats[key] = Math.floor((Math.random() * 20) + 1);\r\n        };\r\n        //calls functions in hero_functions to adjust stats in\r\n        //heroadjstats variable in the attacksim.js\r\n        this.setState ({\r\n            heroHp: this.state.herobase.Hp + this.SetheroConstAdj(),\r\n            heroAc: this.state.herobase.ArmorClass + this.SetheroacAdj(),\r\n            heroDmg: this.state.herobase.Damage + this.SetheroDmgAdj(),\r\n            heroHitAdj: this.state.herobase.HitAdj + this.SetheroHitAdj(),\r\n        });\r\n    };\r\n\r\n    setMonsterstats() {\r\n        for (let key in this.state.monsterstats) {\r\n            this.state.monsterstats[key] = Math.floor((Math.random() * 20) + 1);\r\n        };\r\n        this.setState ({\r\n            monsterHp: this.state.monsterbase.Hp + this.SetmonsterConstAdj(),\r\n            monsterAc: this.state.monsterbase.ArmorClass + this.SetmonsteracAdj(),\r\n            monsterDmg: this.state.monsterbase.Damage + this.SetmonsterDmgAdj(),\r\n            monsterHitAdj: this.state.monsterbase.HitAdj + this.SetmonsterHitAdj(),\r\n        });\r\n    };\r\n\r\n    heroNameChange(event) {\r\n        this.setState ({heroName : event.target.value});\r\n    };\r\n\r\n    monsterNameChange(event) {\r\n        this.setState ({monsterName : event.target.value});\r\n    };\r\n\r\n    /*hero attack roll, radomly generates number between 1 to 20.  Then\r\n    calls the hero attack roll function to determine successful attack.*/\r\n\r\n\r\n    \r\n    /*monster attack roll, randomly generates number between 1 to 20.  Then \r\n    calls the monster attack roll function to determine successful attack. */\r\n\r\n    \r\n    /*initiative role to determine if hero or monster attacks first.  sets \r\n    variable for initiative to determine first attack.  Who ever has lower \r\n    number goes first, on equal role, alerts that a reroll is necessary. */\r\n\r\n    rollforiniative() {\r\n        \r\n        this.Heroinitiative = Math.floor((Math.random() * 10) + 1);\r\n        this.Monsterinitiative = Math.floor((Math.random() * 10) + 1);\r\n        if (this.Heroinitiative < this.Honsterinitiative) {\r\n            this.setState ({\r\n                heroinitiative: 'First',\r\n                monsterinitiative: 'Second'\r\n            });\r\n            //this.heroinitiative = \"First\";\r\n            //this.monsterinitiative = \"Second\";\r\n        } else if (this.Heroinitiative > this.Monsterinitiative) {\r\n            this.setState ({\r\n                monsterinitiative: 'First',\r\n                heroinitiative: 'Second'\r\n            });\r\n            //this.monsterinitiative = \"First\";\r\n            //this.heroinitiative = \"Second\"\r\n        } else {\r\n            this.setState ({\r\n                heroinitiative: 'ReRoll',\r\n                monsterinitiative: 'ReRoll'\r\n            })\r\n                //this.heroinitiative= 'ReRoll';\r\n                //this.monsterinitiative= 'ReRoll';\r\n            \r\n            \r\n        };\r\n            this.setState ({\r\n                herodidhit: '',\r\n                monsterdidhit: ''\r\n            });\r\n            //this.herodidhit = '';\r\n           //this.monsterdidhit = '';\r\n        //this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Hero\">\r\n                <div className=\"HeroBox\">\r\n                    <div>\r\n                    <p><b>Name: </b>{ this.state.heroName }</p>\r\n                        <table className=\"DandDstat_table\">\r\n                            <tr>\r\n                                <td>Strength:</td>\r\n                                <td> { this.state.herostats.Str }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Constitution:</td>\r\n                                <td> { this.state.herostats.Const }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dexterity:</td>\r\n                                <td> { this.state.herostats.Dext }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Hitpoints:</td>\r\n                                <td> { this.state.heroHp }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Damage per hit:</td>\r\n                                <td> { this.state.heroDmg }</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <img className=\"DnD_Hero Float-right\" src=\"../static/images/hero.png\" alt=\"hero\"/> \r\n                    </div>\r\n                </div>\r\n                <div className=\"Stats-roll align-center\">\r\n                    <button onClick={ this.setherostats }>Set Attrubutes</button>\r\n                </div>\r\n                <div>\r\n                    <form>\r\n                        <label>\r\n                            Name:\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength=\"20\"\r\n                                value={this.state.value}\r\n                                onChange={this.heroNameChange}\r\n                            />\r\n                        </label>\r\n                    </form> \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Monster\">\r\n                <div className=\"MonsterBox\">\r\n                    <div>\r\n                        <p><b>Name: </b>{ this.state.monsterName }</p>\r\n                        <table className=\"DandDstat_table\">\r\n                            <tr>\r\n                                <td>Strength:</td>\r\n                                <td> { this.state.monsterstats.Str }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Constitution:</td>\r\n                                <td> { this.state.monsterstats.Const }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dexterity:</td>\r\n                                <td> { this.state.monsterstats.Dext }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Hitpoints:</td>\r\n                                <td> { this.state.monsterHp }</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Base Damage:</td>\r\n                                <td> { this.state.monsterDmg }</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <img className=\"DnD_Monster Float-right\" src=\"../static/images/monster.png\" alt=\"monster\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Stats-roll align-center\">\r\n                    <button onClick={this.setMonsterstats}>Set Attrubutes</button>\r\n                </div>\r\n                <div>\r\n                    <form>\r\n                        <label>\r\n                            Name:\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength=\"20\"\r\n                                value={this.state.value}\r\n                                onChange={this.monsterNameChange}\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n                {/*displays hero stats and attack information */}\r\n                <div className=\"Attack-section\">\r\n                    <div className=\"AC-Icon\">\r\n                        <img src=\"../static/images/acicon.png\" alt=\"shield\"/>\r\n                        <p className=\"AC-Icon-text Fsize-3\">\r\n                            { this.state.heroAc }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"HitAdj-Icon\">\r\n                        <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                        <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                            { this.state.heroHitAdj }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"Attack-roll\">\r\n                        <button  onClick={this.heroattackroll}>\r\n                            Hero Roll for Attack\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"Attack-result Fsize-3 center\">\r\n                        { this.state.herodidhit }\r\n                    </div>\r\n                </div>\r\n                  {/*main field to control attack simulation placed between\r\n                     hero info and monster info */}  \r\n                <div className=\"Attack-section\">    \r\n                    \r\n                    <div className=\"Initiative DandD_button\">\r\n                        <button onClick={this.rollforiniative}>Roll for iniative</button>\r\n                    </div>\r\n                    <div className=\"Heroinitiative center Fsize-2\">\r\n                        <p>Hero <br/>iniative:</p>\r\n                        <p className=\"Fsize-3\">{this.heroinitiative}</p>\r\n                    </div>\r\n                    <div className=\"Monsterinitiative center Fsize-2\">\r\n                        <p>Monster initiative:</p>\r\n                        <p className=\"Fsize-3\">{this.monsterinitiative}</p>\r\n                    </div>  \r\n                    <div className=\"HeroHP-icon\">\r\n                        <img src=\"../static/images/herohp.png\" alt=\"icon\"/>\r\n                        <p className=\"HeroHP-text Fsize-3 center\">\r\n                            { this.state.heroHp }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"MonsterHP-icon\">\r\n                        <img src=\"../static/images/monsterhp.png\" alt=\"icon\"/>\r\n                        <p className=\"MonsterHP-text Fsize-3 center\">\r\n                            { this.state.monsterHp }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {/*displays Monster stats and attack information */}\r\n                <div className=\"Attack-section\">\r\n                    <div className=\"AC-Icon\">\r\n                        <img src=\"../static/images/acicon.png\" alt=\"shield\" />\r\n                        <p className=\"AC-Icon-text Fsize-3\">\r\n                            { this.state.monsterAc }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"HitAdj-Icon\">\r\n                        <img src=\"../static/images/hitadjust.png\" alt=\"icon\"/>\r\n                        <p className=\"HitAdj-Icon-text Fsize-3\">\r\n                            { this.state.monsterHitAdj }\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"Attack-roll\">\r\n                        <button onClick={this.monsterattackroll}>\r\n                            Monster Roll for Attack\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"Attack-result Fsize-3 center\">\r\n                        { this.state.monsterdidhit }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AttackSim"]},"metadata":{},"sourceType":"module"}